a0c78cf07d553c2f3cff3b5cde54d3d7
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var EventEmitter = require('../vendor/emitter/EventEmitter');

var EventSubscriptionVendor = require('../vendor/emitter/EventSubscriptionVendor');

function checkNativeEventModule(eventType) {
  if (eventType) {
    if (eventType.lastIndexOf('statusBar', 0) === 0) {
      throw new Error('`' + eventType + '` event should be registered via the StatusBarIOS module');
    }

    if (eventType.lastIndexOf('keyboard', 0) === 0) {
      throw new Error('`' + eventType + '` event should be registered via the Keyboard module');
    }

    if (eventType === 'appStateDidChange' || eventType === 'memoryWarning') {
      throw new Error('`' + eventType + '` event should be registered via the AppState module');
    }
  }
}

var RCTDeviceEventEmitter = function (_EventEmitter) {
  (0, _inherits2.default)(RCTDeviceEventEmitter, _EventEmitter);

  function RCTDeviceEventEmitter() {
    var _this;

    (0, _classCallCheck2.default)(this, RCTDeviceEventEmitter);
    var sharedSubscriber = new EventSubscriptionVendor();
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(RCTDeviceEventEmitter).call(this, sharedSubscriber));
    _this.sharedSubscriber = sharedSubscriber;
    return _this;
  }

  (0, _createClass2.default)(RCTDeviceEventEmitter, [{
    key: "addListener",
    value: function addListener(eventType, listener, context) {
      if (__DEV__) {
        checkNativeEventModule(eventType);
      }

      return (0, _get2.default)((0, _getPrototypeOf2.default)(RCTDeviceEventEmitter.prototype), "addListener", this).call(this, eventType, listener, context);
    }
  }, {
    key: "removeAllListeners",
    value: function removeAllListeners(eventType) {
      if (__DEV__) {
        checkNativeEventModule(eventType);
      }

      (0, _get2.default)((0, _getPrototypeOf2.default)(RCTDeviceEventEmitter.prototype), "removeAllListeners", this).call(this, eventType);
    }
  }, {
    key: "removeSubscription",
    value: function removeSubscription(subscription) {
      if (subscription.emitter !== this) {
        subscription.emitter.removeSubscription(subscription);
      } else {
        (0, _get2.default)((0, _getPrototypeOf2.default)(RCTDeviceEventEmitter.prototype), "removeSubscription", this).call(this, subscription);
      }
    }
  }]);
  return RCTDeviceEventEmitter;
}(EventEmitter);

module.exports = new RCTDeviceEventEmitter();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlJDVERldmljZUV2ZW50RW1pdHRlci5qcyJdLCJuYW1lcyI6WyJFdmVudEVtaXR0ZXIiLCJyZXF1aXJlIiwiRXZlbnRTdWJzY3JpcHRpb25WZW5kb3IiLCJjaGVja05hdGl2ZUV2ZW50TW9kdWxlIiwiZXZlbnRUeXBlIiwibGFzdEluZGV4T2YiLCJFcnJvciIsIlJDVERldmljZUV2ZW50RW1pdHRlciIsInNoYXJlZFN1YnNjcmliZXIiLCJsaXN0ZW5lciIsImNvbnRleHQiLCJfX0RFVl9fIiwic3Vic2NyaXB0aW9uIiwiZW1pdHRlciIsInJlbW92ZVN1YnNjcmlwdGlvbiIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQVVBOzs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsWUFBWSxHQUFHQyxPQUFPLENBQUMsZ0NBQUQsQ0FBNUI7O0FBQ0EsSUFBTUMsdUJBQXVCLEdBQUdELE9BQU8sQ0FBQywyQ0FBRCxDQUF2Qzs7QUFJQSxTQUFTRSxzQkFBVCxDQUFnQ0MsU0FBaEMsRUFBb0Q7QUFDbEQsTUFBSUEsU0FBSixFQUFlO0FBQ2IsUUFBSUEsU0FBUyxDQUFDQyxXQUFWLENBQXNCLFdBQXRCLEVBQW1DLENBQW5DLE1BQTBDLENBQTlDLEVBQWlEO0FBQy9DLFlBQU0sSUFBSUMsS0FBSixDQUNKLE1BQ0VGLFNBREYsR0FFRSwwREFIRSxDQUFOO0FBS0Q7O0FBQ0QsUUFBSUEsU0FBUyxDQUFDQyxXQUFWLENBQXNCLFVBQXRCLEVBQWtDLENBQWxDLE1BQXlDLENBQTdDLEVBQWdEO0FBQzlDLFlBQU0sSUFBSUMsS0FBSixDQUNKLE1BQ0VGLFNBREYsR0FFRSxzREFIRSxDQUFOO0FBS0Q7O0FBQ0QsUUFBSUEsU0FBUyxLQUFLLG1CQUFkLElBQXFDQSxTQUFTLEtBQUssZUFBdkQsRUFBd0U7QUFDdEUsWUFBTSxJQUFJRSxLQUFKLENBQ0osTUFDRUYsU0FERixHQUVFLHNEQUhFLENBQU47QUFLRDtBQUNGO0FBQ0Y7O0lBTUtHLHFCOzs7QUFHSixtQ0FBYztBQUFBOztBQUFBO0FBQ1osUUFBTUMsZ0JBQWdCLEdBQUcsSUFBSU4sdUJBQUosRUFBekI7QUFDQSwySEFBTU0sZ0JBQU47QUFDQSxVQUFLQSxnQkFBTCxHQUF3QkEsZ0JBQXhCO0FBSFk7QUFJYjs7OztnQ0FHQ0osUyxFQUNBSyxRLEVBQ0FDLE8sRUFDcUI7QUFDckIsVUFBSUMsT0FBSixFQUFhO0FBQ1hSLFFBQUFBLHNCQUFzQixDQUFDQyxTQUFELENBQXRCO0FBQ0Q7O0FBQ0QsZ0lBQXlCQSxTQUF6QixFQUFvQ0ssUUFBcEMsRUFBOENDLE9BQTlDO0FBQ0Q7Ozt1Q0FFa0JOLFMsRUFBb0I7QUFDckMsVUFBSU8sT0FBSixFQUFhO0FBQ1hSLFFBQUFBLHNCQUFzQixDQUFDQyxTQUFELENBQXRCO0FBQ0Q7O0FBQ0QsZ0lBQXlCQSxTQUF6QjtBQUNEOzs7dUNBRWtCUSxZLEVBQW1DO0FBQ3BELFVBQUlBLFlBQVksQ0FBQ0MsT0FBYixLQUF5QixJQUE3QixFQUFtQztBQUNqQ0QsUUFBQUEsWUFBWSxDQUFDQyxPQUFiLENBQXFCQyxrQkFBckIsQ0FBd0NGLFlBQXhDO0FBQ0QsT0FGRCxNQUVPO0FBQ0wsa0lBQXlCQSxZQUF6QjtBQUNEO0FBQ0Y7OztFQWpDaUNaLFk7O0FBb0NwQ2UsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLElBQUlULHFCQUFKLEVBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZm9ybWF0XG4gKiBAZmxvd1xuICovXG5cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgRXZlbnRFbWl0dGVyID0gcmVxdWlyZSgnLi4vdmVuZG9yL2VtaXR0ZXIvRXZlbnRFbWl0dGVyJyk7XG5jb25zdCBFdmVudFN1YnNjcmlwdGlvblZlbmRvciA9IHJlcXVpcmUoJy4uL3ZlbmRvci9lbWl0dGVyL0V2ZW50U3Vic2NyaXB0aW9uVmVuZG9yJyk7XG5cbmltcG9ydCB0eXBlIEVtaXR0ZXJTdWJzY3JpcHRpb24gZnJvbSAnLi4vdmVuZG9yL2VtaXR0ZXIvRW1pdHRlclN1YnNjcmlwdGlvbic7XG5cbmZ1bmN0aW9uIGNoZWNrTmF0aXZlRXZlbnRNb2R1bGUoZXZlbnRUeXBlOiA/c3RyaW5nKSB7XG4gIGlmIChldmVudFR5cGUpIHtcbiAgICBpZiAoZXZlbnRUeXBlLmxhc3RJbmRleE9mKCdzdGF0dXNCYXInLCAwKSA9PT0gMCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAnYCcgK1xuICAgICAgICAgIGV2ZW50VHlwZSArXG4gICAgICAgICAgJ2AgZXZlbnQgc2hvdWxkIGJlIHJlZ2lzdGVyZWQgdmlhIHRoZSBTdGF0dXNCYXJJT1MgbW9kdWxlJyxcbiAgICAgICk7XG4gICAgfVxuICAgIGlmIChldmVudFR5cGUubGFzdEluZGV4T2YoJ2tleWJvYXJkJywgMCkgPT09IDApIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ2AnICtcbiAgICAgICAgICBldmVudFR5cGUgK1xuICAgICAgICAgICdgIGV2ZW50IHNob3VsZCBiZSByZWdpc3RlcmVkIHZpYSB0aGUgS2V5Ym9hcmQgbW9kdWxlJyxcbiAgICAgICk7XG4gICAgfVxuICAgIGlmIChldmVudFR5cGUgPT09ICdhcHBTdGF0ZURpZENoYW5nZScgfHwgZXZlbnRUeXBlID09PSAnbWVtb3J5V2FybmluZycpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcbiAgICAgICAgJ2AnICtcbiAgICAgICAgICBldmVudFR5cGUgK1xuICAgICAgICAgICdgIGV2ZW50IHNob3VsZCBiZSByZWdpc3RlcmVkIHZpYSB0aGUgQXBwU3RhdGUgbW9kdWxlJyxcbiAgICAgICk7XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogRGVwcmVjYXRlZCAtIHN1YmNsYXNzIE5hdGl2ZUV2ZW50RW1pdHRlciB0byBjcmVhdGUgZ3JhbnVsYXIgZXZlbnQgbW9kdWxlcyBpbnN0ZWFkIG9mXG4gKiBhZGRpbmcgYWxsIGV2ZW50IGxpc3RlbmVycyBkaXJlY3RseSB0byBSQ1REZXZpY2VFdmVudEVtaXR0ZXIuXG4gKi9cbmNsYXNzIFJDVERldmljZUV2ZW50RW1pdHRlciBleHRlbmRzIEV2ZW50RW1pdHRlciB7XG4gIHNoYXJlZFN1YnNjcmliZXI6IEV2ZW50U3Vic2NyaXB0aW9uVmVuZG9yO1xuXG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIGNvbnN0IHNoYXJlZFN1YnNjcmliZXIgPSBuZXcgRXZlbnRTdWJzY3JpcHRpb25WZW5kb3IoKTtcbiAgICBzdXBlcihzaGFyZWRTdWJzY3JpYmVyKTtcbiAgICB0aGlzLnNoYXJlZFN1YnNjcmliZXIgPSBzaGFyZWRTdWJzY3JpYmVyO1xuICB9XG5cbiAgYWRkTGlzdGVuZXIoXG4gICAgZXZlbnRUeXBlOiBzdHJpbmcsXG4gICAgbGlzdGVuZXI6IEZ1bmN0aW9uLFxuICAgIGNvbnRleHQ6ID9PYmplY3QsXG4gICk6IEVtaXR0ZXJTdWJzY3JpcHRpb24ge1xuICAgIGlmIChfX0RFVl9fKSB7XG4gICAgICBjaGVja05hdGl2ZUV2ZW50TW9kdWxlKGV2ZW50VHlwZSk7XG4gICAgfVxuICAgIHJldHVybiBzdXBlci5hZGRMaXN0ZW5lcihldmVudFR5cGUsIGxpc3RlbmVyLCBjb250ZXh0KTtcbiAgfVxuXG4gIHJlbW92ZUFsbExpc3RlbmVycyhldmVudFR5cGU6ID9zdHJpbmcpIHtcbiAgICBpZiAoX19ERVZfXykge1xuICAgICAgY2hlY2tOYXRpdmVFdmVudE1vZHVsZShldmVudFR5cGUpO1xuICAgIH1cbiAgICBzdXBlci5yZW1vdmVBbGxMaXN0ZW5lcnMoZXZlbnRUeXBlKTtcbiAgfVxuXG4gIHJlbW92ZVN1YnNjcmlwdGlvbihzdWJzY3JpcHRpb246IEVtaXR0ZXJTdWJzY3JpcHRpb24pIHtcbiAgICBpZiAoc3Vic2NyaXB0aW9uLmVtaXR0ZXIgIT09IHRoaXMpIHtcbiAgICAgIHN1YnNjcmlwdGlvbi5lbWl0dGVyLnJlbW92ZVN1YnNjcmlwdGlvbihzdWJzY3JpcHRpb24pO1xuICAgIH0gZWxzZSB7XG4gICAgICBzdXBlci5yZW1vdmVTdWJzY3JpcHRpb24oc3Vic2NyaXB0aW9uKTtcbiAgICB9XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBuZXcgUkNURGV2aWNlRXZlbnRFbWl0dGVyKCk7XG4iXX0=