b1a7e80402e1106e5cc71e09362fad57
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;

var _Provider = _interopRequireDefault(require("./components/Provider"));

exports.Provider = _Provider["default"];

var _connectAdvanced = _interopRequireDefault(require("./components/connectAdvanced"));

exports.connectAdvanced = _connectAdvanced["default"];

var _Context = require("./components/Context");

exports.ReactReduxContext = _Context.ReactReduxContext;

var _connect = _interopRequireDefault(require("./connect/connect"));

exports.connect = _connect["default"];

var _useDispatch = require("./hooks/useDispatch");

exports.useDispatch = _useDispatch.useDispatch;
exports.createDispatchHook = _useDispatch.createDispatchHook;

var _useSelector = require("./hooks/useSelector");

exports.useSelector = _useSelector.useSelector;
exports.createSelectorHook = _useSelector.createSelectorHook;

var _useStore = require("./hooks/useStore");

exports.useStore = _useStore.useStore;
exports.createStoreHook = _useStore.createStoreHook;

var _batch = require("./utils/batch");

var _reactBatchedUpdates = require("./utils/reactBatchedUpdates");

exports.batch = _reactBatchedUpdates.unstable_batchedUpdates;

var _shallowEqual = _interopRequireDefault(require("./utils/shallowEqual"));

exports.shallowEqual = _shallowEqual["default"];
(0, _batch.setBatch)(_reactBatchedUpdates.unstable_batchedUpdates);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiZXhwb3J0cyIsIl9fZXNNb2R1bGUiLCJfUHJvdmlkZXIiLCJQcm92aWRlciIsIl9jb25uZWN0QWR2YW5jZWQiLCJjb25uZWN0QWR2YW5jZWQiLCJfQ29udGV4dCIsIlJlYWN0UmVkdXhDb250ZXh0IiwiX2Nvbm5lY3QiLCJjb25uZWN0IiwiX3VzZURpc3BhdGNoIiwidXNlRGlzcGF0Y2giLCJjcmVhdGVEaXNwYXRjaEhvb2siLCJfdXNlU2VsZWN0b3IiLCJ1c2VTZWxlY3RvciIsImNyZWF0ZVNlbGVjdG9ySG9vayIsIl91c2VTdG9yZSIsInVzZVN0b3JlIiwiY3JlYXRlU3RvcmVIb29rIiwiX2JhdGNoIiwiX3JlYWN0QmF0Y2hlZFVwZGF0ZXMiLCJiYXRjaCIsInVuc3RhYmxlX2JhdGNoZWRVcGRhdGVzIiwiX3NoYWxsb3dFcXVhbCIsInNoYWxsb3dFcXVhbCIsInNldEJhdGNoIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxJQUFJQSxzQkFBc0IsR0FBR0MsT0FBTyxDQUFDLDhDQUFELENBQXBDOztBQUVBQyxPQUFPLENBQUNDLFVBQVIsR0FBcUIsSUFBckI7O0FBRUEsSUFBSUMsU0FBUyxHQUFHSixzQkFBc0IsQ0FBQ0MsT0FBTyxDQUFDLHVCQUFELENBQVIsQ0FBdEM7O0FBRUFDLE9BQU8sQ0FBQ0csUUFBUixHQUFtQkQsU0FBUyxDQUFDLFNBQUQsQ0FBNUI7O0FBRUEsSUFBSUUsZ0JBQWdCLEdBQUdOLHNCQUFzQixDQUFDQyxPQUFPLENBQUMsOEJBQUQsQ0FBUixDQUE3Qzs7QUFFQUMsT0FBTyxDQUFDSyxlQUFSLEdBQTBCRCxnQkFBZ0IsQ0FBQyxTQUFELENBQTFDOztBQUVBLElBQUlFLFFBQVEsR0FBR1AsT0FBTyxDQUFDLHNCQUFELENBQXRCOztBQUVBQyxPQUFPLENBQUNPLGlCQUFSLEdBQTRCRCxRQUFRLENBQUNDLGlCQUFyQzs7QUFFQSxJQUFJQyxRQUFRLEdBQUdWLHNCQUFzQixDQUFDQyxPQUFPLENBQUMsbUJBQUQsQ0FBUixDQUFyQzs7QUFFQUMsT0FBTyxDQUFDUyxPQUFSLEdBQWtCRCxRQUFRLENBQUMsU0FBRCxDQUExQjs7QUFFQSxJQUFJRSxZQUFZLEdBQUdYLE9BQU8sQ0FBQyxxQkFBRCxDQUExQjs7QUFFQUMsT0FBTyxDQUFDVyxXQUFSLEdBQXNCRCxZQUFZLENBQUNDLFdBQW5DO0FBQ0FYLE9BQU8sQ0FBQ1ksa0JBQVIsR0FBNkJGLFlBQVksQ0FBQ0Usa0JBQTFDOztBQUVBLElBQUlDLFlBQVksR0FBR2QsT0FBTyxDQUFDLHFCQUFELENBQTFCOztBQUVBQyxPQUFPLENBQUNjLFdBQVIsR0FBc0JELFlBQVksQ0FBQ0MsV0FBbkM7QUFDQWQsT0FBTyxDQUFDZSxrQkFBUixHQUE2QkYsWUFBWSxDQUFDRSxrQkFBMUM7O0FBRUEsSUFBSUMsU0FBUyxHQUFHakIsT0FBTyxDQUFDLGtCQUFELENBQXZCOztBQUVBQyxPQUFPLENBQUNpQixRQUFSLEdBQW1CRCxTQUFTLENBQUNDLFFBQTdCO0FBQ0FqQixPQUFPLENBQUNrQixlQUFSLEdBQTBCRixTQUFTLENBQUNFLGVBQXBDOztBQUVBLElBQUlDLE1BQU0sR0FBR3BCLE9BQU8sQ0FBQyxlQUFELENBQXBCOztBQUVBLElBQUlxQixvQkFBb0IsR0FBR3JCLE9BQU8sQ0FBQyw2QkFBRCxDQUFsQzs7QUFFQUMsT0FBTyxDQUFDcUIsS0FBUixHQUFnQkQsb0JBQW9CLENBQUNFLHVCQUFyQzs7QUFFQSxJQUFJQyxhQUFhLEdBQUd6QixzQkFBc0IsQ0FBQ0MsT0FBTyxDQUFDLHNCQUFELENBQVIsQ0FBMUM7O0FBRUFDLE9BQU8sQ0FBQ3dCLFlBQVIsR0FBdUJELGFBQWEsQ0FBQyxTQUFELENBQXBDO0FBQ0EsQ0FBQyxHQUFHSixNQUFNLENBQUNNLFFBQVgsRUFBcUJMLG9CQUFvQixDQUFDRSx1QkFBMUMiLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxudmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQgPSByZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZURlZmF1bHRcIik7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfUHJvdmlkZXIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2NvbXBvbmVudHMvUHJvdmlkZXJcIikpO1xuXG5leHBvcnRzLlByb3ZpZGVyID0gX1Byb3ZpZGVyW1wiZGVmYXVsdFwiXTtcblxudmFyIF9jb25uZWN0QWR2YW5jZWQgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL2NvbXBvbmVudHMvY29ubmVjdEFkdmFuY2VkXCIpKTtcblxuZXhwb3J0cy5jb25uZWN0QWR2YW5jZWQgPSBfY29ubmVjdEFkdmFuY2VkW1wiZGVmYXVsdFwiXTtcblxudmFyIF9Db250ZXh0ID0gcmVxdWlyZShcIi4vY29tcG9uZW50cy9Db250ZXh0XCIpO1xuXG5leHBvcnRzLlJlYWN0UmVkdXhDb250ZXh0ID0gX0NvbnRleHQuUmVhY3RSZWR1eENvbnRleHQ7XG5cbnZhciBfY29ubmVjdCA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vY29ubmVjdC9jb25uZWN0XCIpKTtcblxuZXhwb3J0cy5jb25uZWN0ID0gX2Nvbm5lY3RbXCJkZWZhdWx0XCJdO1xuXG52YXIgX3VzZURpc3BhdGNoID0gcmVxdWlyZShcIi4vaG9va3MvdXNlRGlzcGF0Y2hcIik7XG5cbmV4cG9ydHMudXNlRGlzcGF0Y2ggPSBfdXNlRGlzcGF0Y2gudXNlRGlzcGF0Y2g7XG5leHBvcnRzLmNyZWF0ZURpc3BhdGNoSG9vayA9IF91c2VEaXNwYXRjaC5jcmVhdGVEaXNwYXRjaEhvb2s7XG5cbnZhciBfdXNlU2VsZWN0b3IgPSByZXF1aXJlKFwiLi9ob29rcy91c2VTZWxlY3RvclwiKTtcblxuZXhwb3J0cy51c2VTZWxlY3RvciA9IF91c2VTZWxlY3Rvci51c2VTZWxlY3RvcjtcbmV4cG9ydHMuY3JlYXRlU2VsZWN0b3JIb29rID0gX3VzZVNlbGVjdG9yLmNyZWF0ZVNlbGVjdG9ySG9vaztcblxudmFyIF91c2VTdG9yZSA9IHJlcXVpcmUoXCIuL2hvb2tzL3VzZVN0b3JlXCIpO1xuXG5leHBvcnRzLnVzZVN0b3JlID0gX3VzZVN0b3JlLnVzZVN0b3JlO1xuZXhwb3J0cy5jcmVhdGVTdG9yZUhvb2sgPSBfdXNlU3RvcmUuY3JlYXRlU3RvcmVIb29rO1xuXG52YXIgX2JhdGNoID0gcmVxdWlyZShcIi4vdXRpbHMvYmF0Y2hcIik7XG5cbnZhciBfcmVhY3RCYXRjaGVkVXBkYXRlcyA9IHJlcXVpcmUoXCIuL3V0aWxzL3JlYWN0QmF0Y2hlZFVwZGF0ZXNcIik7XG5cbmV4cG9ydHMuYmF0Y2ggPSBfcmVhY3RCYXRjaGVkVXBkYXRlcy51bnN0YWJsZV9iYXRjaGVkVXBkYXRlcztcblxudmFyIF9zaGFsbG93RXF1YWwgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCIuL3V0aWxzL3NoYWxsb3dFcXVhbFwiKSk7XG5cbmV4cG9ydHMuc2hhbGxvd0VxdWFsID0gX3NoYWxsb3dFcXVhbFtcImRlZmF1bHRcIl07XG4oMCwgX2JhdGNoLnNldEJhdGNoKShfcmVhY3RCYXRjaGVkVXBkYXRlcy51bnN0YWJsZV9iYXRjaGVkVXBkYXRlcyk7Il19