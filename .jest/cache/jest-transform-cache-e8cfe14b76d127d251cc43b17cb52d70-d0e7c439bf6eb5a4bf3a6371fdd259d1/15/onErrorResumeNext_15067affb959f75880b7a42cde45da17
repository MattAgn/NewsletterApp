235437b7b50d58139321bbf3480099ec
"use strict";

var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (b.hasOwnProperty(p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});

var from_1 = require("../observable/from");

var isArray_1 = require("../util/isArray");

var OuterSubscriber_1 = require("../OuterSubscriber");

var InnerSubscriber_1 = require("../InnerSubscriber");

var subscribeToResult_1 = require("../util/subscribeToResult");

function onErrorResumeNext() {
  var nextSources = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    nextSources[_i] = arguments[_i];
  }

  if (nextSources.length === 1 && isArray_1.isArray(nextSources[0])) {
    nextSources = nextSources[0];
  }

  return function (source) {
    return source.lift(new OnErrorResumeNextOperator(nextSources));
  };
}

exports.onErrorResumeNext = onErrorResumeNext;

function onErrorResumeNextStatic() {
  var nextSources = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    nextSources[_i] = arguments[_i];
  }

  var source = null;

  if (nextSources.length === 1 && isArray_1.isArray(nextSources[0])) {
    nextSources = nextSources[0];
  }

  source = nextSources.shift();
  return from_1.from(source, null).lift(new OnErrorResumeNextOperator(nextSources));
}

exports.onErrorResumeNextStatic = onErrorResumeNextStatic;

var OnErrorResumeNextOperator = function () {
  function OnErrorResumeNextOperator(nextSources) {
    this.nextSources = nextSources;
  }

  OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));
  };

  return OnErrorResumeNextOperator;
}();

var OnErrorResumeNextSubscriber = function (_super) {
  __extends(OnErrorResumeNextSubscriber, _super);

  function OnErrorResumeNextSubscriber(destination, nextSources) {
    var _this = _super.call(this, destination) || this;

    _this.destination = destination;
    _this.nextSources = nextSources;
    return _this;
  }

  OnErrorResumeNextSubscriber.prototype.notifyError = function (error, innerSub) {
    this.subscribeToNextSource();
  };

  OnErrorResumeNextSubscriber.prototype.notifyComplete = function (innerSub) {
    this.subscribeToNextSource();
  };

  OnErrorResumeNextSubscriber.prototype._error = function (err) {
    this.subscribeToNextSource();
    this.unsubscribe();
  };

  OnErrorResumeNextSubscriber.prototype._complete = function () {
    this.subscribeToNextSource();
    this.unsubscribe();
  };

  OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {
    var next = this.nextSources.shift();

    if (!!next) {
      var innerSubscriber = new InnerSubscriber_1.InnerSubscriber(this, undefined, undefined);
      var destination = this.destination;
      destination.add(innerSubscriber);
      subscribeToResult_1.subscribeToResult(this, next, undefined, undefined, innerSubscriber);
    } else {
      this.destination.complete();
    }
  };

  return OnErrorResumeNextSubscriber;
}(OuterSubscriber_1.OuterSubscriber);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pbnRlcm5hbC9vcGVyYXRvcnMvb25FcnJvclJlc3VtZU5leHQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxJQUFBLE1BQUEsR0FBQSxPQUFBLENBQUEsb0JBQUEsQ0FBQTs7QUFJQSxJQUFBLFNBQUEsR0FBQSxPQUFBLENBQUEsaUJBQUEsQ0FBQTs7QUFDQSxJQUFBLGlCQUFBLEdBQUEsT0FBQSxDQUFBLG9CQUFBLENBQUE7O0FBQ0EsSUFBQSxpQkFBQSxHQUFBLE9BQUEsQ0FBQSxvQkFBQSxDQUFBOztBQUNBLElBQUEsbUJBQUEsR0FBQSxPQUFBLENBQUEsMkJBQUEsQ0FBQTs7QUFvRkEsU0FBZ0IsaUJBQWhCLEdBQWlDO0FBQU8sTUFBQSxXQUFBLEdBQUEsRUFBQTs7T0FBQSxJQUFBLEVBQUEsR0FBQSxDLEVBQUEsRUFBQSxHQUFBLFNBQUEsQ0FBQSxNLEVBQUEsRUFBQSxFLEVBQzJDO0FBRDNDLElBQUEsV0FBQSxDQUFBLEVBQUEsQ0FBQSxHQUFBLFNBQUEsQ0FBQSxFQUFBLENBQUE7OztBQUV0QyxNQUFJLFdBQVcsQ0FBQyxNQUFaLEtBQXVCLENBQXZCLElBQTRCLFNBQUEsQ0FBQSxPQUFBLENBQVEsV0FBVyxDQUFDLENBQUQsQ0FBbkIsQ0FBaEMsRUFBeUQ7QUFDdkQsSUFBQSxXQUFXLEdBQTJCLFdBQVcsQ0FBQyxDQUFELENBQWpEO0FBQ0Q7O0FBRUQsU0FBTyxVQUFDLE1BQUQsRUFBc0I7QUFBSyxXQUFBLE1BQU0sQ0FBQyxJQUFQLENBQVksSUFBSSx5QkFBSixDQUFaLFdBQVksQ0FBWixDQUFBO0FBQTZELEdBQS9GO0FBQ0Q7O0FBUEQsT0FBQSxDQUFBLGlCQUFBLEdBQUEsaUJBQUE7O0FBb0JBLFNBQWdCLHVCQUFoQixHQUF1QztBQUFPLE1BQUEsV0FBQSxHQUFBLEVBQUE7O09BQUEsSUFBQSxFQUFBLEdBQUEsQyxFQUFBLEVBQUEsR0FBQSxTQUFBLENB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