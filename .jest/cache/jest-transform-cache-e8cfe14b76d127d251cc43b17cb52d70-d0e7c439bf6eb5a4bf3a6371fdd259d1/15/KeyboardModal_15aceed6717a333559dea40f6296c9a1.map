{"version":3,"sources":["KeyboardModal.js"],"names":["renderModal","props","open","height","backgroundColor","style","easingAnimation","children","keyboardModalInstance","displayedKeyboardComponent","keyboardModalCount","keyboardDidShowListener","currentProps","updateKeyboardModalComponent","update","keyboardComponent","displayed","keyboardDidShow","createKeyboardModalComponent","RootSiblings","Keyboard","addListener","removeKeyboardModalComponent","remove","destroy","KeyboardModal","nextProps","dismiss","PureComponent","defaultProps","Easing","ease"],"mappings":"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","sourcesContent":["// @flow\n\nimport React, { PureComponent } from \"react\";\nimport { Easing, Keyboard } from \"react-native\";\nimport Modal from \"react-native-modalbox\";\nimport RootSiblings from \"react-native-root-siblings\";\n\ntype PropsType = {\n  style: Object,\n  easingAnimation: () => void,\n  children: any\n};\n\nconst renderModal = (props: PropsType, open: ?boolean) => (\n  <Modal\n    backdrop={false}\n    position=\"bottom\"\n    isOpen={open}\n    style={[\n      { height: 216, backgroundColor: \"rgb(200, 203, 211)\" },\n      props.style\n    ]}\n    easing={props.easingAnimation}\n  >\n    {props.children}\n  </Modal>\n);\n\nlet keyboardModalInstance = null;\nlet displayedKeyboardComponent = null;\nlet keyboardModalCount = 0;\nlet keyboardDidShowListener = null;\nlet currentProps;\n\nconst updateKeyboardModalComponent = (props: PropsType, open: ?boolean) => {\n  if (open) currentProps = props;\n  if (keyboardModalInstance)\n    keyboardModalInstance.update(renderModal(props, open));\n};\n\nconst open = (keyboardComponent: any) => {\n  if (displayedKeyboardComponent) displayedKeyboardComponent.displayed = false;\n\n  displayedKeyboardComponent = keyboardComponent;\n  displayedKeyboardComponent.displayed = true;\n\n  updateKeyboardModalComponent(keyboardComponent.props, true);\n};\n\nconst keyboardDidShow = () => updateKeyboardModalComponent(currentProps, false);\n\nconst createKeyboardModalComponent = (props: PropsType) => {\n  keyboardModalCount += 1;\n\n  if (keyboardModalCount > 1) return;\n\n  currentProps = props;\n\n  keyboardModalInstance = new RootSiblings(renderModal(props));\n  keyboardDidShowListener = Keyboard.addListener(\n    \"keyboardWillShow\",\n    keyboardDidShow\n  );\n};\n\nconst removeKeyboardModalComponent = () => {\n  keyboardModalCount -= 1;\n\n  if (keyboardModalCount === 0) {\n    if (keyboardDidShowListener) keyboardDidShowListener.remove();\n    if (keyboardModalInstance) keyboardModalInstance.destroy();\n  }\n};\n\nexport default class KeyboardModal extends PureComponent {\n  static dismiss() {\n    if (keyboardModalCount > 0) {\n      updateKeyboardModalComponent(currentProps, false);\n    }\n  }\n\n  static defaultProps = {\n    easingAnimation: Easing.ease\n  };\n\n  componentWillMount() {\n    createKeyboardModalComponent(this.props);\n  }\n\n  componentWillReceiveProps(nextProps: PropsType) {\n    if (this.displayed) {\n      updateKeyboardModalComponent(nextProps);\n    }\n  }\n\n  componentWillUnmount() {\n    removeKeyboardModalComponent();\n  }\n\n  displayed: boolean = false;\n\n  open() {\n    this.displayed = true;\n    Keyboard.dismiss();\n    open(this);\n  }\n\n  close() {\n    this.displayed = false;\n    updateKeyboardModalComponent(this.props, false);\n  }\n\n  render() {\n    return null;\n  }\n}\n"]}