615d8f89345d58177bfe4732d3d6db0e
'use strict';

var AssetRegistry = require('./AssetRegistry');

var AssetSourceResolver = require('./AssetSourceResolver');

var _customSourceTransformer, _serverURL, _scriptURL;

var _sourceCodeScriptURL;

function getSourceCodeScriptURL() {
  if (_sourceCodeScriptURL) {
    return _sourceCodeScriptURL;
  }

  var sourceCode = global.nativeExtensions && global.nativeExtensions.SourceCode;

  if (!sourceCode) {
    var NativeModules = require('../BatchedBridge/NativeModules');

    sourceCode = NativeModules && NativeModules.SourceCode;
  }

  _sourceCodeScriptURL = sourceCode.scriptURL;
  return _sourceCodeScriptURL;
}

function getDevServerURL() {
  if (_serverURL === undefined) {
    var sourceCodeScriptURL = getSourceCodeScriptURL();
    var match = sourceCodeScriptURL && sourceCodeScriptURL.match(/^https?:\/\/.*?\//);

    if (match) {
      _serverURL = match[0];
    } else {
      _serverURL = null;
    }
  }

  return _serverURL;
}

function _coerceLocalScriptURL(scriptURL) {
  if (scriptURL) {
    if (scriptURL.startsWith('assets://')) {
      return null;
    }

    scriptURL = scriptURL.substring(0, scriptURL.lastIndexOf('/') + 1);

    if (!scriptURL.includes('://')) {
      scriptURL = 'file://' + scriptURL;
    }
  }

  return scriptURL;
}

function getScriptURL() {
  if (_scriptURL === undefined) {
    _scriptURL = _coerceLocalScriptURL(getSourceCodeScriptURL());
  }

  return _scriptURL;
}

function setCustomSourceTransformer(transformer) {
  _customSourceTransformer = transformer;
}

function resolveAssetSource(source) {
  if (typeof source === 'object') {
    return source;
  }

  var asset = AssetRegistry.getAssetByID(source);

  if (!asset) {
    return null;
  }

  var resolver = new AssetSourceResolver(getDevServerURL(), getScriptURL(), asset);

  if (_customSourceTransformer) {
    return _customSourceTransformer(resolver);
  }

  return resolver.defaultAsset();
}

module.exports = resolveAssetSource;
module.exports.pickScale = AssetSourceResolver.pickScale;
module.exports.setCustomSourceTransformer = setCustomSourceTransformer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc29sdmVBc3NldFNvdXJjZS5qcyJdLCJuYW1lcyI6WyJBc3NldFJlZ2lzdHJ5IiwicmVxdWlyZSIsIkFzc2V0U291cmNlUmVzb2x2ZXIiLCJfY3VzdG9tU291cmNlVHJhbnNmb3JtZXIiLCJfc2VydmVyVVJMIiwiX3NjcmlwdFVSTCIsIl9zb3VyY2VDb2RlU2NyaXB0VVJMIiwiZ2V0U291cmNlQ29kZVNjcmlwdFVSTCIsInNvdXJjZUNvZGUiLCJnbG9iYWwiLCJuYXRpdmVFeHRlbnNpb25zIiwiU291cmNlQ29kZSIsIk5hdGl2ZU1vZHVsZXMiLCJzY3JpcHRVUkwiLCJnZXREZXZTZXJ2ZXJVUkwiLCJ1bmRlZmluZWQiLCJzb3VyY2VDb2RlU2NyaXB0VVJMIiwibWF0Y2giLCJfY29lcmNlTG9jYWxTY3JpcHRVUkwiLCJzdGFydHNXaXRoIiwic3Vic3RyaW5nIiwibGFzdEluZGV4T2YiLCJpbmNsdWRlcyIsImdldFNjcmlwdFVSTCIsInNldEN1c3RvbVNvdXJjZVRyYW5zZm9ybWVyIiwidHJhbnNmb3JtZXIiLCJyZXNvbHZlQXNzZXRTb3VyY2UiLCJzb3VyY2UiLCJhc3NldCIsImdldEFzc2V0QnlJRCIsInJlc29sdmVyIiwiZGVmYXVsdEFzc2V0IiwibW9kdWxlIiwiZXhwb3J0cyIsInBpY2tTY2FsZSJdLCJtYXBwaW5ncyI6IkFBYUE7O0FBRUEsSUFBTUEsYUFBYSxHQUFHQyxPQUFPLENBQUMsaUJBQUQsQ0FBN0I7O0FBQ0EsSUFBTUMsbUJBQW1CLEdBQUdELE9BQU8sQ0FBQyx1QkFBRCxDQUFuQzs7QUFJQSxJQUFJRSx3QkFBSixFQUE4QkMsVUFBOUIsRUFBMENDLFVBQTFDOztBQUVBLElBQUlDLG9CQUFKOztBQUNBLFNBQVNDLHNCQUFULEdBQTJDO0FBQ3pDLE1BQUlELG9CQUFKLEVBQTBCO0FBQ3hCLFdBQU9BLG9CQUFQO0FBQ0Q7O0FBRUQsTUFBSUUsVUFBVSxHQUNaQyxNQUFNLENBQUNDLGdCQUFQLElBQTJCRCxNQUFNLENBQUNDLGdCQUFQLENBQXdCQyxVQURyRDs7QUFFQSxNQUFJLENBQUNILFVBQUwsRUFBaUI7QUFDZixRQUFNSSxhQUFhLEdBQUdYLE9BQU8sQ0FBQyxnQ0FBRCxDQUE3Qjs7QUFDQU8sSUFBQUEsVUFBVSxHQUFHSSxhQUFhLElBQUlBLGFBQWEsQ0FBQ0QsVUFBNUM7QUFDRDs7QUFDREwsRUFBQUEsb0JBQW9CLEdBQUdFLFVBQVUsQ0FBQ0ssU0FBbEM7QUFDQSxTQUFPUCxvQkFBUDtBQUNEOztBQUVELFNBQVNRLGVBQVQsR0FBb0M7QUFDbEMsTUFBSVYsVUFBVSxLQUFLVyxTQUFuQixFQUE4QjtBQUM1QixRQUFNQyxtQkFBbUIsR0FBR1Qsc0JBQXNCLEVBQWxEO0FBQ0EsUUFBTVUsS0FBSyxHQUNURCxtQkFBbUIsSUFBSUEsbUJBQW1CLENBQUNDLEtBQXBCLENBQTBCLG1CQUExQixDQUR6Qjs7QUFFQSxRQUFJQSxLQUFKLEVBQVc7QUFFVGIsTUFBQUEsVUFBVSxHQUFHYSxLQUFLLENBQUMsQ0FBRCxDQUFsQjtBQUNELEtBSEQsTUFHTztBQUVMYixNQUFBQSxVQUFVLEdBQUcsSUFBYjtBQUNEO0FBQ0Y7O0FBQ0QsU0FBT0EsVUFBUDtBQUNEOztBQUVELFNBQVNjLHFCQUFULENBQStCTCxTQUEvQixFQUE0RDtBQUMxRCxNQUFJQSxTQUFKLEVBQWU7QUFDYixRQUFJQSxTQUFTLENBQUNNLFVBQVYsQ0FBcUIsV0FBckIsQ0FBSixFQUF1QztBQUVyQyxhQUFPLElBQVA7QUFDRDs7QUFDRE4sSUFBQUEsU0FBUyxHQUFHQSxTQUFTLENBQUNPLFNBQVYsQ0FBb0IsQ0FBcEIsRUFBdUJQLFNBQVMsQ0FBQ1EsV0FBVixDQUFzQixHQUF0QixJQUE2QixDQUFwRCxDQUFaOztBQUNBLFFBQUksQ0FBQ1IsU0FBUyxDQUFDUyxRQUFWLENBQW1CLEtBQW5CLENBQUwsRUFBZ0M7QUFHOUJULE1BQUFBLFNBQVMsR0FBRyxZQUFZQSxTQUF4QjtBQUNEO0FBQ0Y7O0FBQ0QsU0FBT0EsU0FBUDtBQUNEOztBQUVELFNBQVNVLFlBQVQsR0FBaUM7QUFDL0IsTUFBSWxCLFVBQVUsS0FBS1UsU0FBbkIsRUFBOEI7QUFDNUJWLElBQUFBLFVBQVUsR0FBR2EscUJBQXFCLENBQUNYLHNCQUFzQixFQUF2QixDQUFsQztBQUNEOztBQUNELFNBQU9GLFVBQVA7QUFDRDs7QUFFRCxTQUFTbUIsMEJBQVQsQ0FDRUMsV0FERixFQUVRO0FBQ050QixFQUFBQSx3QkFBd0IsR0FBR3NCLFdBQTNCO0FBQ0Q7O0FBTUQsU0FBU0Msa0JBQVQsQ0FBNEJDLE1BQTVCLEVBQStEO0FBQzdELE1BQUksT0FBT0EsTUFBUCxLQUFrQixRQUF0QixFQUFnQztBQUM5QixXQUFPQSxNQUFQO0FBQ0Q7O0FBRUQsTUFBTUMsS0FBSyxHQUFHNUIsYUFBYSxDQUFDNkIsWUFBZCxDQUEyQkYsTUFBM0IsQ0FBZDs7QUFDQSxNQUFJLENBQUNDLEtBQUwsRUFBWTtBQUNWLFdBQU8sSUFBUDtBQUNEOztBQUVELE1BQU1FLFFBQVEsR0FBRyxJQUFJNUIsbUJBQUosQ0FDZlksZUFBZSxFQURBLEVBRWZTLFlBQVksRUFGRyxFQUdmSyxLQUhlLENBQWpCOztBQUtBLE1BQUl6Qix3QkFBSixFQUE4QjtBQUM1QixXQUFPQSx3QkFBd0IsQ0FBQzJCLFFBQUQsQ0FBL0I7QUFDRDs7QUFDRCxTQUFPQSxRQUFRLENBQUNDLFlBQVQsRUFBUDtBQUNEOztBQUVEQyxNQUFNLENBQUNDLE9BQVAsR0FBaUJQLGtCQUFqQjtBQUNBTSxNQUFNLENBQUNDLE9BQVAsQ0FBZUMsU0FBZixHQUEyQmhDLG1CQUFtQixDQUFDZ0MsU0FBL0M7QUFDQUYsTUFBTSxDQUFDQyxPQUFQLENBQWVULDBCQUFmLEdBQTRDQSwwQkFBNUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqXG4gKiBSZXNvbHZlcyBhbiBhc3NldCBpbnRvIGEgYHNvdXJjZWAgZm9yIGBJbWFnZWAuXG4gKlxuICogQGZvcm1hdFxuICogQGZsb3dcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IEFzc2V0UmVnaXN0cnkgPSByZXF1aXJlKCcuL0Fzc2V0UmVnaXN0cnknKTtcbmNvbnN0IEFzc2V0U291cmNlUmVzb2x2ZXIgPSByZXF1aXJlKCcuL0Fzc2V0U291cmNlUmVzb2x2ZXInKTtcblxuaW1wb3J0IHR5cGUge1Jlc29sdmVkQXNzZXRTb3VyY2V9IGZyb20gJy4vQXNzZXRTb3VyY2VSZXNvbHZlcic7XG5cbmxldCBfY3VzdG9tU291cmNlVHJhbnNmb3JtZXIsIF9zZXJ2ZXJVUkwsIF9zY3JpcHRVUkw7XG5cbmxldCBfc291cmNlQ29kZVNjcmlwdFVSTDogP3N0cmluZztcbmZ1bmN0aW9uIGdldFNvdXJjZUNvZGVTY3JpcHRVUkwoKTogP3N0cmluZyB7XG4gIGlmIChfc291cmNlQ29kZVNjcmlwdFVSTCkge1xuICAgIHJldHVybiBfc291cmNlQ29kZVNjcmlwdFVSTDtcbiAgfVxuXG4gIGxldCBzb3VyY2VDb2RlID1cbiAgICBnbG9iYWwubmF0aXZlRXh0ZW5zaW9ucyAmJiBnbG9iYWwubmF0aXZlRXh0ZW5zaW9ucy5Tb3VyY2VDb2RlO1xuICBpZiAoIXNvdXJjZUNvZGUpIHtcbiAgICBjb25zdCBOYXRpdmVNb2R1bGVzID0gcmVxdWlyZSgnLi4vQmF0Y2hlZEJyaWRnZS9OYXRpdmVNb2R1bGVzJyk7XG4gICAgc291cmNlQ29kZSA9IE5hdGl2ZU1vZHVsZXMgJiYgTmF0aXZlTW9kdWxlcy5Tb3VyY2VDb2RlO1xuICB9XG4gIF9zb3VyY2VDb2RlU2NyaXB0VVJMID0gc291cmNlQ29kZS5zY3JpcHRVUkw7XG4gIHJldHVybiBfc291cmNlQ29kZVNjcmlwdFVSTDtcbn1cblxuZnVuY3Rpb24gZ2V0RGV2U2VydmVyVVJMKCk6ID9zdHJpbmcge1xuICBpZiAoX3NlcnZlclVSTCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgY29uc3Qgc291cmNlQ29kZVNjcmlwdFVSTCA9IGdldFNvdXJjZUNvZGVTY3JpcHRVUkwoKTtcbiAgICBjb25zdCBtYXRjaCA9XG4gICAgICBzb3VyY2VDb2RlU2NyaXB0VVJMICYmIHNvdXJjZUNvZGVTY3JpcHRVUkwubWF0Y2goL15odHRwcz86XFwvXFwvLio/XFwvLyk7XG4gICAgaWYgKG1hdGNoKSB7XG4gICAgICAvLyBqc0J1bmRsZSB3YXMgbG9hZGVkIGZyb20gbmV0d29ya1xuICAgICAgX3NlcnZlclVSTCA9IG1hdGNoWzBdO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyBqc0J1bmRsZSB3YXMgbG9hZGVkIGZyb20gZmlsZVxuICAgICAgX3NlcnZlclVSTCA9IG51bGw7XG4gICAgfVxuICB9XG4gIHJldHVybiBfc2VydmVyVVJMO1xufVxuXG5mdW5jdGlvbiBfY29lcmNlTG9jYWxTY3JpcHRVUkwoc2NyaXB0VVJMOiA/c3RyaW5nKTogP3N0cmluZyB7XG4gIGlmIChzY3JpcHRVUkwpIHtcbiAgICBpZiAoc2NyaXB0VVJMLnN0YXJ0c1dpdGgoJ2Fzc2V0czovLycpKSB7XG4gICAgICAvLyBhbmRyb2lkOiBydW5uaW5nIGZyb20gd2l0aGluIGFzc2V0cywgbm8gb2ZmbGluZSBwYXRoIHRvIHVzZVxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHNjcmlwdFVSTCA9IHNjcmlwdFVSTC5zdWJzdHJpbmcoMCwgc2NyaXB0VVJMLmxhc3RJbmRleE9mKCcvJykgKyAxKTtcbiAgICBpZiAoIXNjcmlwdFVSTC5pbmNsdWRlcygnOi8vJykpIHtcbiAgICAgIC8vIEFkZCBmaWxlIHByb3RvY29sIGluIGNhc2Ugd2UgaGF2ZSBhbiBhYnNvbHV0ZSBmaWxlIHBhdGggYW5kIG5vdCBhIFVSTC5cbiAgICAgIC8vIFRoaXMgc2hvdWxkbid0IHJlYWxseSBiZSBuZWNlc3NhcnkuIHNjcmlwdFVSTCBzaG91bGQgYmUgYSBVUkwuXG4gICAgICBzY3JpcHRVUkwgPSAnZmlsZTovLycgKyBzY3JpcHRVUkw7XG4gICAgfVxuICB9XG4gIHJldHVybiBzY3JpcHRVUkw7XG59XG5cbmZ1bmN0aW9uIGdldFNjcmlwdFVSTCgpOiA/c3RyaW5nIHtcbiAgaWYgKF9zY3JpcHRVUkwgPT09IHVuZGVmaW5lZCkge1xuICAgIF9zY3JpcHRVUkwgPSBfY29lcmNlTG9jYWxTY3JpcHRVUkwoZ2V0U291cmNlQ29kZVNjcmlwdFVSTCgpKTtcbiAgfVxuICByZXR1cm4gX3NjcmlwdFVSTDtcbn1cblxuZnVuY3Rpb24gc2V0Q3VzdG9tU291cmNlVHJhbnNmb3JtZXIoXG4gIHRyYW5zZm9ybWVyOiAocmVzb2x2ZXI6IEFzc2V0U291cmNlUmVzb2x2ZXIpID0+IFJlc29sdmVkQXNzZXRTb3VyY2UsXG4pOiB2b2lkIHtcbiAgX2N1c3RvbVNvdXJjZVRyYW5zZm9ybWVyID0gdHJhbnNmb3JtZXI7XG59XG5cbi8qKlxuICogYHNvdXJjZWAgaXMgZWl0aGVyIGEgbnVtYmVyIChvcGFxdWUgdHlwZSByZXR1cm5lZCBieSByZXF1aXJlKCcuL2Zvby5wbmcnKSlcbiAqIG9yIGFuIGBJbWFnZVNvdXJjZWAgbGlrZSB7IHVyaTogJzxodHRwIGxvY2F0aW9uIHx8IGZpbGUgcGF0aD4nIH1cbiAqL1xuZnVuY3Rpb24gcmVzb2x2ZUFzc2V0U291cmNlKHNvdXJjZTogYW55KTogP1Jlc29sdmVkQXNzZXRTb3VyY2Uge1xuICBpZiAodHlwZW9mIHNvdXJjZSA9PT0gJ29iamVjdCcpIHtcbiAgICByZXR1cm4gc291cmNlO1xuICB9XG5cbiAgY29uc3QgYXNzZXQgPSBBc3NldFJlZ2lzdHJ5LmdldEFzc2V0QnlJRChzb3VyY2UpO1xuICBpZiAoIWFzc2V0KSB7XG4gICAgcmV0dXJuIG51bGw7XG4gIH1cblxuICBjb25zdCByZXNvbHZlciA9IG5ldyBBc3NldFNvdXJjZVJlc29sdmVyKFxuICAgIGdldERldlNlcnZlclVSTCgpLFxuICAgIGdldFNjcmlwdFVSTCgpLFxuICAgIGFzc2V0LFxuICApO1xuICBpZiAoX2N1c3RvbVNvdXJjZVRyYW5zZm9ybWVyKSB7XG4gICAgcmV0dXJuIF9jdXN0b21Tb3VyY2VUcmFuc2Zvcm1lcihyZXNvbHZlcik7XG4gIH1cbiAgcmV0dXJuIHJlc29sdmVyLmRlZmF1bHRBc3NldCgpO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHJlc29sdmVBc3NldFNvdXJjZTtcbm1vZHVsZS5leHBvcnRzLnBpY2tTY2FsZSA9IEFzc2V0U291cmNlUmVzb2x2ZXIucGlja1NjYWxlO1xubW9kdWxlLmV4cG9ydHMuc2V0Q3VzdG9tU291cmNlVHJhbnNmb3JtZXIgPSBzZXRDdXN0b21Tb3VyY2VUcmFuc2Zvcm1lcjtcbiJdfQ==