e67fd98eea1f344a2a3a2d0810bc8f46
"use strict";

var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (b.hasOwnProperty(p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});

var Subscriber_1 = require("../Subscriber");

function distinctUntilChanged(compare, keySelector) {
  return function (source) {
    return source.lift(new DistinctUntilChangedOperator(compare, keySelector));
  };
}

exports.distinctUntilChanged = distinctUntilChanged;

var DistinctUntilChangedOperator = function () {
  function DistinctUntilChangedOperator(compare, keySelector) {
    this.compare = compare;
    this.keySelector = keySelector;
  }

  DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));
  };

  return DistinctUntilChangedOperator;
}();

var DistinctUntilChangedSubscriber = function (_super) {
  __extends(DistinctUntilChangedSubscriber, _super);

  function DistinctUntilChangedSubscriber(destination, compare, keySelector) {
    var _this = _super.call(this, destination) || this;

    _this.keySelector = keySelector;
    _this.hasKey = false;

    if (typeof compare === 'function') {
      _this.compare = compare;
    }

    return _this;
  }

  DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {
    return x === y;
  };

  DistinctUntilChangedSubscriber.prototype._next = function (value) {
    var key;

    try {
      var keySelector = this.keySelector;
      key = keySelector ? keySelector(value) : value;
    } catch (err) {
      return this.destination.error(err);
    }

    var result = false;

    if (this.hasKey) {
      try {
        var compare = this.compare;
        result = compare(this.key, key);
      } catch (err) {
        return this.destination.error(err);
      }
    } else {
      this.hasKey = true;
    }

    if (!result) {
      this.key = key;
      this.destination.next(value);
    }
  };

  return DistinctUntilChangedSubscriber;
}(Subscriber_1.Subscriber);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pbnRlcm5hbC9vcGVyYXRvcnMvZGlzdGluY3RVbnRpbENoYW5nZWQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFDQSxJQUFBLFlBQUEsR0FBQSxPQUFBLENBQUEsZUFBQSxDQUFBOztBQWlFQSxTQUFnQixvQkFBaEIsQ0FBMkMsT0FBM0MsRUFBOEUsV0FBOUUsRUFBdUc7QUFDckcsU0FBTyxVQUFDLE1BQUQsRUFBc0I7QUFBSyxXQUFBLE1BQU0sQ0FBQyxJQUFQLENBQVksSUFBSSw0QkFBSixDQUF1QyxPQUF2QyxFQUFaLFdBQVksQ0FBWixDQUFBO0FBQXlFLEdBQTNHO0FBQ0Q7O0FBRkQsT0FBQSxDQUFBLG9CQUFBLEdBQUEsb0JBQUE7O0FBSUEsSUFBQSw0QkFBQSxHQUFBLFlBQUE7QUFDRSxXQUFBLDRCQUFBLENBQW9CLE9BQXBCLEVBQ29CLFdBRHBCLEVBQzRDO0FBRHhCLFNBQUEsT0FBQSxHQUFBLE9BQUE7QUFDQSxTQUFBLFdBQUEsR0FBQSxXQUFBO0FBQ25COztBQUVELEVBQUEsNEJBQUEsQ0FBQSxTQUFBLENBQUEsSUFBQSxHQUFBLFVBQUssVUFBTCxFQUFnQyxNQUFoQyxFQUEyQztBQUN6QyxXQUFPLE1BQU0sQ0FBQyxTQUFQLENBQWlCLElBQUksOEJBQUosQ0FBbUMsVUFBbkMsRUFBK0MsS0FBSyxPQUFwRCxFQUE2RCxLQUFLLFdBQWxFLENBQWpCLENBQVA7QUFDRCxHQUZEOztBQUdGLFNBQUEsNEJBQUE7QUFBQyxDQVJELEVBQUE7O0FBZUEsSUFBQSw4QkFBQSxHQUFBLFVBQUEsTUFBQSxFQUFBO0FBQW1ELEVBQUEsU0FBQSxDQUFBLDhCQUFBLEVBQUEsTUFBQSxDQUFBOztBQUlqRCxXQUFBLDhCQUFBLENBQVksV0FBWixFQUNZLE9BRFosRUFFb0IsV0FGcEIsRUFFNEM7QUFGNUMsUUFBQSxLQUFBLEdBR0UsTUFBQSxDQUFBLElBQUEsQ0FBQSxJQUFBLEVBQU0sV0FBTixLQUFrQixJQUhwQjs7QUFFb0IsSUFBQSxLQUFBLENBQUEsV0FBQSxHQUFBLFdBQUE7QUFKWixJQUFBLEtBQUEsQ0FBQSxNQUFBLEdBQWtCLEtBQWxCOztBQU1OLFFBQUksT0FBTyxPQUFQLEtBQW1CLFVBQXZCLEVBQW1DO0FBQ2pDLE1BQUEsS0FBSSxDQUFDLE9BQUwsR0FBZSxPQUFmO0FBQ0Q7OztBQUNGOztBQUVPLEVBQUEsOEJBQUEsQ0FBQSxTQUFBLENBQUEsT0FBQSxHQUFSLFVBQWdCLENBQWhCLEVBQXdCLENBQXhCLEVBQThCO0FBQzVCLFdBQU8sQ0FBQyxLQUFLLENBQWI7QUFDRCxHQUZPOztBQUlFLEVBQUEsOEJBQUEsQ0FBQSxTQUFBLENBQUEsS0FBQSxHQUFWLFVBQWdCLEtBQWhCLEVBQXdCO0FBQ3RCLFFBQUksR0FBSjs7QUFDQSxRQUFJO0FBQ00sVUFBQSxXQUFBLEdBQUEsS0FBQSxXQUFBO0FBQ1IsTUFBQSxHQUFHLEdBQUcsV0FBVyxHQUFHLFdBQVcsQ0FBQyxLQUFELENBQWQsR0FBd0IsS0FBekM7QUFDRCxLQUhELENBR0UsT0FBTyxHQUFQLEVBQVk7QUFDWixhQUFPLEtBQUssV0FBTCxDQUFpQixLQUFqQixDQUF1QixHQUF2QixDQUFQO0FBQ0Q7O0FBQ0QsUUFBSSxNQUFNLEdBQUcsS0FBYjs7QUFDQSxRQUFJLEtBQUssTUFBVCxFQUFpQjtBQUNmLFVBQUk7QUFDTSxZQUFBLE9BQUEsR0FBQSxLQUFBLE9BQUE7QUFDUixRQUFBLE1BQU0sR0FBRyxPQUFPLENBQUMsS0FBSyxHQUFOLEVBQVcsR0FBWCxDQUFoQjtBQUNELE9BSEQsQ0FHRSxPQUFPLEdBQVAsRUFBWTtBQUNaLGVBQU8sS0FBSyxXQUFMLENBQWlCLEtBQWpCLENBQXVCLEdBQXZCLENBQVA7QUFDRDtBQUNGLEtBUEQsTUFPTztBQUNMLFdBQUssTUFBTCxHQUFjLElBQWQ7QUFDRDs7QUFDRCxRQUFJLENBQUMsTUFBTCxFQUFhO0FBQ1gsV0FBSyxHQUFMLEdBQVcsR0FBWDtBQUNBLFdBQUssV0FBTCxDQUFpQixJQUFqQixDQUFzQixLQUF0QjtBQUNEO0FBQ0YsR0F2QlM7O0FBd0JaLFNBQUEsOEJBQUE7QUFBQyxDQXpDRCxDQUFtRCxZQUFBLENBQUEsVUFBbkQsQ0FBQSJ9