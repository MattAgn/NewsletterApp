{"version":3,"sources":["umd.js"],"names":["global","factory","exports","module","define","amd","deepmerge","isMergeableObject","value","isNonNullObject","isSpecial","stringValue","Object","prototype","toString","call","isReactElement","canUseSymbol","Symbol","for","REACT_ELEMENT_TYPE","$$typeof","emptyTarget","val","Array","isArray","cloneUnlessOtherwiseSpecified","options","clone","defaultArrayMerge","target","source","concat","map","element","mergeObject","destination","keys","forEach","key","arrayMerge","sourceIsArray","targetIsArray","sourceAndTargetTypesMatch","all","deepmergeAll","array","Error","reduce","prev","next","deepmerge_1"],"mappings":"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","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.deepmerge = factory());\n}(this, (function () { 'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tObject.keys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tObject.keys(source).forEach(function(key) {\n\t\tif (!options.isMergeableObject(source[key]) || !target[key]) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = deepmerge(target[key], source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nreturn deepmerge_1;\n\n})));\n"]}