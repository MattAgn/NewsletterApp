2430cca92ec4ce1c36608eda28d6d88a
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var AnimatedNode = require('./AnimatedNode');

var AnimatedWithChildren = require('./AnimatedWithChildren');

var NativeAnimatedHelper = require('../NativeAnimatedHelper');

var AnimatedTransform = function (_AnimatedWithChildren) {
  (0, _inherits2.default)(AnimatedTransform, _AnimatedWithChildren);

  function AnimatedTransform(transforms) {
    var _this;

    (0, _classCallCheck2.default)(this, AnimatedTransform);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AnimatedTransform).call(this));
    _this._transforms = transforms;
    return _this;
  }

  (0, _createClass2.default)(AnimatedTransform, [{
    key: "__makeNative",
    value: function __makeNative() {
      this._transforms.forEach(function (transform) {
        for (var key in transform) {
          var value = transform[key];

          if (value instanceof AnimatedNode) {
            value.__makeNative();
          }
        }
      });

      (0, _get2.default)((0, _getPrototypeOf2.default)(AnimatedTransform.prototype), "__makeNative", this).call(this);
    }
  }, {
    key: "__getValue",
    value: function __getValue() {
      return this._transforms.map(function (transform) {
        var result = {};

        for (var key in transform) {
          var value = transform[key];

          if (value instanceof AnimatedNode) {
            result[key] = value.__getValue();
          } else {
            result[key] = value;
          }
        }

        return result;
      });
    }
  }, {
    key: "__getAnimatedValue",
    value: function __getAnimatedValue() {
      return this._transforms.map(function (transform) {
        var result = {};

        for (var key in transform) {
          var value = transform[key];

          if (value instanceof AnimatedNode) {
            result[key] = value.__getAnimatedValue();
          } else {
            result[key] = value;
          }
        }

        return result;
      });
    }
  }, {
    key: "__attach",
    value: function __attach() {
      var _this2 = this;

      this._transforms.forEach(function (transform) {
        for (var key in transform) {
          var value = transform[key];

          if (value instanceof AnimatedNode) {
            value.__addChild(_this2);
          }
        }
      });
    }
  }, {
    key: "__detach",
    value: function __detach() {
      var _this3 = this;

      this._transforms.forEach(function (transform) {
        for (var key in transform) {
          var value = transform[key];

          if (value instanceof AnimatedNode) {
            value.__removeChild(_this3);
          }
        }
      });

      (0, _get2.default)((0, _getPrototypeOf2.default)(AnimatedTransform.prototype), "__detach", this).call(this);
    }
  }, {
    key: "__getNativeConfig",
    value: function __getNativeConfig() {
      var transConfigs = [];

      this._transforms.forEach(function (transform) {
        for (var key in transform) {
          var value = transform[key];

          if (value instanceof AnimatedNode) {
            transConfigs.push({
              type: 'animated',
              property: key,
              nodeTag: value.__getNativeTag()
            });
          } else {
            transConfigs.push({
              type: 'static',
              property: key,
              value: NativeAnimatedHelper.transformDataType(value)
            });
          }
        }
      });

      NativeAnimatedHelper.validateTransform(transConfigs);
      return {
        type: 'transform',
        transforms: transConfigs
      };
    }
  }]);
  return AnimatedTransform;
}(AnimatedWithChildren);

module.exports = AnimatedTransform;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,