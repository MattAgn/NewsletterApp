{"version":3,"sources":["useReduxContext.js"],"names":["_interopRequireDefault","require","exports","__esModule","useReduxContext","_react","_invariant","_Context","contextValue","useContext","ReactReduxContext"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,OAAO,CAACC,UAAR,GAAqB,IAArB;AACAD,OAAO,CAACE,eAAR,GAA0BA,eAA1B;;AAEA,IAAIC,MAAM,GAAGJ,OAAO,CAAC,OAAD,CAApB;;AAEA,IAAIK,UAAU,GAAGN,sBAAsB,CAACC,OAAO,CAAC,WAAD,CAAR,CAAvC;;AAEA,IAAIM,QAAQ,GAAGN,OAAO,CAAC,uBAAD,CAAtB;;AAkBA,SAASG,eAAT,GAA2B;AACzB,MAAII,YAAY,GAAG,CAAC,GAAGH,MAAM,CAACI,UAAX,EAAuBF,QAAQ,CAACG,iBAAhC,CAAnB;AACA,GAAC,GAAGJ,UAAU,CAAC,SAAD,CAAd,EAA2BE,YAA3B,EAAyC,kGAAzC;AACA,SAAOA,YAAP;AACD","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.useReduxContext = useReduxContext;\n\nvar _react = require(\"react\");\n\nvar _invariant = _interopRequireDefault(require(\"invariant\"));\n\nvar _Context = require(\"../components/Context\");\n\n/**\n * A hook to access the value of the `ReactReduxContext`. This is a low-level\n * hook that you should usually not need to call directly.\n *\n * @returns {any} the value of the `ReactReduxContext`\n *\n * @example\n *\n * import React from 'react'\n * import { useReduxContext } from 'react-redux'\n *\n * export const CounterComponent = ({ value }) => {\n *   const { store } = useReduxContext()\n *   return <div>{store.getState()}</div>\n * }\n */\nfunction useReduxContext() {\n  var contextValue = (0, _react.useContext)(_Context.ReactReduxContext);\n  (0, _invariant[\"default\"])(contextValue, 'could not find react-redux context value; please ensure the component is wrapped in a <Provider>');\n  return contextValue;\n}"]}