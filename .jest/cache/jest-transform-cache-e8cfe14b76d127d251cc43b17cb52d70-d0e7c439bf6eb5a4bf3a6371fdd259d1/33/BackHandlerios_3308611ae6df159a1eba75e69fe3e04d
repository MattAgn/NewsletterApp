80167b87999322b56d3d87f853963512
'use strict';

var Platform = require('./Platform');

var TVEventHandler = require('../Components/AppleTV/TVEventHandler');

function emptyFunction() {}

var BackHandler;

if (Platform.isTV) {
  var _tvEventHandler = new TVEventHandler();

  var _backPressSubscriptions = new Set();

  _tvEventHandler.enable(this, function (cmp, evt) {
    if (evt && evt.eventType === 'menu') {
      var invokeDefault = true;
      var subscriptions = Array.from(_backPressSubscriptions.values()).reverse();

      for (var i = 0; i < subscriptions.length; ++i) {
        if (subscriptions[i]()) {
          invokeDefault = false;
          break;
        }
      }

      if (invokeDefault) {
        BackHandler.exitApp();
      }
    }
  });

  BackHandler = {
    exitApp: emptyFunction,
    addEventListener: function addEventListener(eventName, handler) {
      _backPressSubscriptions.add(handler);

      return {
        remove: function remove() {
          return BackHandler.removeEventListener(eventName, handler);
        }
      };
    },
    removeEventListener: function removeEventListener(eventName, handler) {
      _backPressSubscriptions.delete(handler);
    }
  };
} else {
  BackHandler = {
    exitApp: emptyFunction,
    addEventListener: function addEventListener(_eventName, _handler) {
      return {
        remove: emptyFunction
      };
    },
    removeEventListener: function removeEventListener(_eventName, _handler) {}
  };
}

module.exports = BackHandler;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkJhY2tIYW5kbGVyLmlvcy5qcyJdLCJuYW1lcyI6WyJQbGF0Zm9ybSIsInJlcXVpcmUiLCJUVkV2ZW50SGFuZGxlciIsImVtcHR5RnVuY3Rpb24iLCJCYWNrSGFuZGxlciIsImlzVFYiLCJfdHZFdmVudEhhbmRsZXIiLCJfYmFja1ByZXNzU3Vic2NyaXB0aW9ucyIsIlNldCIsImVuYWJsZSIsImNtcCIsImV2dCIsImV2ZW50VHlwZSIsImludm9rZURlZmF1bHQiLCJzdWJzY3JpcHRpb25zIiwiQXJyYXkiLCJmcm9tIiwidmFsdWVzIiwicmV2ZXJzZSIsImkiLCJsZW5ndGgiLCJleGl0QXBwIiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50TmFtZSIsImhhbmRsZXIiLCJhZGQiLCJyZW1vdmUiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZGVsZXRlIiwiX2V2ZW50TmFtZSIsIl9oYW5kbGVyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBYUE7O0FBRUEsSUFBTUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsWUFBRCxDQUF4Qjs7QUFDQSxJQUFNQyxjQUFjLEdBQUdELE9BQU8sQ0FBQyxzQ0FBRCxDQUE5Qjs7QUFJQSxTQUFTRSxhQUFULEdBQStCLENBQUU7O0FBNENqQyxJQUFJQyxXQUFKOztBQUVBLElBQUlKLFFBQVEsQ0FBQ0ssSUFBYixFQUFtQjtBQUNqQixNQUFNQyxlQUFlLEdBQUcsSUFBSUosY0FBSixFQUF4Qjs7QUFDQSxNQUFNSyx1QkFBdUIsR0FBRyxJQUFJQyxHQUFKLEVBQWhDOztBQUVBRixFQUFBQSxlQUFlLENBQUNHLE1BQWhCLENBQXVCLElBQXZCLEVBQTZCLFVBQVNDLEdBQVQsRUFBY0MsR0FBZCxFQUFtQjtBQUM5QyxRQUFJQSxHQUFHLElBQUlBLEdBQUcsQ0FBQ0MsU0FBSixLQUFrQixNQUE3QixFQUFxQztBQUNuQyxVQUFJQyxhQUFhLEdBQUcsSUFBcEI7QUFDQSxVQUFNQyxhQUFhLEdBQUdDLEtBQUssQ0FBQ0MsSUFBTixDQUNwQlQsdUJBQXVCLENBQUNVLE1BQXhCLEVBRG9CLEVBRXBCQyxPQUZvQixFQUF0Qjs7QUFJQSxXQUFLLElBQUlDLENBQUMsR0FBRyxDQUFiLEVBQWdCQSxDQUFDLEdBQUdMLGFBQWEsQ0FBQ00sTUFBbEMsRUFBMEMsRUFBRUQsQ0FBNUMsRUFBK0M7QUFDN0MsWUFBSUwsYUFBYSxDQUFDSyxDQUFELENBQWIsRUFBSixFQUF3QjtBQUN0Qk4sVUFBQUEsYUFBYSxHQUFHLEtBQWhCO0FBQ0E7QUFDRDtBQUNGOztBQUVELFVBQUlBLGFBQUosRUFBbUI7QUFDakJULFFBQUFBLFdBQVcsQ0FBQ2lCLE9BQVo7QUFDRDtBQUNGO0FBQ0YsR0FsQkQ7O0FBb0JBakIsRUFBQUEsV0FBVyxHQUFHO0FBQ1ppQixJQUFBQSxPQUFPLEVBQUVsQixhQURHO0FBR1ptQixJQUFBQSxnQkFBZ0IsRUFBRSwwQkFDaEJDLFNBRGdCLEVBRWhCQyxPQUZnQixFQUdNO0FBQ3RCakIsTUFBQUEsdUJBQXVCLENBQUNrQixHQUF4QixDQUE0QkQsT0FBNUI7O0FBQ0EsYUFBTztBQUNMRSxRQUFBQSxNQUFNLEVBQUU7QUFBQSxpQkFBTXRCLFdBQVcsQ0FBQ3VCLG1CQUFaLENBQWdDSixTQUFoQyxFQUEyQ0MsT0FBM0MsQ0FBTjtBQUFBO0FBREgsT0FBUDtBQUdELEtBWFc7QUFhWkcsSUFBQUEsbUJBQW1CLEVBQUUsNkJBQ25CSixTQURtQixFQUVuQkMsT0FGbUIsRUFHYjtBQUNOakIsTUFBQUEsdUJBQXVCLENBQUNxQixNQUF4QixDQUErQkosT0FBL0I7QUFDRDtBQWxCVyxHQUFkO0FBb0JELENBNUNELE1BNENPO0FBQ0xwQixFQUFBQSxXQUFXLEdBQUc7QUFDWmlCLElBQUFBLE9BQU8sRUFBRWxCLGFBREc7QUFFWm1CLElBQUFBLGdCQUZZLDRCQUVLTyxVQUZMLEVBRXFDQyxRQUZyQyxFQUV5RDtBQUNuRSxhQUFPO0FBQ0xKLFFBQUFBLE1BQU0sRUFBRXZCO0FBREgsT0FBUDtBQUdELEtBTlc7QUFPWndCLElBQUFBLG1CQVBZLCtCQU9RRSxVQVBSLEVBT3dDQyxRQVB4QyxFQU80RCxDQUFFO0FBUDlELEdBQWQ7QUFTRDs7QUFFREMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCNUIsV0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIE9uIEFwcGxlIFRWLCB0aGlzIGltcGxlbWVudHMgYmFjayBuYXZpZ2F0aW9uIHVzaW5nIHRoZSBUViByZW1vdGUncyBtZW51IGJ1dHRvbi5cbiAqIE9uIGlPUywgdGhpcyBqdXN0IGltcGxlbWVudHMgYSBzdHViLlxuICpcbiAqIEBmbG93XG4gKiBAZm9ybWF0XG4gKi9cblxuJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBQbGF0Zm9ybSA9IHJlcXVpcmUoJy4vUGxhdGZvcm0nKTtcbmNvbnN0IFRWRXZlbnRIYW5kbGVyID0gcmVxdWlyZSgnLi4vQ29tcG9uZW50cy9BcHBsZVRWL1RWRXZlbnRIYW5kbGVyJyk7XG5cbnR5cGUgQmFja1ByZXNzRXZlbnROYW1lID0gJ2JhY2tQcmVzcycgfCAnaGFyZHdhcmVCYWNrUHJlc3MnO1xuXG5mdW5jdGlvbiBlbXB0eUZ1bmN0aW9uKCk6IHZvaWQge31cblxuLyoqXG4gKiBEZXRlY3QgaGFyZHdhcmUgYnV0dG9uIHByZXNzZXMgZm9yIGJhY2sgbmF2aWdhdGlvbi5cbiAqXG4gKiBBbmRyb2lkOiBEZXRlY3QgaGFyZHdhcmUgYmFjayBidXR0b24gcHJlc3NlcywgYW5kIHByb2dyYW1tYXRpY2FsbHkgaW52b2tlIHRoZSBkZWZhdWx0IGJhY2sgYnV0dG9uXG4gKiBmdW5jdGlvbmFsaXR5IHRvIGV4aXQgdGhlIGFwcCBpZiB0aGVyZSBhcmUgbm8gbGlzdGVuZXJzIG9yIGlmIG5vbmUgb2YgdGhlIGxpc3RlbmVycyByZXR1cm4gdHJ1ZS5cbiAqXG4gKiB0dk9TOiBEZXRlY3QgcHJlc3NlcyBvZiB0aGUgbWVudSBidXR0b24gb24gdGhlIFRWIHJlbW90ZS4gIChTdGlsbCB0byBiZSBpbXBsZW1lbnRlZDpcbiAqIHByb2dyYW1tYXRpY2FsbHkgZGlzYWJsZSBtZW51IGJ1dHRvbiBoYW5kbGluZ1xuICogZnVuY3Rpb25hbGl0eSB0byBleGl0IHRoZSBhcHAgaWYgdGhlcmUgYXJlIG5vIGxpc3RlbmVycyBvciBpZiBub25lIG9mIHRoZSBsaXN0ZW5lcnMgcmV0dXJuIHRydWUuKVxuICpcbiAqIGlPUzogTm90IGFwcGxpY2FibGUuXG4gKlxuICogVGhlIGV2ZW50IHN1YnNjcmlwdGlvbnMgYXJlIGNhbGxlZCBpbiByZXZlcnNlIG9yZGVyIChpLmUuIGxhc3QgcmVnaXN0ZXJlZCBzdWJzY3JpcHRpb24gZmlyc3QpLFxuICogYW5kIGlmIG9uZSBzdWJzY3JpcHRpb24gcmV0dXJucyB0cnVlIHRoZW4gc3Vic2NyaXB0aW9ucyByZWdpc3RlcmVkIGVhcmxpZXIgd2lsbCBub3QgYmUgY2FsbGVkLlxuICpcbiAqIEV4YW1wbGU6XG4gKlxuICogYGBgamF2YXNjcmlwdFxuICogQmFja0hhbmRsZXIuYWRkRXZlbnRMaXN0ZW5lcignaGFyZHdhcmVCYWNrUHJlc3MnLCBmdW5jdGlvbigpIHtcbiAqICAvLyB0aGlzLm9uTWFpblNjcmVlbiBhbmQgdGhpcy5nb0JhY2sgYXJlIGp1c3QgZXhhbXBsZXMsIHlvdSBuZWVkIHRvIHVzZSB5b3VyIG93biBpbXBsZW1lbnRhdGlvbiBoZXJlXG4gKiAgLy8gVHlwaWNhbGx5IHlvdSB3b3VsZCB1c2UgdGhlIG5hdmlnYXRvciBoZXJlIHRvIGdvIHRvIHRoZSBsYXN0IHN0YXRlLlxuICpcbiAqICBpZiAoIXRoaXMub25NYWluU2NyZWVuKCkpIHtcbiAqICAgIHRoaXMuZ29CYWNrKCk7XG4gKiAgICByZXR1cm4gdHJ1ZTtcbiAqICB9XG4gKiAgcmV0dXJuIGZhbHNlO1xuICogfSk7XG4gKiBgYGBcbiAqL1xudHlwZSBUQmFja0hhbmRsZXIgPSB7fFxuICArZXhpdEFwcDogKCkgPT4gdm9pZCxcbiAgK2FkZEV2ZW50TGlzdGVuZXI6IChcbiAgICBldmVudE5hbWU6IEJhY2tQcmVzc0V2ZW50TmFtZSxcbiAgICBoYW5kbGVyOiBGdW5jdGlvbixcbiAgKSA9PiB7cmVtb3ZlOiAoKSA9PiB2b2lkfSxcbiAgK3JlbW92ZUV2ZW50TGlzdGVuZXI6IChcbiAgICBldmVudE5hbWU6IEJhY2tQcmVzc0V2ZW50TmFtZSxcbiAgICBoYW5kbGVyOiBGdW5jdGlvbixcbiAgKSA9PiB2b2lkLFxufH07XG5cbmxldCBCYWNrSGFuZGxlcjogVEJhY2tIYW5kbGVyO1xuXG5pZiAoUGxhdGZvcm0uaXNUVikge1xuICBjb25zdCBfdHZFdmVudEhhbmRsZXIgPSBuZXcgVFZFdmVudEhhbmRsZXIoKTtcbiAgY29uc3QgX2JhY2tQcmVzc1N1YnNjcmlwdGlvbnMgPSBuZXcgU2V0KCk7XG5cbiAgX3R2RXZlbnRIYW5kbGVyLmVuYWJsZSh0aGlzLCBmdW5jdGlvbihjbXAsIGV2dCkge1xuICAgIGlmIChldnQgJiYgZXZ0LmV2ZW50VHlwZSA9PT0gJ21lbnUnKSB7XG4gICAgICBsZXQgaW52b2tlRGVmYXVsdCA9IHRydWU7XG4gICAgICBjb25zdCBzdWJzY3JpcHRpb25zID0gQXJyYXkuZnJvbShcbiAgICAgICAgX2JhY2tQcmVzc1N1YnNjcmlwdGlvbnMudmFsdWVzKCksXG4gICAgICApLnJldmVyc2UoKTtcblxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdWJzY3JpcHRpb25zLmxlbmd0aDsgKytpKSB7XG4gICAgICAgIGlmIChzdWJzY3JpcHRpb25zW2ldKCkpIHtcbiAgICAgICAgICBpbnZva2VEZWZhdWx0ID0gZmFsc2U7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKGludm9rZURlZmF1bHQpIHtcbiAgICAgICAgQmFja0hhbmRsZXIuZXhpdEFwcCgpO1xuICAgICAgfVxuICAgIH1cbiAgfSk7XG5cbiAgQmFja0hhbmRsZXIgPSB7XG4gICAgZXhpdEFwcDogZW1wdHlGdW5jdGlvbixcblxuICAgIGFkZEV2ZW50TGlzdGVuZXI6IGZ1bmN0aW9uKFxuICAgICAgZXZlbnROYW1lOiBCYWNrUHJlc3NFdmVudE5hbWUsXG4gICAgICBoYW5kbGVyOiBGdW5jdGlvbixcbiAgICApOiB7cmVtb3ZlOiAoKSA9PiB2b2lkfSB7XG4gICAgICBfYmFja1ByZXNzU3Vic2NyaXB0aW9ucy5hZGQoaGFuZGxlcik7XG4gICAgICByZXR1cm4ge1xuICAgICAgICByZW1vdmU6ICgpID0+IEJhY2tIYW5kbGVyLnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnROYW1lLCBoYW5kbGVyKSxcbiAgICAgIH07XG4gICAgfSxcblxuICAgIHJlbW92ZUV2ZW50TGlzdGVuZXI6IGZ1bmN0aW9uKFxuICAgICAgZXZlbnROYW1lOiBCYWNrUHJlc3NFdmVudE5hbWUsXG4gICAgICBoYW5kbGVyOiBGdW5jdGlvbixcbiAgICApOiB2b2lkIHtcbiAgICAgIF9iYWNrUHJlc3NTdWJzY3JpcHRpb25zLmRlbGV0ZShoYW5kbGVyKTtcbiAgICB9LFxuICB9O1xufSBlbHNlIHtcbiAgQmFja0hhbmRsZXIgPSB7XG4gICAgZXhpdEFwcDogZW1wdHlGdW5jdGlvbixcbiAgICBhZGRFdmVudExpc3RlbmVyKF9ldmVudE5hbWU6IEJhY2tQcmVzc0V2ZW50TmFtZSwgX2hhbmRsZXI6IEZ1bmN0aW9uKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICByZW1vdmU6IGVtcHR5RnVuY3Rpb24sXG4gICAgICB9O1xuICAgIH0sXG4gICAgcmVtb3ZlRXZlbnRMaXN0ZW5lcihfZXZlbnROYW1lOiBCYWNrUHJlc3NFdmVudE5hbWUsIF9oYW5kbGVyOiBGdW5jdGlvbikge30sXG4gIH07XG59XG5cbm1vZHVsZS5leHBvcnRzID0gQmFja0hhbmRsZXI7XG4iXX0=