a5040a767aff5bbb6373dc2ef75e4681
"use strict";

var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (b.hasOwnProperty(p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});

var Subject_1 = require("../Subject");

var OuterSubscriber_1 = require("../OuterSubscriber");

var subscribeToResult_1 = require("../util/subscribeToResult");

function retryWhen(notifier) {
  return function (source) {
    return source.lift(new RetryWhenOperator(notifier, source));
  };
}

exports.retryWhen = retryWhen;

var RetryWhenOperator = function () {
  function RetryWhenOperator(notifier, source) {
    this.notifier = notifier;
    this.source = source;
  }

  RetryWhenOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));
  };

  return RetryWhenOperator;
}();

var RetryWhenSubscriber = function (_super) {
  __extends(RetryWhenSubscriber, _super);

  function RetryWhenSubscriber(destination, notifier, source) {
    var _this = _super.call(this, destination) || this;

    _this.notifier = notifier;
    _this.source = source;
    return _this;
  }

  RetryWhenSubscriber.prototype.error = function (err) {
    if (!this.isStopped) {
      var errors = this.errors;
      var retries = this.retries;
      var retriesSubscription = this.retriesSubscription;

      if (!retries) {
        errors = new Subject_1.Subject();

        try {
          var notifier = this.notifier;
          retries = notifier(errors);
        } catch (e) {
          return _super.prototype.error.call(this, e);
        }

        retriesSubscription = subscribeToResult_1.subscribeToResult(this, retries);
      } else {
        this.errors = null;
        this.retriesSubscription = null;
      }

      this._unsubscribeAndRecycle();

      this.errors = errors;
      this.retries = retries;
      this.retriesSubscription = retriesSubscription;
      errors.next(err);
    }
  };

  RetryWhenSubscriber.prototype._unsubscribe = function () {
    var _a = this,
        errors = _a.errors,
        retriesSubscription = _a.retriesSubscription;

    if (errors) {
      errors.unsubscribe();
      this.errors = null;
    }

    if (retriesSubscription) {
      retriesSubscription.unsubscribe();
      this.retriesSubscription = null;
    }

    this.retries = null;
  };

  RetryWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    var _unsubscribe = this._unsubscribe;
    this._unsubscribe = null;

    this._unsubscribeAndRecycle();

    this._unsubscribe = _unsubscribe;
    this.source.subscribe(this);
  };

  return RetryWhenSubscriber;
}(OuterSubscriber_1.OuterSubscriber);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pbnRlcm5hbC9vcGVyYXRvcnMvcmV0cnlXaGVuLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBR0EsSUFBQSxTQUFBLEdBQUEsT0FBQSxDQUFBLFlBQUEsQ0FBQTs7QUFHQSxJQUFBLGlCQUFBLEdBQUEsT0FBQSxDQUFBLG9CQUFBLENBQUE7O0FBRUEsSUFBQSxtQkFBQSxHQUFBLE9BQUEsQ0FBQSwyQkFBQSxDQUFBOztBQWtCQSxTQUFnQixTQUFoQixDQUE2QixRQUE3QixFQUFtRjtBQUNqRixTQUFPLFVBQUMsTUFBRCxFQUFzQjtBQUFLLFdBQUEsTUFBTSxDQUFDLElBQVAsQ0FBWSxJQUFJLGlCQUFKLENBQXNCLFFBQXRCLEVBQVosTUFBWSxDQUFaLENBQUE7QUFBb0QsR0FBdEY7QUFDRDs7QUFGRCxPQUFBLENBQUEsU0FBQSxHQUFBLFNBQUE7O0FBSUEsSUFBQSxpQkFBQSxHQUFBLFlBQUE7QUFDRSxXQUFBLGlCQUFBLENBQXNCLFFBQXRCLEVBQ3NCLE1BRHRCLEVBQzJDO0FBRHJCLFNBQUEsUUFBQSxHQUFBLFFBQUE7QUFDQSxTQUFBLE1BQUEsR0FBQSxNQUFBO0FBQ3JCOztBQUVELEVBQUEsaUJBQUEsQ0FBQSxTQUFBLENBQUEsSUFBQSxHQUFBLFVBQUssVUFBTCxFQUFnQyxNQUFoQyxFQUEyQztBQUN6QyxXQUFPLE1BQU0sQ0FBQyxTQUFQLENBQWlCLElBQUksbUJBQUosQ0FBd0IsVUFBeEIsRUFBb0MsS0FBSyxRQUF6QyxFQUFtRCxLQUFLLE1BQXhELENBQWpCLENBQVA7QUFDRCxHQUZEOztBQUdGLFNBQUEsaUJBQUE7QUFBQyxDQVJELEVBQUE7O0FBZUEsSUFBQSxtQkFBQSxHQUFBLFVBQUEsTUFBQSxFQUFBO0FBQXdDLEVBQUEsU0FBQSxDQUFBLG1CQUFBLEVBQUEsTUFBQSxDQUFBOztBQU10QyxXQUFBLG1CQUFBLENBQVksV0FBWixFQUNvQixRQURwQixFQUVv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