262c8af5615e4a3dba8ce7e512975424
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var React = _interopRequireWildcard(require("react"));

var _render2 = _interopRequireDefault(require("./render"));

var _debugShallow = _interopRequireDefault(require("./helpers/debugShallow"));

var _debugDeep = _interopRequireDefault(require("./helpers/debugDeep"));

var _format = _interopRequireDefault(require("./helpers/format"));

function debugDeepElementOrInstance(instance) {
  var message = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

  try {
    var _render = (0, _render2.default)(instance),
        toJSON = _render.toJSON;

    if (message) {
      console.log(message + "\n\n", (0, _format.default)(toJSON()));
    } else {
      console.log((0, _format.default)(toJSON()));
    }
  } catch (e) {
    (0, _debugDeep.default)(instance);
  }
}

function debug(instance, message) {
  return (0, _debugShallow.default)(instance, message);
}

debug.shallow = _debugShallow.default;
debug.deep = debugDeepElementOrInstance;
var _default = debug;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRlYnVnLmpzIl0sIm5hbWVzIjpbIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJyZXF1aXJlIiwiX2ludGVyb3BSZXF1aXJlV2lsZGNhcmQiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImV4cG9ydHMiLCJ2YWx1ZSIsImRlZmF1bHQiLCJSZWFjdCIsIl9yZW5kZXIyIiwiX2RlYnVnU2hhbGxvdyIsIl9kZWJ1Z0RlZXAiLCJfZm9ybWF0IiwiZGVidWdEZWVwRWxlbWVudE9ySW5zdGFuY2UiLCJpbnN0YW5jZSIsIm1lc3NhZ2UiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJ1bmRlZmluZWQiLCJfcmVuZGVyIiwidG9KU09OIiwiY29uc29sZSIsImxvZyIsImUiLCJkZWJ1ZyIsInNoYWxsb3ciLCJkZWVwIiwiX2RlZmF1bHQiXSwibWFwcGluZ3MiOiJBQUFBLElBQUlBLHNCQUFzQixHQUFDQyxPQUFPLENBQUMsOENBQUQsQ0FBbEM7O0FBQW1GLElBQUlDLHVCQUF1QixHQUFDRCxPQUFPLENBQUMsK0NBQUQsQ0FBbkM7O0FBQXFGRSxNQUFNLENBQUNDLGNBQVAsQ0FBc0JDLE9BQXRCLEVBQThCLFlBQTlCLEVBQTJDO0FBQUNDLEVBQUFBLEtBQUssRUFBQztBQUFQLENBQTNDO0FBQXlERCxPQUFPLENBQUNFLE9BQVIsR0FBZ0IsS0FBSyxDQUFyQjs7QUFBdUIsSUFBSUMsS0FBSyxHQUFDTix1QkFBdUIsQ0FBQ0QsT0FBTyxDQUFDLE9BQUQsQ0FBUixDQUFqQzs7QUFBb0QsSUFBSVEsUUFBUSxHQUFDVCxzQkFBc0IsQ0FBQ0MsT0FBTyxDQUFDLFVBQUQsQ0FBUixDQUFuQzs7QUFBeUQsSUFBSVMsYUFBYSxHQUFDVixzQkFBc0IsQ0FBQ0MsT0FBTyxDQUFDLHdCQUFELENBQVIsQ0FBeEM7O0FBQTRFLElBQUlVLFVBQVUsR0FBQ1gsc0JBQXNCLENBQUNDLE9BQU8sQ0FBQyxxQkFBRCxDQUFSLENBQXJDOztBQUFzRSxJQUFJVyxPQUFPLEdBQUNaLHNCQUFzQixDQUFDQyxPQUFPLENBQUMsa0JBQUQsQ0FBUixDQUFsQzs7QUFBZ0UsU0FBU1ksMEJBQVQsQ0FBb0NDLFFBQXBDLEVBQTZDO0FBQUMsTUFBSUMsT0FBTyxHQUFDQyxTQUFTLENBQUNDLE1BQVYsR0FBaUIsQ0FBakIsSUFBb0JELFNBQVMsQ0FBQyxDQUFELENBQVQsS0FBZUUsU0FBbkMsR0FBNkNGLFNBQVMsQ0FBQyxDQUFELENBQXRELEdBQTBELEVBQXRFOztBQUF5RSxNQUFHO0FBQUMsUUFBSUcsT0FBTyxHQUFDLENBQUMsR0FBRVYsUUFBUSxDQUFDRixPQUFaLEVBQXFCTyxRQUFyQixDQUFaO0FBQUEsUUFBMkNNLE1BQU0sR0FBQ0QsT0FBTyxDQUFDQyxNQUExRDs7QUFBaUUsUUFBR0wsT0FBSCxFQUFXO0FBQUNNLE1BQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZUCxPQUFPLEdBQUMsTUFBcEIsRUFBMkIsQ0FBQyxHQUFFSCxPQUFPLENBQUNMLE9BQVgsRUFBb0JhLE1BQU0sRUFBMUIsQ0FBM0I7QUFBMkQsS0FBdkUsTUFBMkU7QUFBQ0MsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksQ0FBQyxHQUFFVixPQUFPLENBQUNMLE9BQVgsRUFBb0JhLE1BQU0sRUFBMUIsQ0FBWjtBQUE0QztBQUFDLEdBQTlMLENBQThMLE9BQU1HLENBQU4sRUFBUTtBQUFDLEtBQUMsR0FBRVosVUFBVSxDQUFDSixPQUFkLEVBQXVCTyxRQUF2QjtBQUFrQztBQUFDOztBQUFBLFNBQVNVLEtBQVQsQ0FBZVYsUUFBZixFQUF3QkMsT0FBeEIsRUFBZ0M7QUFBQyxTQUFNLENBQUMsR0FBRUwsYUFBYSxDQUFDSCxPQUFqQixFQUEwQk8sUUFBMUIsRUFBbUNDLE9BQW5DLENBQU47QUFBbUQ7O0FBQUFTLEtBQUssQ0FBQ0MsT0FBTixHQUFjZixhQUFhLENBQUNILE9BQTVCO0FBQW9DaUIsS0FBSyxDQUFDRSxJQUFOLEdBQVdiLDBCQUFYO0FBQXNDLElBQUljLFFBQVEsR0FBQ0gsS0FBYjtBQUFtQm5CLE9BQU8sQ0FBQ0UsT0FBUixHQUFnQm9CLFFBQWhCIiwic291cmNlc0NvbnRlbnQiOlsidmFyIF9pbnRlcm9wUmVxdWlyZURlZmF1bHQ9cmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW50ZXJvcFJlcXVpcmVEZWZhdWx0XCIpO3ZhciBfaW50ZXJvcFJlcXVpcmVXaWxkY2FyZD1yZXF1aXJlKFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkXCIpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLFwiX19lc01vZHVsZVwiLHt2YWx1ZTp0cnVlfSk7ZXhwb3J0cy5kZWZhdWx0PXZvaWQgMDt2YXIgUmVhY3Q9X2ludGVyb3BSZXF1aXJlV2lsZGNhcmQocmVxdWlyZShcInJlYWN0XCIpKTt2YXIgX3JlbmRlcjI9X2ludGVyb3BSZXF1aXJlRGVmYXVsdChyZXF1aXJlKFwiLi9yZW5kZXJcIikpO3ZhciBfZGVidWdTaGFsbG93PV9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vaGVscGVycy9kZWJ1Z1NoYWxsb3dcIikpO3ZhciBfZGVidWdEZWVwPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vaGVscGVycy9kZWJ1Z0RlZXBcIikpO3ZhciBfZm9ybWF0PV9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIi4vaGVscGVycy9mb3JtYXRcIikpO2Z1bmN0aW9uIGRlYnVnRGVlcEVsZW1lbnRPckluc3RhbmNlKGluc3RhbmNlKXt2YXIgbWVzc2FnZT1hcmd1bWVudHMubGVuZ3RoPjEmJmFyZ3VtZW50c1sxXSE9PXVuZGVmaW5lZD9hcmd1bWVudHNbMV06Jyc7dHJ5e3ZhciBfcmVuZGVyPSgwLF9yZW5kZXIyLmRlZmF1bHQpKGluc3RhbmNlKSx0b0pTT049X3JlbmRlci50b0pTT047aWYobWVzc2FnZSl7Y29uc29sZS5sb2cobWVzc2FnZStcIlxcblxcblwiLCgwLF9mb3JtYXQuZGVmYXVsdCkodG9KU09OKCkpKTt9ZWxzZXtjb25zb2xlLmxvZygoMCxfZm9ybWF0LmRlZmF1bHQpKHRvSlNPTigpKSk7fX1jYXRjaChlKXsoMCxfZGVidWdEZWVwLmRlZmF1bHQpKGluc3RhbmNlKTt9fWZ1bmN0aW9uIGRlYnVnKGluc3RhbmNlLG1lc3NhZ2Upe3JldHVybigwLF9kZWJ1Z1NoYWxsb3cuZGVmYXVsdCkoaW5zdGFuY2UsbWVzc2FnZSk7fWRlYnVnLnNoYWxsb3c9X2RlYnVnU2hhbGxvdy5kZWZhdWx0O2RlYnVnLmRlZXA9ZGVidWdEZWVwRWxlbWVudE9ySW5zdGFuY2U7dmFyIF9kZWZhdWx0PWRlYnVnO2V4cG9ydHMuZGVmYXVsdD1fZGVmYXVsdDsiXX0=