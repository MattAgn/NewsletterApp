{"version":3,"sources":["set-up-and-tear-down.js"],"names":["compileRoute","require","FetchMock","mock","matcher","response","options","route","Error","addRoute","_mock","uncompiledRoute","clashes","routes","filter","identifier","method","overwriteRoutes","config","length","_uncompiledRoutes","push","forEach","clash","index","indexOf","splice","isSandbox","realFetch","global","fetch","fetchHandler","catch","fallbackResponse","console","warn","spy","getNativeFetch","once","repeat","extendOptions","toUpperCase","resetBehavior","undefined","resetHistory","_calls","_holdingPromises","reset","restore","module","exports"],"mappings":";;;;AAAA,IAAMA,YAAY,GAAGC,OAAO,CAAC,iBAAD,CAA5B;;AACA,IAAMC,SAAS,GAAG,EAAlB;;AAEAA,SAAS,CAACC,IAAV,GAAiB,UAASC,OAAT,EAAkBC,QAAlB,EAA0C;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AAC1D,MAAIC,KAAJ;;AAGA,MAAIH,OAAO,IAAIC,QAAf,EAAyB;AACxBE,IAAAA,KAAK,GAAG,uBACP;AACCH,MAAAA,OAAO,EAAPA,OADD;AAECC,MAAAA,QAAQ,EAARA;AAFD,KADO,EAKPC,OALO,CAAR;AAOA,GARD,MAQO,IAAIF,OAAO,IAAIA,OAAO,CAACA,OAAvB,EAAgC;AACtCG,IAAAA,KAAK,GAAGH,OAAR;AACA,GAFM,MAEA;AACN,UAAM,IAAII,KAAJ,CAAU,qDAAV,CAAN;AACA;;AAED,OAAKC,QAAL,CAAcF,KAAd;AAEA,SAAO,KAAKG,KAAL,EAAP;AACA,CArBD;;AAuBAR,SAAS,CAACO,QAAV,GAAqB,UAASE,eAAT,EAA0B;AAAA;;AAC9C,MAAMJ,KAAK,GAAG,KAAKP,YAAL,CAAkBW,eAAlB,CAAd;AACA,MAAMC,OAAO,GAAG,KAAKC,MAAL,CAAYC,MAAZ,CACf;AAAA,QAAGC,UAAH,QAAGA,UAAH;AAAA,QAAeC,MAAf,QAAeA,MAAf;AAAA,WACCD,UAAU,KAAKR,KAAK,CAACQ,UAArB,KACC,CAACC,MAAD,IAAW,CAACT,KAAK,CAACS,MAAlB,IAA4BA,MAAM,KAAKT,KAAK,CAACS,MAD9C,CADD;AAAA,GADe,CAAhB;AAMA,MAAMC,eAAe,GACpB,qBAAqBV,KAArB,GACGA,KAAK,CAACU,eADT,GAEG,KAAKC,MAAL,CAAYD,eAHhB;;AAKA,MAAIA,eAAe,KAAK,KAApB,IAA6B,CAACL,OAAO,CAACO,MAA1C,EAAkD;AACjD,SAAKC,iBAAL,CAAuBC,IAAvB,CAA4BV,eAA5B;;AACA,WAAO,KAAKE,MAAL,CAAYQ,IAAZ,CAAiBd,KAAjB,CAAP;AACA;;AAED,MAAIU,eAAe,KAAK,IAAxB,EAA8B;AAC7BL,IAAAA,OAAO,CAACU,OAAR,CAAgB,UAAAC,KAAK,EAAI;AACxB,UAAMC,KAAK,GAAG,KAAI,CAACX,MAAL,CAAYY,OAAZ,CAAoBF,KAApB,CAAd;;AACA,MAAA,KAAI,CAACH,iBAAL,CAAuBM,MAAvB,CAA8BF,KAA9B,EAAqC,CAArC,EAAwCb,eAAxC;;AACA,MAAA,KAAI,CAACE,MAAL,CAAYa,MAAZ,CAAmBF,KAAnB,EAA0B,CAA1B,EAA6BjB,KAA7B;AACA,KAJD;AAMA,WAAO,KAAKM,MAAZ;AACA;;AAED,MAAID,OAAO,CAACO,MAAZ,EAAoB;AACnB,UAAM,IAAIX,KAAJ,CACL,qGADK,CAAN;AAGA;;AAED,OAAKY,iBAAL,CAAuBC,IAAvB,CAA4BV,eAA5B;;AACA,OAAKE,MAAL,CAAYQ,IAAZ,CAAiBd,KAAjB;AACA,CApCD;;AAsCAL,SAAS,CAACQ,KAAV,GAAkB,YAAW;AAC5B,MAAI,CAAC,KAAKiB,SAAV,EAAqB;AAEpB,SAAKC,SAAL,GAAiB,KAAKA,SAAL,IAAkB,KAAKC,MAAL,CAAYC,KAA/C;AACA,SAAKD,MAAL,CAAYC,KAAZ,GAAoB,KAAKC,YAAzB;AACA;;AACD,SAAO,IAAP;AACA,CAPD;;AASA7B,SAAS,CAAC8B,KAAV,GAAkB,UAAS3B,QAAT,EAAmB;AACpC,MAAI,KAAK4B,gBAAT,EAA2B;AAC1BC,IAAAA,OAAO,CAACC,IAAR,CACC,qGADD;AAGA;;AACD,OAAKF,gBAAL,GAAwB5B,QAAQ,IAAI,IAApC;AACA,SAAO,KAAKK,KAAL,EAAP;AACA,CARD;;AAUAR,SAAS,CAACkC,GAAV,GAAgB,YAAW;AAC1B,OAAK1B,KAAL;;AACA,SAAO,KAAKsB,KAAL,CAAW,KAAKK,cAAL,EAAX,CAAP;AACA,CAHD;;AAKAnC,SAAS,CAACF,YAAV,GAAyBA,YAAzB;;AAEAE,SAAS,CAACoC,IAAV,GAAiB,UAASlC,OAAT,EAAkBC,QAAlB,EAA0C;AAAA,MAAdC,OAAc,uEAAJ,EAAI;AAC1D,SAAO,KAAKH,IAAL,CACNC,OADM,EAENC,QAFM,EAGN,uBAAc,EAAd,EAAkBC,OAAlB,EAA2B;AAAEiC,IAAAA,MAAM,EAAE;AAAV,GAA3B,CAHM,CAAP;AAKA,CAND;;AAQA,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,EAAuB,QAAvB,EAAiC,MAAjC,EAAyC,OAAzC,EAAkDjB,OAAlD,CAA0D,UAAAN,MAAM,EAAI;AACnE,MAAMwB,aAAa,GAAG,SAAhBA,aAAgB,CAAAlC,OAAO;AAAA,WAC5B,uBAAc,EAAd,EAAkBA,OAAlB,EAA2B;AAAEU,MAAAA,MAAM,EAAEA,MAAM,CAACyB,WAAP;AAAV,KAA3B,CAD4B;AAAA,GAA7B;;AAGAvC,EAAAA,SAAS,CAACc,MAAD,CAAT,GAAoB,UAASZ,OAAT,EAAkBC,QAAlB,EAA0C;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AAC7D,WAAO,KAAKH,IAAL,CAAUC,OAAV,EAAmBC,QAAnB,EAA6BmC,aAAa,CAAClC,OAAD,CAA1C,CAAP;AACA,GAFD;;AAGAJ,EAAAA,SAAS,CAAIc,MAAJ,UAAT,GAA6B,UAASZ,OAAT,EAAkBC,QAAlB,EAA0C;AAAA,QAAdC,OAAc,uEAAJ,EAAI;AACtE,WAAO,KAAKgC,IAAL,CAAUlC,OAAV,EAAmBC,QAAnB,EAA6BmC,aAAa,CAAClC,OAAD,CAA1C,CAAP;AACA,GAFD;AAGA,CAVD;;AAYAJ,SAAS,CAACwC,aAAV,GAA0B,YAAW;AACpC,MAAI,KAAKd,SAAT,EAAoB;AACnB,SAAKC,MAAL,CAAYC,KAAZ,GAAoB,KAAKF,SAAzB;AACA,SAAKA,SAAL,GAAiBe,SAAjB;AACA;;AACD,OAAKV,gBAAL,GAAwBU,SAAxB;AACA,OAAK9B,MAAL,GAAc,EAAd;AACA,OAAKO,iBAAL,GAAyB,EAAzB;AACA,SAAO,IAAP;AACA,CATD;;AAWAlB,SAAS,CAAC0C,YAAV,GAAyB,YAAW;AACnC,OAAKC,MAAL,GAAc,EAAd;AACA,OAAKC,gBAAL,GAAwB,EAAxB;AACA,OAAKjC,MAAL,CAAYS,OAAZ,CAAoB,UAAAf,KAAK;AAAA,WAAIA,KAAK,CAACwC,KAAN,IAAexC,KAAK,CAACwC,KAAN,EAAnB;AAAA,GAAzB;AACA,SAAO,IAAP;AACA,CALD;;AAOA7C,SAAS,CAAC8C,OAAV,GAAoB9C,SAAS,CAAC6C,KAAV,GAAkB,YAAW;AAChD,OAAKL,aAAL;AACA,OAAKE,YAAL;AACA,SAAO,IAAP;AACA,CAJD;;AAMAK,MAAM,CAACC,OAAP,GAAiBhD,SAAjB","sourcesContent":["const compileRoute = require('./compile-route');\nconst FetchMock = {};\n\nFetchMock.mock = function(matcher, response, options = {}) {\n\tlet route;\n\n\t// Handle the variety of parameters accepted by mock (see README)\n\tif (matcher && response) {\n\t\troute = Object.assign(\n\t\t\t{\n\t\t\t\tmatcher,\n\t\t\t\tresponse\n\t\t\t},\n\t\t\toptions\n\t\t);\n\t} else if (matcher && matcher.matcher) {\n\t\troute = matcher;\n\t} else {\n\t\tthrow new Error('fetch-mock: Invalid parameters passed to fetch-mock');\n\t}\n\n\tthis.addRoute(route);\n\n\treturn this._mock();\n};\n\nFetchMock.addRoute = function(uncompiledRoute) {\n\tconst route = this.compileRoute(uncompiledRoute);\n\tconst clashes = this.routes.filter(\n\t\t({ identifier, method }) =>\n\t\t\tidentifier === route.identifier &&\n\t\t\t(!method || !route.method || method === route.method)\n\t);\n\n\tconst overwriteRoutes =\n\t\t'overwriteRoutes' in route\n\t\t\t? route.overwriteRoutes\n\t\t\t: this.config.overwriteRoutes;\n\n\tif (overwriteRoutes === false || !clashes.length) {\n\t\tthis._uncompiledRoutes.push(uncompiledRoute);\n\t\treturn this.routes.push(route);\n\t}\n\n\tif (overwriteRoutes === true) {\n\t\tclashes.forEach(clash => {\n\t\t\tconst index = this.routes.indexOf(clash);\n\t\t\tthis._uncompiledRoutes.splice(index, 1, uncompiledRoute);\n\t\t\tthis.routes.splice(index, 1, route);\n\t\t});\n\n\t\treturn this.routes;\n\t}\n\n\tif (clashes.length) {\n\t\tthrow new Error(\n\t\t\t'fetch-mock: Adding route with same name or matcher as existing route. See `overwriteRoutes` option.'\n\t\t);\n\t}\n\n\tthis._uncompiledRoutes.push(uncompiledRoute);\n\tthis.routes.push(route);\n};\n\nFetchMock._mock = function() {\n\tif (!this.isSandbox) {\n\t\t// Do this here rather than in the constructor to ensure it's scoped to the test\n\t\tthis.realFetch = this.realFetch || this.global.fetch;\n\t\tthis.global.fetch = this.fetchHandler;\n\t}\n\treturn this;\n};\n\nFetchMock.catch = function(response) {\n\tif (this.fallbackResponse) {\n\t\tconsole.warn(\n\t\t\t'calling fetchMock.catch() twice - are you sure you want to overwrite the previous fallback response'\n\t\t); // eslint-disable-line\n\t}\n\tthis.fallbackResponse = response || 'ok';\n\treturn this._mock();\n};\n\nFetchMock.spy = function() {\n\tthis._mock();\n\treturn this.catch(this.getNativeFetch());\n};\n\nFetchMock.compileRoute = compileRoute;\n\nFetchMock.once = function(matcher, response, options = {}) {\n\treturn this.mock(\n\t\tmatcher,\n\t\tresponse,\n\t\tObject.assign({}, options, { repeat: 1 })\n\t);\n};\n\n['get', 'post', 'put', 'delete', 'head', 'patch'].forEach(method => {\n\tconst extendOptions = options =>\n\t\tObject.assign({}, options, { method: method.toUpperCase() });\n\n\tFetchMock[method] = function(matcher, response, options = {}) {\n\t\treturn this.mock(matcher, response, extendOptions(options));\n\t};\n\tFetchMock[`${method}Once`] = function(matcher, response, options = {}) {\n\t\treturn this.once(matcher, response, extendOptions(options));\n\t};\n});\n\nFetchMock.resetBehavior = function() {\n\tif (this.realFetch) {\n\t\tthis.global.fetch = this.realFetch;\n\t\tthis.realFetch = undefined;\n\t}\n\tthis.fallbackResponse = undefined;\n\tthis.routes = [];\n\tthis._uncompiledRoutes = [];\n\treturn this;\n};\n\nFetchMock.resetHistory = function() {\n\tthis._calls = [];\n\tthis._holdingPromises = [];\n\tthis.routes.forEach(route => route.reset && route.reset());\n\treturn this;\n};\n\nFetchMock.restore = FetchMock.reset = function() {\n\tthis.resetBehavior();\n\tthis.resetHistory();\n\treturn this;\n};\n\nmodule.exports = FetchMock;\n"]}