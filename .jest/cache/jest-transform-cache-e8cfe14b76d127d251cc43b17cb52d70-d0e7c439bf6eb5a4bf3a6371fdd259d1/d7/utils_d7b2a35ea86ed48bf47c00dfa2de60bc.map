{"version":3,"sources":["utils.js"],"names":["isObject","value","getReferenceToBytes","bufferSource","Object","getPrototypeOf","Buffer","prototype","ArrayBuffer","from","buffer","byteOffset","byteLength","getCopyToBytes","mixin","target","source","keys","getOwnPropertyNames","i","length","defineProperty","getOwnPropertyDescriptor","wrapperSymbol","Symbol","implSymbol","sameObjectCaches","getSameObject","wrapper","prop","creator","create","wrapperForImpl","impl","implForWrapper","tryWrapperForImpl","tryImplForWrapper","iterInternalSymbol","IteratorPrototype","iterator","isArrayIndexPropName","P","Math","pow","s","supportsPropertyIndex","supportedPropertyIndices","supportsPropertyName","supportedPropertyNames","indexedGet","indexedSetNew","indexedSetExisting","namedGet","namedSetNew","namedSetExisting","namedDelete","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\n// Returns \"Type(value) is Object\" in ES terminology.\nfunction isObject(value) {\n  return typeof value === \"object\" && value !== null || typeof value === \"function\";\n}\n\nfunction getReferenceToBytes(bufferSource) {\n  // Node.js' Buffer does not allow subclassing for now, so we can get away with a prototype object check for perf.\n  if (Object.getPrototypeOf(bufferSource) === Buffer.prototype) {\n    return bufferSource;\n  }\n  if (bufferSource instanceof ArrayBuffer) {\n    return Buffer.from(bufferSource);\n  }\n  return Buffer.from(bufferSource.buffer, bufferSource.byteOffset, bufferSource.byteLength);\n}\n\nfunction getCopyToBytes(bufferSource) {\n  return Buffer.from(getReferenceToBytes(bufferSource));\n}\n\nfunction mixin(target, source) {\n  const keys = Object.getOwnPropertyNames(source);\n  for (let i = 0; i < keys.length; ++i) {\n    if (keys[i] in target) {\n      continue;\n    }\n\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n}\n\nconst wrapperSymbol = Symbol(\"wrapper\");\nconst implSymbol = Symbol(\"impl\");\nconst sameObjectCaches = Symbol(\"SameObject caches\");\n\nfunction getSameObject(wrapper, prop, creator) {\n  if (!wrapper[sameObjectCaches]) {\n    wrapper[sameObjectCaches] = Object.create(null);\n  }\n\n  if (prop in wrapper[sameObjectCaches]) {\n    return wrapper[sameObjectCaches][prop];\n  }\n\n  wrapper[sameObjectCaches][prop] = creator();\n  return wrapper[sameObjectCaches][prop];\n}\n\nfunction wrapperForImpl(impl) {\n  return impl ? impl[wrapperSymbol] : null;\n}\n\nfunction implForWrapper(wrapper) {\n  return wrapper ? wrapper[implSymbol] : null;\n}\n\nfunction tryWrapperForImpl(impl) {\n  const wrapper = wrapperForImpl(impl);\n  return wrapper ? wrapper : impl;\n}\n\nfunction tryImplForWrapper(wrapper) {\n  const impl = implForWrapper(wrapper);\n  return impl ? impl : wrapper;\n}\n\nconst iterInternalSymbol = Symbol(\"internal\");\nconst IteratorPrototype = Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]()));\n\nfunction isArrayIndexPropName(P) {\n  if (typeof P !== \"string\") {\n    return false;\n  }\n  const i = P >>> 0;\n  if (i === Math.pow(2, 32) - 1) {\n    return false;\n  }\n  const s = `${i}`;\n  if (P !== s) {\n    return false;\n  }\n  return true;\n}\n\nconst supportsPropertyIndex = Symbol(\"supports property index\");\nconst supportedPropertyIndices = Symbol(\"supported property indices\");\nconst supportsPropertyName = Symbol(\"supports property name\");\nconst supportedPropertyNames = Symbol(\"supported property names\");\nconst indexedGet = Symbol(\"indexed property get\");\nconst indexedSetNew = Symbol(\"indexed property set new\");\nconst indexedSetExisting = Symbol(\"indexed property set existing\");\nconst namedGet = Symbol(\"named property get\");\nconst namedSetNew = Symbol(\"named property set new\");\nconst namedSetExisting = Symbol(\"named property set existing\");\nconst namedDelete = Symbol(\"named property delete\");\n\nmodule.exports = exports = {\n  isObject,\n  getReferenceToBytes,\n  getCopyToBytes,\n  mixin,\n  wrapperSymbol,\n  implSymbol,\n  getSameObject,\n  wrapperForImpl,\n  implForWrapper,\n  tryWrapperForImpl,\n  tryImplForWrapper,\n  iterInternalSymbol,\n  IteratorPrototype,\n  isArrayIndexPropName,\n  supportsPropertyIndex,\n  supportedPropertyIndices,\n  supportsPropertyName,\n  supportedPropertyNames,\n  indexedGet,\n  indexedSetNew,\n  indexedSetExisting,\n  namedGet,\n  namedSetNew,\n  namedSetExisting,\n  namedDelete\n};\n"]}