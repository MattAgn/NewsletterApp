3c87024bec6100cc97baddb4ab173f1f
"use strict";

var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (b.hasOwnProperty(p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});

var OuterSubscriber_1 = require("../OuterSubscriber");

var subscribeToResult_1 = require("../util/subscribeToResult");

function withLatestFrom() {
  var args = [];

  for (var _i = 0; _i < arguments.length; _i++) {
    args[_i] = arguments[_i];
  }

  return function (source) {
    var project;

    if (typeof args[args.length - 1] === 'function') {
      project = args.pop();
    }

    var observables = args;
    return source.lift(new WithLatestFromOperator(observables, project));
  };
}

exports.withLatestFrom = withLatestFrom;

var WithLatestFromOperator = function () {
  function WithLatestFromOperator(observables, project) {
    this.observables = observables;
    this.project = project;
  }

  WithLatestFromOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));
  };

  return WithLatestFromOperator;
}();

var WithLatestFromSubscriber = function (_super) {
  __extends(WithLatestFromSubscriber, _super);

  function WithLatestFromSubscriber(destination, observables, project) {
    var _this = _super.call(this, destination) || this;

    _this.observables = observables;
    _this.project = project;
    _this.toRespond = [];
    var len = observables.length;
    _this.values = new Array(len);

    for (var i = 0; i < len; i++) {
      _this.toRespond.push(i);
    }

    for (var i = 0; i < len; i++) {
      var observable = observables[i];

      _this.add(subscribeToResult_1.subscribeToResult(_this, observable, observable, i));
    }

    return _this;
  }

  WithLatestFromSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.values[outerIndex] = innerValue;
    var toRespond = this.toRespond;

    if (toRespond.length > 0) {
      var found = toRespond.indexOf(outerIndex);

      if (found !== -1) {
        toRespond.splice(found, 1);
      }
    }
  };

  WithLatestFromSubscriber.prototype.notifyComplete = function () {};

  WithLatestFromSubscriber.prototype._next = function (value) {
    if (this.toRespond.length === 0) {
      var args = [value].concat(this.values);

      if (this.project) {
        this._tryProject(args);
      } else {
        this.destination.next(args);
      }
    }
  };

  WithLatestFromSubscriber.prototype._tryProject = function (args) {
    var result;

    try {
      result = this.project.apply(this, args);
    } catch (err) {
      this.destination.error(err);
      return;
    }

    this.destination.next(result);
  };

  return WithLatestFromSubscriber;
}(OuterSubscriber_1.OuterSubscriber);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pbnRlcm5hbC9vcGVyYXRvcnMvd2l0aExhdGVzdEZyb20udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFHQSxJQUFBLGlCQUFBLEdBQUEsT0FBQSxDQUFBLG9CQUFBLENBQUE7O0FBRUEsSUFBQSxtQkFBQSxHQUFBLE9BQUEsQ0FBQSwyQkFBQSxDQUFBOztBQWlFQSxTQUFnQixjQUFoQixHQUE4QjtBQUFPLE1BQUEsSUFBQSxHQUFBLEVBQUE7O09BQUEsSUFBQSxFQUFBLEdBQUEsQyxFQUFBLEVBQUEsR0FBQSxTQUFBLENBQUEsTSxFQUFBLEVBQUEsRSxFQUFxRTtBQUFyRSxJQUFBLElBQUEsQ0FBQSxFQUFBLENBQUEsR0FBQSxTQUFBLENBQUEsRUFBQSxDQUFBOzs7QUFDbkMsU0FBTyxVQUFDLE1BQUQsRUFBc0I7QUFDM0IsUUFBSSxPQUFKOztBQUNBLFFBQUksT0FBTyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQUwsR0FBYyxDQUFmLENBQVgsS0FBaUMsVUFBckMsRUFBaUQ7QUFDL0MsTUFBQSxPQUFPLEdBQUcsSUFBSSxDQUFDLEdBQUwsRUFBVjtBQUNEOztBQUNELFFBQU0sV0FBVyxHQUFzQixJQUF2QztBQUNBLFdBQU8sTUFBTSxDQUFDLElBQVAsQ0FBWSxJQUFJLHNCQUFKLENBQTJCLFdBQTNCLEVBQXdDLE9BQXhDLENBQVosQ0FBUDtBQUNELEdBUEQ7QUFRRDs7QUFURCxPQUFBLENBQUEsY0FBQSxHQUFBLGNBQUE7O0FBV0EsSUFBQSxzQkFBQSxHQUFBLFlBQUE7QUFDRSxXQUFBLHNCQUFBLENBQW9CLFdBQXBCLEVBQ29CLE9BRHBCLEVBQ2lFO0FBRDdDLFNBQUEsV0FBQSxHQUFBLFdBQUE7QUFDQSxTQUFBLE9BQUEsR0FBQSxPQUFBO0FBQ25COztBQUVELEVBQUEsc0JBQUEsQ0FBQSxTQUFBLENBQUEsSUFBQSxHQUFBLFVBQUssVUFBTCxFQUFnQyxNQUFoQyxFQUEy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