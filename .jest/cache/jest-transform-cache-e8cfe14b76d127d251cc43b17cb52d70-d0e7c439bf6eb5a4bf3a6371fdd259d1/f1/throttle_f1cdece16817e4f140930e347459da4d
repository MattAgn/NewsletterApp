2f2762539db4ecd0e4dcb9ac4a5895d8
"use strict";

var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (b.hasOwnProperty(p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});

var OuterSubscriber_1 = require("../OuterSubscriber");

var subscribeToResult_1 = require("../util/subscribeToResult");

exports.defaultThrottleConfig = {
  leading: true,
  trailing: false
};

function throttle(durationSelector, config) {
  if (config === void 0) {
    config = exports.defaultThrottleConfig;
  }

  return function (source) {
    return source.lift(new ThrottleOperator(durationSelector, config.leading, config.trailing));
  };
}

exports.throttle = throttle;

var ThrottleOperator = function () {
  function ThrottleOperator(durationSelector, leading, trailing) {
    this.durationSelector = durationSelector;
    this.leading = leading;
    this.trailing = trailing;
  }

  ThrottleOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));
  };

  return ThrottleOperator;
}();

var ThrottleSubscriber = function (_super) {
  __extends(ThrottleSubscriber, _super);

  function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {
    var _this = _super.call(this, destination) || this;

    _this.destination = destination;
    _this.durationSelector = durationSelector;
    _this._leading = _leading;
    _this._trailing = _trailing;
    _this._hasValue = false;
    return _this;
  }

  ThrottleSubscriber.prototype._next = function (value) {
    this._hasValue = true;
    this._sendValue = value;

    if (!this._throttled) {
      if (this._leading) {
        this.send();
      } else {
        this.throttle(value);
      }
    }
  };

  ThrottleSubscriber.prototype.send = function () {
    var _a = this,
        _hasValue = _a._hasValue,
        _sendValue = _a._sendValue;

    if (_hasValue) {
      this.destination.next(_sendValue);
      this.throttle(_sendValue);
    }

    this._hasValue = false;
    this._sendValue = null;
  };

  ThrottleSubscriber.prototype.throttle = function (value) {
    var duration = this.tryDurationSelector(value);

    if (!!duration) {
      this.add(this._throttled = subscribeToResult_1.subscribeToResult(this, duration));
    }
  };

  ThrottleSubscriber.prototype.tryDurationSelector = function (value) {
    try {
      return this.durationSelector(value);
    } catch (err) {
      this.destination.error(err);
      return null;
    }
  };

  ThrottleSubscriber.prototype.throttlingDone = function () {
    var _a = this,
        _throttled = _a._throttled,
        _trailing = _a._trailing;

    if (_throttled) {
      _throttled.unsubscribe();
    }

    this._throttled = null;

    if (_trailing) {
      this.send();
    }
  };

  ThrottleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.throttlingDone();
  };

  ThrottleSubscriber.prototype.notifyComplete = function () {
    this.throttlingDone();
  };

  return ThrottleSubscriber;
}(OuterSubscriber_1.OuterSubscriber);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pbnRlcm5hbC9vcGVyYXRvcnMvdGhyb3R0bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFLQSxJQUFBLGlCQUFBLEdBQUEsT0FBQSxDQUFBLG9CQUFBLENBQUE7O0FBRUEsSUFBQSxtQkFBQSxHQUFBLE9BQUEsQ0FBQSwyQkFBQSxDQUFBOztBQVNhLE9BQUEsQ0FBQSxxQkFBQSxHQUF3QztBQUNuRCxFQUFBLE9BQU8sRUFBRSxJQUQwQztBQUVuRCxFQUFBLFFBQVEsRUFBRTtBQUZ5QyxDQUF4Qzs7QUFtRGIsU0FBZ0IsUUFBaEIsQ0FBNEIsZ0JBQTVCLEVBQzRCLE1BRDVCLEVBQzBFO0FBQTlDLE1BQUEsTUFBQSxLQUFBLEtBQUEsQ0FBQSxFQUFBO0FBQUEsSUFBQSxNQUFBLEdBQXlCLE9BQUEsQ0FBQSxxQkFBekI7QUFBOEM7O0FBQ3hFLFNBQU8sVUFBQyxNQUFELEVBQXNCO0FBQUssV0FBQSxNQUFNLENBQUMsSUFBUCxDQUFZLElBQUksZ0JBQUosQ0FBcUIsZ0JBQXJCLEVBQXVDLE1BQU0sQ0FBQyxPQUE5QyxFQUF1RCxNQUFNLENBQXpFLFFBQVksQ0FBWixDQUFBO0FBQW9GLEdBQXRIO0FBQ0Q7O0FBSEQsT0FBQSxDQUFBLFFBQUEsR0FBQSxRQUFBOztBQUtBLElBQUEsZ0JBQUEsR0FBQSxZQUFBO0FBQ0UsV0FBQSxnQkFBQSxDQUFvQixnQkFBcEIsRUFDb0IsT0FEcEIsRUFFb0IsUUFGcEIsRUFFcUM7QUFGakIsU0FBQSxnQkFBQSxHQUFBLGdCQUFBO0FBQ0EsU0FBQSxPQUFBLEdBQUEsT0FBQTtBQUNBLFNBQUEsUUFBQSxHQUFBLFFBQUE7QUFDbkI7O0FBRUQsRUFBQSxnQkFBQSxDQUFBLFNBQUEsQ0FBQSxJQUFBLEdBQUEsVUFBSyxVQUFMLEVBQWdDLE1BQWhDLEVBQTJDO0FBQ3pDLFdBQU8sTUFBTSxDQUFDLFNBQVAsQ0FDTCxJQUFJLGtCQUFKLENBQXVCLFVB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