b7c68b76c591e4a135f57479a29f36d8
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

var AnimatedValue = require('./AnimatedValue');

var AnimatedNode = require('./AnimatedNode');

var _require = require('../NativeAnimatedHelper'),
    generateNewAnimationId = _require.generateNewAnimationId,
    shouldUseNativeDriver = _require.shouldUseNativeDriver;

var AnimatedTracking = function (_AnimatedNode) {
  (0, _inherits2.default)(AnimatedTracking, _AnimatedNode);

  function AnimatedTracking(value, parent, animationClass, animationConfig, callback) {
    var _this;

    (0, _classCallCheck2.default)(this, AnimatedTracking);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AnimatedTracking).call(this));
    _this._value = value;
    _this._parent = parent;
    _this._animationClass = animationClass;
    _this._animationConfig = animationConfig;
    _this._useNativeDriver = shouldUseNativeDriver(animationConfig);
    _this._callback = callback;

    _this.__attach();

    return _this;
  }

  (0, _createClass2.default)(AnimatedTracking, [{
    key: "__makeNative",
    value: function __makeNative() {
      this.__isNative = true;

      this._parent.__makeNative();

      (0, _get2.default)((0, _getPrototypeOf2.default)(AnimatedTracking.prototype), "__makeNative", this).call(this);

      this._value.__makeNative();
    }
  }, {
    key: "__getValue",
    value: function __getValue() {
      return this._parent.__getValue();
    }
  }, {
    key: "__attach",
    value: function __attach() {
      this._parent.__addChild(this);

      if (this._useNativeDriver) {
        this.__makeNative();
      }
    }
  }, {
    key: "__detach",
    value: function __detach() {
      this._parent.__removeChild(this);

      (0, _get2.default)((0, _getPrototypeOf2.default)(AnimatedTracking.prototype), "__detach", this).call(this);
    }
  }, {
    key: "update",
    value: function update() {
      this._value.animate(new this._animationClass(_objectSpread({}, this._animationConfig, {
        toValue: this._animationConfig.toValue.__getValue()
      })), this._callback);
    }
  }, {
    key: "__getNativeConfig",
    value: function __getNativeConfig() {
      var animation = new this._animationClass(_objectSpread({}, this._animationConfig, {
        toValue: undefined
      }));

      var animationConfig = animation.__getNativeAnimationConfig();

      return {
        type: 'tracking',
        animationId: generateNewAnimationId(),
        animationConfig: animationConfig,
        toValue: this._parent.__getNativeTag(),
        value: this._value.__getNativeTag()
      };
    }
  }]);
  return AnimatedTracking;
}(AnimatedNode);

module.exports = AnimatedTracking;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFuaW1hdGVkVHJhY2tpbmcuanMiXSwibmFtZXMiOlsiQW5pbWF0ZWRWYWx1ZSIsInJlcXVpcmUiLCJBbmltYXRlZE5vZGUiLCJnZW5lcmF0ZU5ld0FuaW1hdGlvbklkIiwic2hvdWxkVXNlTmF0aXZlRHJpdmVyIiwiQW5pbWF0ZWRUcmFja2luZyIsInZhbHVlIiwicGFyZW50IiwiYW5pbWF0aW9uQ2xhc3MiLCJhbmltYXRpb25Db25maWciLCJjYWxsYmFjayIsIl92YWx1ZSIsIl9wYXJlbnQiLCJfYW5pbWF0aW9uQ2xhc3MiLCJfYW5pbWF0aW9uQ29uZmlnIiwiX3VzZU5hdGl2ZURyaXZlciIsIl9jYWxsYmFjayIsIl9fYXR0YWNoIiwiX19pc05hdGl2ZSIsIl9fbWFrZU5hdGl2ZSIsIl9fZ2V0VmFsdWUiLCJfX2FkZENoaWxkIiwiX19yZW1vdmVDaGlsZCIsImFuaW1hdGUiLCJ0b1ZhbHVlIiwiYW5pbWF0aW9uIiwidW5kZWZpbmVkIiwiX19nZXROYXRpdmVBbmltYXRpb25Db25maWciLCJ0eXBlIiwiYW5pbWF0aW9uSWQiLCJfX2dldE5hdGl2ZVRhZyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQVNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRUEsSUFBTUEsYUFBYSxHQUFHQyxPQUFPLENBQUMsaUJBQUQsQ0FBN0I7O0FBQ0EsSUFBTUMsWUFBWSxHQUFHRCxPQUFPLENBQUMsZ0JBQUQsQ0FBNUI7O2VBSUlBLE9BQU8sQ0FBQyx5QkFBRCxDO0lBRlRFLHNCLFlBQUFBLHNCO0lBQ0FDLHFCLFlBQUFBLHFCOztJQUtJQyxnQjs7O0FBUUosNEJBQ0VDLEtBREYsRUFFRUMsTUFGRixFQUdFQyxjQUhGLEVBSUVDLGVBSkYsRUFLRUMsUUFMRixFQU1FO0FBQUE7O0FBQUE7QUFDQTtBQUNBLFVBQUtDLE1BQUwsR0FBY0wsS0FBZDtBQUNBLFVBQUtNLE9BQUwsR0FBZUwsTUFBZjtBQUNBLFVBQUtNLGVBQUwsR0FBdUJMLGNBQXZCO0FBQ0EsVUFBS00sZ0JBQUwsR0FBd0JMLGVBQXhCO0FBQ0EsVUFBS00sZ0JBQUwsR0FBd0JYLHFCQUFxQixDQUFDSyxlQUFELENBQTdDO0FBQ0EsVUFBS08sU0FBTCxHQUFpQk4sUUFBakI7O0FBQ0EsVUFBS08sUUFBTDs7QUFSQTtBQVNEOzs7O21DQUVjO0FBQ2IsV0FBS0MsVUFBTCxHQUFrQixJQUFsQjs7QUFDQSxXQUFLTixPQUFMLENBQWFPLFlBQWI7O0FBQ0E7O0FBQ0EsV0FBS1IsTUFBTCxDQUFZUSxZQUFaO0FBQ0Q7OztpQ0FFb0I7QUFDbkIsYUFBTyxLQUFLUCxPQUFMLENBQWFRLFVBQWIsRUFBUDtBQUNEOzs7K0JBRWdCO0FBQ2YsV0FBS1IsT0FBTCxDQUFhUyxVQUFiLENBQXdCLElBQXhCOztBQUNBLFVBQUksS0FBS04sZ0JBQVQsRUFBMkI7QUFNekIsYUFBS0ksWUFBTDtBQUNEO0FBQ0Y7OzsrQkFFZ0I7QUFDZixXQUFLUCxPQUFMLENBQWFVLGFBQWIsQ0FBMkIsSUFBM0I7O0FBQ0E7QUFDRDs7OzZCQUVjO0FBQ2IsV0FBS1gsTUFBTCxDQUFZWSxPQUFaLENBQ0UsSUFBSSxLQUFLVixlQUFULG1CQUNLLEtBQUtDLGdCQURWO0FBRUVVLFFBQUFBLE9BQU8sRUFBRyxLQUFLVixnQkFBTCxDQUFzQlUsT0FBdkIsQ0FBcUNKLFVBQXJDO0FBRlgsU0FERixFQUtFLEtBQUtKLFNBTFA7QUFPRDs7O3dDQUV3QjtBQUN2QixVQUFNUyxTQUFTLEdBQUcsSUFBSSxLQUFLWixlQUFULG1CQUNiLEtBQUtDLGdCQURRO0FBR2hCVSxRQUFBQSxPQUFPLEVBQUVFO0FBSE8sU0FBbEI7O0FBS0EsVUFBTWpCLGVBQWUsR0FBR2dCLFNBQVMsQ0FBQ0UsMEJBQVYsRUFBeEI7O0FBQ0EsYUFBTztBQUNMQyxRQUFBQSxJQUFJLEVBQUUsVUFERDtBQUVMQyxRQUFBQSxXQUFXLEVBQUUxQixzQkFBc0IsRUFGOUI7QUFHTE0sUUFBQUEsZUFBZSxFQUFmQSxlQUhLO0FBSUxlLFFBQUFBLE9BQU8sRUFBRSxLQUFLWixPQUFMLENBQWFrQixjQUFiLEVBSko7QUFLTHhCLFFBQUFBLEtBQUssRUFBRSxLQUFLSyxNQUFMLENBQVltQixjQUFaO0FBTEYsT0FBUDtBQU9EOzs7RUE3RTRCNUIsWTs7QUFnRi9CNkIsTUFBTSxDQUFDQyxPQUFQLEdBQWlCM0IsZ0JBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgKGMpIEZhY2Vib29rLCBJbmMuIGFuZCBpdHMgYWZmaWxpYXRlcy5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS5cbiAqXG4gKiBAZmxvd1xuICogQGZvcm1hdFxuICovXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IEFuaW1hdGVkVmFsdWUgPSByZXF1aXJlKCcuL0FuaW1hdGVkVmFsdWUnKTtcbmNvbnN0IEFuaW1hdGVkTm9kZSA9IHJlcXVpcmUoJy4vQW5pbWF0ZWROb2RlJyk7XG5jb25zdCB7XG4gIGdlbmVyYXRlTmV3QW5pbWF0aW9uSWQsXG4gIHNob3VsZFVzZU5hdGl2ZURyaXZlcixcbn0gPSByZXF1aXJlKCcuLi9OYXRpdmVBbmltYXRlZEhlbHBlcicpO1xuXG5pbXBvcnQgdHlwZSB7RW5kQ2FsbGJhY2t9IGZyb20gJy4uL2FuaW1hdGlvbnMvQW5pbWF0aW9uJztcblxuY2xhc3MgQW5pbWF0ZWRUcmFja2luZyBleHRlbmRzIEFuaW1hdGVkTm9kZSB7XG4gIF92YWx1ZTogQW5pbWF0ZWRWYWx1ZTtcbiAgX3BhcmVudDogQW5pbWF0ZWROb2RlO1xuICBfY2FsbGJhY2s6ID9FbmRDYWxsYmFjaztcbiAgX2FuaW1hdGlvbkNvbmZpZzogT2JqZWN0O1xuICBfYW5pbWF0aW9uQ2xhc3M6IGFueTtcbiAgX3VzZU5hdGl2ZURyaXZlcjogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICB2YWx1ZTogQW5pbWF0ZWRWYWx1ZSxcbiAgICBwYXJlbnQ6IEFuaW1hdGVkTm9kZSxcbiAgICBhbmltYXRpb25DbGFzczogYW55LFxuICAgIGFuaW1hdGlvbkNvbmZpZzogT2JqZWN0LFxuICAgIGNhbGxiYWNrPzogP0VuZENhbGxiYWNrLFxuICApIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuX3ZhbHVlID0gdmFsdWU7XG4gICAgdGhpcy5fcGFyZW50ID0gcGFyZW50O1xuICAgIHRoaXMuX2FuaW1hdGlvbkNsYXNzID0gYW5pbWF0aW9uQ2xhc3M7XG4gICAgdGhpcy5fYW5pbWF0aW9uQ29uZmlnID0gYW5pbWF0aW9uQ29uZmlnO1xuICAgIHRoaXMuX3VzZU5hdGl2ZURyaXZlciA9IHNob3VsZFVzZU5hdGl2ZURyaXZlcihhbmltYXRpb25Db25maWcpO1xuICAgIHRoaXMuX2NhbGxiYWNrID0gY2FsbGJhY2s7XG4gICAgdGhpcy5fX2F0dGFjaCgpO1xuICB9XG5cbiAgX19tYWtlTmF0aXZlKCkge1xuICAgIHRoaXMuX19pc05hdGl2ZSA9IHRydWU7XG4gICAgdGhpcy5fcGFyZW50Ll9fbWFrZU5hdGl2ZSgpO1xuICAgIHN1cGVyLl9fbWFrZU5hdGl2ZSgpO1xuICAgIHRoaXMuX3ZhbHVlLl9fbWFrZU5hdGl2ZSgpO1xuICB9XG5cbiAgX19nZXRWYWx1ZSgpOiBPYmplY3Qge1xuICAgIHJldHVybiB0aGlzLl9wYXJlbnQuX19nZXRWYWx1ZSgpO1xuICB9XG5cbiAgX19hdHRhY2goKTogdm9pZCB7XG4gICAgdGhpcy5fcGFyZW50Ll9fYWRkQ2hpbGQodGhpcyk7XG4gICAgaWYgKHRoaXMuX3VzZU5hdGl2ZURyaXZlcikge1xuICAgICAgLy8gd2hlbiB0aGUgdHJhY2tpbmcgc3RhcnRzIHdlIG5lZWQgdG8gY29udmVydCB0aGlzIG5vZGUgdG8gYSBcIm5hdGl2ZSBub2RlXCJcbiAgICAgIC8vIHNvIHRoYXQgdGhlIHBhcmVudCBub2RlIHdpbGwgYmUgbWFkZSBcIm5hdGl2ZVwiIHRvby4gVGhpcyBpcyBuZWNlc3NhcnkgYXNcbiAgICAgIC8vIGlmIHdlIGRvbid0IGRvIHRoaXMgYHVwZGF0ZWAgbWV0aG9kIHdpbGwgZ2V0IGNhbGxlZC4gQXQgdGhhdCBwb2ludCBpdFxuICAgICAgLy8gbWF5IGJlIHRvbyBsYXRlIGFzIGl0IHdvdWxkIG1lYW4gdGhlIEpTIGRyaXZlciBoYXMgYWxyZWFkeSBzdGFydGVkXG4gICAgICAvLyB1cGRhdGluZyBub2RlIHZhbHVlc1xuICAgICAgdGhpcy5fX21ha2VOYXRpdmUoKTtcbiAgICB9XG4gIH1cblxuICBfX2RldGFjaCgpOiB2b2lkIHtcbiAgICB0aGlzLl9wYXJlbnQuX19yZW1vdmVDaGlsZCh0aGlzKTtcbiAgICBzdXBlci5fX2RldGFjaCgpO1xuICB9XG5cbiAgdXBkYXRlKCk6IHZvaWQge1xuICAgIHRoaXMuX3ZhbHVlLmFuaW1hdGUoXG4gICAgICBuZXcgdGhpcy5fYW5pbWF0aW9uQ2xhc3Moe1xuICAgICAgICAuLi50aGlzLl9hbmltYXRpb25Db25maWcsXG4gICAgICAgIHRvVmFsdWU6ICh0aGlzLl9hbmltYXRpb25Db25maWcudG9WYWx1ZTogYW55KS5fX2dldFZhbHVlKCksXG4gICAgICB9KSxcbiAgICAgIHRoaXMuX2NhbGxiYWNrLFxuICAgICk7XG4gIH1cblxuICBfX2dldE5hdGl2ZUNvbmZpZygpOiBhbnkge1xuICAgIGNvbnN0IGFuaW1hdGlvbiA9IG5ldyB0aGlzLl9hbmltYXRpb25DbGFzcyh7XG4gICAgICAuLi50aGlzLl9hbmltYXRpb25Db25maWcsXG4gICAgICAvLyByZW1vdmUgdG9WYWx1ZSBmcm9tIHRoZSBjb25maWcgYXMgaXQncyBhIHJlZiB0byBBbmltYXRlZC5WYWx1ZVxuICAgICAgdG9WYWx1ZTogdW5kZWZpbmVkLFxuICAgIH0pO1xuICAgIGNvbnN0IGFuaW1hdGlvbkNvbmZpZyA9IGFuaW1hdGlvbi5fX2dldE5hdGl2ZUFuaW1hdGlvbkNvbmZpZygpO1xuICAgIHJldHVybiB7XG4gICAgICB0eXBlOiAndHJhY2tpbmcnLFxuICAgICAgYW5pbWF0aW9uSWQ6IGdlbmVyYXRlTmV3QW5pbWF0aW9uSWQoKSxcbiAgICAgIGFuaW1hdGlvbkNvbmZpZyxcbiAgICAgIHRvVmFsdWU6IHRoaXMuX3BhcmVudC5fX2dldE5hdGl2ZVRhZygpLFxuICAgICAgdmFsdWU6IHRoaXMuX3ZhbHVlLl9fZ2V0TmF0aXZlVGFnKCksXG4gICAgfTtcbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEFuaW1hdGVkVHJhY2tpbmc7XG4iXX0=