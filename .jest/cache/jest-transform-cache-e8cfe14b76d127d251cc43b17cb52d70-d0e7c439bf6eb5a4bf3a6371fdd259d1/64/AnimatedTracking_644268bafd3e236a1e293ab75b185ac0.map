{"version":3,"sources":["AnimatedTracking.js"],"names":["AnimatedValue","require","AnimatedNode","generateNewAnimationId","shouldUseNativeDriver","AnimatedTracking","value","parent","animationClass","animationConfig","callback","_value","_parent","_animationClass","_animationConfig","_useNativeDriver","_callback","__attach","__isNative","__makeNative","__getValue","__addChild","__removeChild","animate","toValue","animation","undefined","__getNativeAnimationConfig","type","animationId","__getNativeTag","module","exports"],"mappings":"AASA;;;;;;;;;;;;;;;;;;;;;;AAEA,IAAMA,aAAa,GAAGC,OAAO,CAAC,iBAAD,CAA7B;;AACA,IAAMC,YAAY,GAAGD,OAAO,CAAC,gBAAD,CAA5B;;eAIIA,OAAO,CAAC,yBAAD,C;IAFTE,sB,YAAAA,sB;IACAC,qB,YAAAA,qB;;IAKIC,gB;;;AAQJ,4BACEC,KADF,EAEEC,MAFF,EAGEC,cAHF,EAIEC,eAJF,EAKEC,QALF,EAME;AAAA;;AAAA;AACA;AACA,UAAKC,MAAL,GAAcL,KAAd;AACA,UAAKM,OAAL,GAAeL,MAAf;AACA,UAAKM,eAAL,GAAuBL,cAAvB;AACA,UAAKM,gBAAL,GAAwBL,eAAxB;AACA,UAAKM,gBAAL,GAAwBX,qBAAqB,CAACK,eAAD,CAA7C;AACA,UAAKO,SAAL,GAAiBN,QAAjB;;AACA,UAAKO,QAAL;;AARA;AASD;;;;mCAEc;AACb,WAAKC,UAAL,GAAkB,IAAlB;;AACA,WAAKN,OAAL,CAAaO,YAAb;;AACA;;AACA,WAAKR,MAAL,CAAYQ,YAAZ;AACD;;;iCAEoB;AACnB,aAAO,KAAKP,OAAL,CAAaQ,UAAb,EAAP;AACD;;;+BAEgB;AACf,WAAKR,OAAL,CAAaS,UAAb,CAAwB,IAAxB;;AACA,UAAI,KAAKN,gBAAT,EAA2B;AAMzB,aAAKI,YAAL;AACD;AACF;;;+BAEgB;AACf,WAAKP,OAAL,CAAaU,aAAb,CAA2B,IAA3B;;AACA;AACD;;;6BAEc;AACb,WAAKX,MAAL,CAAYY,OAAZ,CACE,IAAI,KAAKV,eAAT,mBACK,KAAKC,gBADV;AAEEU,QAAAA,OAAO,EAAG,KAAKV,gBAAL,CAAsBU,OAAvB,CAAqCJ,UAArC;AAFX,SADF,EAKE,KAAKJ,SALP;AAOD;;;wCAEwB;AACvB,UAAMS,SAAS,GAAG,IAAI,KAAKZ,eAAT,mBACb,KAAKC,gBADQ;AAGhBU,QAAAA,OAAO,EAAEE;AAHO,SAAlB;;AAKA,UAAMjB,eAAe,GAAGgB,SAAS,CAACE,0BAAV,EAAxB;;AACA,aAAO;AACLC,QAAAA,IAAI,EAAE,UADD;AAELC,QAAAA,WAAW,EAAE1B,sBAAsB,EAF9B;AAGLM,QAAAA,eAAe,EAAfA,eAHK;AAILe,QAAAA,OAAO,EAAE,KAAKZ,OAAL,CAAakB,cAAb,EAJJ;AAKLxB,QAAAA,KAAK,EAAE,KAAKK,MAAL,CAAYmB,cAAZ;AALF,OAAP;AAOD;;;EA7E4B5B,Y;;AAgF/B6B,MAAM,CAACC,OAAP,GAAiB3B,gBAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nconst AnimatedValue = require('./AnimatedValue');\nconst AnimatedNode = require('./AnimatedNode');\nconst {\n  generateNewAnimationId,\n  shouldUseNativeDriver,\n} = require('../NativeAnimatedHelper');\n\nimport type {EndCallback} from '../animations/Animation';\n\nclass AnimatedTracking extends AnimatedNode {\n  _value: AnimatedValue;\n  _parent: AnimatedNode;\n  _callback: ?EndCallback;\n  _animationConfig: Object;\n  _animationClass: any;\n  _useNativeDriver: boolean;\n\n  constructor(\n    value: AnimatedValue,\n    parent: AnimatedNode,\n    animationClass: any,\n    animationConfig: Object,\n    callback?: ?EndCallback,\n  ) {\n    super();\n    this._value = value;\n    this._parent = parent;\n    this._animationClass = animationClass;\n    this._animationConfig = animationConfig;\n    this._useNativeDriver = shouldUseNativeDriver(animationConfig);\n    this._callback = callback;\n    this.__attach();\n  }\n\n  __makeNative() {\n    this.__isNative = true;\n    this._parent.__makeNative();\n    super.__makeNative();\n    this._value.__makeNative();\n  }\n\n  __getValue(): Object {\n    return this._parent.__getValue();\n  }\n\n  __attach(): void {\n    this._parent.__addChild(this);\n    if (this._useNativeDriver) {\n      // when the tracking starts we need to convert this node to a \"native node\"\n      // so that the parent node will be made \"native\" too. This is necessary as\n      // if we don't do this `update` method will get called. At that point it\n      // may be too late as it would mean the JS driver has already started\n      // updating node values\n      this.__makeNative();\n    }\n  }\n\n  __detach(): void {\n    this._parent.__removeChild(this);\n    super.__detach();\n  }\n\n  update(): void {\n    this._value.animate(\n      new this._animationClass({\n        ...this._animationConfig,\n        toValue: (this._animationConfig.toValue: any).__getValue(),\n      }),\n      this._callback,\n    );\n  }\n\n  __getNativeConfig(): any {\n    const animation = new this._animationClass({\n      ...this._animationConfig,\n      // remove toValue from the config as it's a ref to Animated.Value\n      toValue: undefined,\n    });\n    const animationConfig = animation.__getNativeAnimationConfig();\n    return {\n      type: 'tracking',\n      animationId: generateNewAnimationId(),\n      animationConfig,\n      toValue: this._parent.__getNativeTag(),\n      value: this._value.__getNativeTag(),\n    };\n  }\n}\n\nmodule.exports = AnimatedTracking;\n"]}