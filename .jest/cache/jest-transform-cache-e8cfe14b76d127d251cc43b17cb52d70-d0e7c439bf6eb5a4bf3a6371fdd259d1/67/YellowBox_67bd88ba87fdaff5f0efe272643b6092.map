{"version":3,"sources":["YellowBox.js"],"names":["React","require","YellowBox","__DEV__","Platform","RCTLog","YellowBoxList","YellowBoxRegistry","console","error","warn","state","registry","_handleDismiss","category","delete","_handleDismissAll","_subscription","observe","setState","unsubscribe","clear","patterns","addIgnorePatterns","args","call","startsWith","registerWarning","disableYellowBox","setDisabled","Object","defineProperty","configurable","get","isDisabled","set","value","isTesting","setWarningHandler","Component","add","framesToPop","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nconst React = require('react');\n\nimport type {Category} from './Data/YellowBoxCategory';\nimport type {\n  Registry,\n  Subscription,\n  IgnorePattern,\n} from './Data/YellowBoxRegistry';\n\ntype Props = $ReadOnly<{||}>;\ntype State = {|\n  registry: ?Registry,\n|};\n\nlet YellowBox;\n\n/**\n * YellowBox displays warnings at the bottom of the screen.\n *\n * Warnings help guard against subtle yet significant issues that can impact the\n * quality of the app. This \"in your face\" style of warning allows developers to\n * notice and correct these issues as quickly as possible.\n *\n * YellowBox is only enabled in `__DEV__`. Set the following flag to disable it:\n *\n *   console.disableYellowBox = true;\n *\n * Ignore specific warnings by calling:\n *\n *   YellowBox.ignoreWarnings(['Warning: ...']);\n *\n * Strings supplied to `YellowBox.ignoreWarnings` only need to be a substring of\n * the ignored warning messages.\n */\nif (__DEV__) {\n  const Platform = require('../Utilities/Platform');\n  const RCTLog = require('../Utilities/RCTLog');\n  const YellowBoxList = require('./UI/YellowBoxList');\n  const YellowBoxRegistry = require('./Data/YellowBoxRegistry');\n\n  const {error, warn} = console;\n\n  // eslint-disable-next-line no-shadow\n  YellowBox = class YellowBox extends React.Component<Props, State> {\n    static ignoreWarnings(patterns: $ReadOnlyArray<IgnorePattern>): void {\n      YellowBoxRegistry.addIgnorePatterns(patterns);\n    }\n\n    static install(): void {\n      (console: any).error = function(...args) {\n        error.call(console, ...args);\n        // Show YellowBox for the `warning` module.\n        if (typeof args[0] === 'string' && args[0].startsWith('Warning: ')) {\n          registerWarning(...args);\n        }\n      };\n\n      (console: any).warn = function(...args) {\n        warn.call(console, ...args);\n        registerWarning(...args);\n      };\n\n      if ((console: any).disableYellowBox === true) {\n        YellowBoxRegistry.setDisabled(true);\n      }\n      (Object.defineProperty: any)(console, 'disableYellowBox', {\n        configurable: true,\n        get: () => YellowBoxRegistry.isDisabled(),\n        set: value => YellowBoxRegistry.setDisabled(value),\n      });\n\n      if (Platform.isTesting) {\n        (console: any).disableYellowBox = true;\n      }\n\n      RCTLog.setWarningHandler((...args) => {\n        registerWarning(...args);\n      });\n    }\n\n    static uninstall(): void {\n      (console: any).error = error;\n      (console: any).warn = error;\n      delete (console: any).disableYellowBox;\n    }\n\n    _subscription: ?Subscription;\n\n    state = {\n      registry: null,\n    };\n\n    render(): React.Node {\n      // TODO: Ignore warnings that fire when rendering `YellowBox` itself.\n      return this.state.registry == null ? null : (\n        <YellowBoxList\n          onDismiss={this._handleDismiss}\n          onDismissAll={this._handleDismissAll}\n          registry={this.state.registry}\n        />\n      );\n    }\n\n    componentDidMount(): void {\n      this._subscription = YellowBoxRegistry.observe(registry => {\n        this.setState({registry});\n      });\n    }\n\n    componentWillUnmount(): void {\n      if (this._subscription != null) {\n        this._subscription.unsubscribe();\n      }\n    }\n\n    _handleDismiss = (category: Category): void => {\n      YellowBoxRegistry.delete(category);\n    };\n\n    _handleDismissAll(): void {\n      YellowBoxRegistry.clear();\n    }\n  };\n\n  const registerWarning = (...args): void => {\n    YellowBoxRegistry.add({args, framesToPop: 2});\n  };\n} else {\n  YellowBox = class extends React.Component<Props> {\n    static ignoreWarnings(patterns: $ReadOnlyArray<IgnorePattern>): void {\n      // Do nothing.\n    }\n\n    static install(): void {\n      // Do nothing.\n    }\n\n    static uninstall(): void {\n      // Do nothing.\n    }\n\n    render(): React.Node {\n      return null;\n    }\n  };\n}\n\nmodule.exports = YellowBox;\n"]}