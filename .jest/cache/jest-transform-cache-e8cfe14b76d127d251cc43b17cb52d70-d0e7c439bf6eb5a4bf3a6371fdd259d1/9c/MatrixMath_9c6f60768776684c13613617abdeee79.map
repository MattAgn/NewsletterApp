{"version":3,"sources":["MatrixMath.js"],"names":["invariant","require","MatrixMath","createIdentityMatrix","createCopy","m","createOrthographic","left","right","bottom","top","near","far","a","b","c","tx","ty","tz","createFrustum","r_width","r_height","r_depth","x","y","A","B","C","D","createPerspective","fovInRadians","aspect","h","Math","tan","createTranslate2d","mat","reuseTranslate2dCommand","matrixCommand","reuseTranslate3dCommand","z","createScale","factor","reuseScaleCommand","reuseScale3dCommand","reusePerspectiveCommand","p","reuseScaleXCommand","reuseScaleYCommand","reuseScaleZCommand","reuseRotateXCommand","radians","cos","sin","reuseRotateYCommand","amount","reuseRotateZCommand","createRotateZ","reuseSkewXCommand","reuseSkewYCommand","multiplyInto","out","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b0","b1","b2","b3","determinant","matrix","m00","m01","m02","m03","m10","m11","m12","m13","m20","m21","m22","m23","m30","m31","m32","m33","inverse","det","transpose","multiplyVectorByMatrix","v","vx","vy","vz","vw","v3Length","sqrt","v3Normalize","vector","im","v3Dot","v3Combine","aScale","bScale","v3Cross","quaternionToDegreesXYZ","q","row","qx","qy","qz","qw","qw2","qx2","qy2","qz2","test","unit","conv","PI","atan2","roundTo3Places","asin","n","arr","toString","split","round","decomposeMatrix","transformMatrix","length","perspective","quaternion","scale","skew","translation","perspectiveMatrix","i","push","j","value","rightHandSide","inversePerspectiveMatrix","transposedInversePerspectiveMatrix","pdum3","max","rotationDegrees","rotate","rotateX","rotateY","scaleX","scaleY","translateX","translateY","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @noflow\n */\n\n/* eslint-disable space-infix-ops */\n'use strict';\n\nconst invariant = require('invariant');\n\n/**\n * Memory conservative (mutative) matrix math utilities. Uses \"command\"\n * matrices, which are reusable.\n */\nconst MatrixMath = {\n  createIdentityMatrix: function() {\n    return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n  },\n\n  createCopy: function(m) {\n    return [\n      m[0],\n      m[1],\n      m[2],\n      m[3],\n      m[4],\n      m[5],\n      m[6],\n      m[7],\n      m[8],\n      m[9],\n      m[10],\n      m[11],\n      m[12],\n      m[13],\n      m[14],\n      m[15],\n    ];\n  },\n\n  createOrthographic: function(left, right, bottom, top, near, far) {\n    const a = 2 / (right - left);\n    const b = 2 / (top - bottom);\n    const c = -2 / (far - near);\n\n    const tx = -(right + left) / (right - left);\n    const ty = -(top + bottom) / (top - bottom);\n    const tz = -(far + near) / (far - near);\n\n    return [a, 0, 0, 0, 0, b, 0, 0, 0, 0, c, 0, tx, ty, tz, 1];\n  },\n\n  createFrustum: function(left, right, bottom, top, near, far) {\n    const r_width = 1 / (right - left);\n    const r_height = 1 / (top - bottom);\n    const r_depth = 1 / (near - far);\n    const x = 2 * (near * r_width);\n    const y = 2 * (near * r_height);\n    const A = (right + left) * r_width;\n    const B = (top + bottom) * r_height;\n    const C = (far + near) * r_depth;\n    const D = 2 * (far * near * r_depth);\n    return [x, 0, 0, 0, 0, y, 0, 0, A, B, C, -1, 0, 0, D, 0];\n  },\n\n  /**\n   * This create a perspective projection towards negative z\n   * Clipping the z range of [-near, -far]\n   *\n   * @param fovInRadians - field of view in randians\n   */\n  createPerspective: function(fovInRadians, aspect, near, far) {\n    const h = 1 / Math.tan(fovInRadians / 2);\n    const r_depth = 1 / (near - far);\n    const C = (far + near) * r_depth;\n    const D = 2 * (far * near * r_depth);\n    return [h / aspect, 0, 0, 0, 0, h, 0, 0, 0, 0, C, -1, 0, 0, D, 0];\n  },\n\n  createTranslate2d: function(x, y) {\n    const mat = MatrixMath.createIdentityMatrix();\n    MatrixMath.reuseTranslate2dCommand(mat, x, y);\n    return mat;\n  },\n\n  reuseTranslate2dCommand: function(matrixCommand, x, y) {\n    matrixCommand[12] = x;\n    matrixCommand[13] = y;\n  },\n\n  reuseTranslate3dCommand: function(matrixCommand, x, y, z) {\n    matrixCommand[12] = x;\n    matrixCommand[13] = y;\n    matrixCommand[14] = z;\n  },\n\n  createScale: function(factor) {\n    const mat = MatrixMath.createIdentityMatrix();\n    MatrixMath.reuseScaleCommand(mat, factor);\n    return mat;\n  },\n\n  reuseScaleCommand: function(matrixCommand, factor) {\n    matrixCommand[0] = factor;\n    matrixCommand[5] = factor;\n  },\n\n  reuseScale3dCommand: function(matrixCommand, x, y, z) {\n    matrixCommand[0] = x;\n    matrixCommand[5] = y;\n    matrixCommand[10] = z;\n  },\n\n  reusePerspectiveCommand: function(matrixCommand, p) {\n    matrixCommand[11] = -1 / p;\n  },\n\n  reuseScaleXCommand(matrixCommand, factor) {\n    matrixCommand[0] = factor;\n  },\n\n  reuseScaleYCommand(matrixCommand, factor) {\n    matrixCommand[5] = factor;\n  },\n\n  reuseScaleZCommand(matrixCommand, factor) {\n    matrixCommand[10] = factor;\n  },\n\n  reuseRotateXCommand: function(matrixCommand, radians) {\n    matrixCommand[5] = Math.cos(radians);\n    matrixCommand[6] = Math.sin(radians);\n    matrixCommand[9] = -Math.sin(radians);\n    matrixCommand[10] = Math.cos(radians);\n  },\n\n  reuseRotateYCommand: function(matrixCommand, amount) {\n    matrixCommand[0] = Math.cos(amount);\n    matrixCommand[2] = -Math.sin(amount);\n    matrixCommand[8] = Math.sin(amount);\n    matrixCommand[10] = Math.cos(amount);\n  },\n\n  // http://www.w3.org/TR/css3-transforms/#recomposing-to-a-2d-matrix\n  reuseRotateZCommand: function(matrixCommand, radians) {\n    matrixCommand[0] = Math.cos(radians);\n    matrixCommand[1] = Math.sin(radians);\n    matrixCommand[4] = -Math.sin(radians);\n    matrixCommand[5] = Math.cos(radians);\n  },\n\n  createRotateZ: function(radians) {\n    const mat = MatrixMath.createIdentityMatrix();\n    MatrixMath.reuseRotateZCommand(mat, radians);\n    return mat;\n  },\n\n  reuseSkewXCommand: function(matrixCommand, radians) {\n    matrixCommand[4] = Math.tan(radians);\n  },\n\n  reuseSkewYCommand: function(matrixCommand, radians) {\n    matrixCommand[1] = Math.tan(radians);\n  },\n\n  multiplyInto: function(out, a, b) {\n    const a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3],\n      a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7],\n      a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11],\n      a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n\n    let b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[4];\n    b1 = b[5];\n    b2 = b[6];\n    b3 = b[7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[8];\n    b1 = b[9];\n    b2 = b[10];\n    b3 = b[11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[12];\n    b1 = b[13];\n    b2 = b[14];\n    b3 = b[15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  },\n\n  determinant(matrix: Array<number>): number {\n    const [\n      m00,\n      m01,\n      m02,\n      m03,\n      m10,\n      m11,\n      m12,\n      m13,\n      m20,\n      m21,\n      m22,\n      m23,\n      m30,\n      m31,\n      m32,\n      m33,\n    ] = matrix;\n    return (\n      m03 * m12 * m21 * m30 -\n      m02 * m13 * m21 * m30 -\n      m03 * m11 * m22 * m30 +\n      m01 * m13 * m22 * m30 +\n      m02 * m11 * m23 * m30 -\n      m01 * m12 * m23 * m30 -\n      m03 * m12 * m20 * m31 +\n      m02 * m13 * m20 * m31 +\n      m03 * m10 * m22 * m31 -\n      m00 * m13 * m22 * m31 -\n      m02 * m10 * m23 * m31 +\n      m00 * m12 * m23 * m31 +\n      m03 * m11 * m20 * m32 -\n      m01 * m13 * m20 * m32 -\n      m03 * m10 * m21 * m32 +\n      m00 * m13 * m21 * m32 +\n      m01 * m10 * m23 * m32 -\n      m00 * m11 * m23 * m32 -\n      m02 * m11 * m20 * m33 +\n      m01 * m12 * m20 * m33 +\n      m02 * m10 * m21 * m33 -\n      m00 * m12 * m21 * m33 -\n      m01 * m10 * m22 * m33 +\n      m00 * m11 * m22 * m33\n    );\n  },\n\n  /**\n   * Inverse of a matrix. Multiplying by the inverse is used in matrix math\n   * instead of division.\n   *\n   * Formula from:\n   * http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n   */\n  inverse(matrix: Array<number>): Array<number> {\n    const det = MatrixMath.determinant(matrix);\n    if (!det) {\n      return matrix;\n    }\n    const [\n      m00,\n      m01,\n      m02,\n      m03,\n      m10,\n      m11,\n      m12,\n      m13,\n      m20,\n      m21,\n      m22,\n      m23,\n      m30,\n      m31,\n      m32,\n      m33,\n    ] = matrix;\n    return [\n      (m12 * m23 * m31 -\n        m13 * m22 * m31 +\n        m13 * m21 * m32 -\n        m11 * m23 * m32 -\n        m12 * m21 * m33 +\n        m11 * m22 * m33) /\n        det,\n      (m03 * m22 * m31 -\n        m02 * m23 * m31 -\n        m03 * m21 * m32 +\n        m01 * m23 * m32 +\n        m02 * m21 * m33 -\n        m01 * m22 * m33) /\n        det,\n      (m02 * m13 * m31 -\n        m03 * m12 * m31 +\n        m03 * m11 * m32 -\n        m01 * m13 * m32 -\n        m02 * m11 * m33 +\n        m01 * m12 * m33) /\n        det,\n      (m03 * m12 * m21 -\n        m02 * m13 * m21 -\n        m03 * m11 * m22 +\n        m01 * m13 * m22 +\n        m02 * m11 * m23 -\n        m01 * m12 * m23) /\n        det,\n      (m13 * m22 * m30 -\n        m12 * m23 * m30 -\n        m13 * m20 * m32 +\n        m10 * m23 * m32 +\n        m12 * m20 * m33 -\n        m10 * m22 * m33) /\n        det,\n      (m02 * m23 * m30 -\n        m03 * m22 * m30 +\n        m03 * m20 * m32 -\n        m00 * m23 * m32 -\n        m02 * m20 * m33 +\n        m00 * m22 * m33) /\n        det,\n      (m03 * m12 * m30 -\n        m02 * m13 * m30 -\n        m03 * m10 * m32 +\n        m00 * m13 * m32 +\n        m02 * m10 * m33 -\n        m00 * m12 * m33) /\n        det,\n      (m02 * m13 * m20 -\n        m03 * m12 * m20 +\n        m03 * m10 * m22 -\n        m00 * m13 * m22 -\n        m02 * m10 * m23 +\n        m00 * m12 * m23) /\n        det,\n      (m11 * m23 * m30 -\n        m13 * m21 * m30 +\n        m13 * m20 * m31 -\n        m10 * m23 * m31 -\n        m11 * m20 * m33 +\n        m10 * m21 * m33) /\n        det,\n      (m03 * m21 * m30 -\n        m01 * m23 * m30 -\n        m03 * m20 * m31 +\n        m00 * m23 * m31 +\n        m01 * m20 * m33 -\n        m00 * m21 * m33) /\n        det,\n      (m01 * m13 * m30 -\n        m03 * m11 * m30 +\n        m03 * m10 * m31 -\n        m00 * m13 * m31 -\n        m01 * m10 * m33 +\n        m00 * m11 * m33) /\n        det,\n      (m03 * m11 * m20 -\n        m01 * m13 * m20 -\n        m03 * m10 * m21 +\n        m00 * m13 * m21 +\n        m01 * m10 * m23 -\n        m00 * m11 * m23) /\n        det,\n      (m12 * m21 * m30 -\n        m11 * m22 * m30 -\n        m12 * m20 * m31 +\n        m10 * m22 * m31 +\n        m11 * m20 * m32 -\n        m10 * m21 * m32) /\n        det,\n      (m01 * m22 * m30 -\n        m02 * m21 * m30 +\n        m02 * m20 * m31 -\n        m00 * m22 * m31 -\n        m01 * m20 * m32 +\n        m00 * m21 * m32) /\n        det,\n      (m02 * m11 * m30 -\n        m01 * m12 * m30 -\n        m02 * m10 * m31 +\n        m00 * m12 * m31 +\n        m01 * m10 * m32 -\n        m00 * m11 * m32) /\n        det,\n      (m01 * m12 * m20 -\n        m02 * m11 * m20 +\n        m02 * m10 * m21 -\n        m00 * m12 * m21 -\n        m01 * m10 * m22 +\n        m00 * m11 * m22) /\n        det,\n    ];\n  },\n\n  /**\n   * Turns columns into rows and rows into columns.\n   */\n  transpose(m: Array<number>): Array<number> {\n    return [\n      m[0],\n      m[4],\n      m[8],\n      m[12],\n      m[1],\n      m[5],\n      m[9],\n      m[13],\n      m[2],\n      m[6],\n      m[10],\n      m[14],\n      m[3],\n      m[7],\n      m[11],\n      m[15],\n    ];\n  },\n\n  /**\n   * Based on: http://tog.acm.org/resources/GraphicsGems/gemsii/unmatrix.c\n   */\n  multiplyVectorByMatrix(v: Array<number>, m: Array<number>): Array<number> {\n    const [vx, vy, vz, vw] = v;\n    return [\n      vx * m[0] + vy * m[4] + vz * m[8] + vw * m[12],\n      vx * m[1] + vy * m[5] + vz * m[9] + vw * m[13],\n      vx * m[2] + vy * m[6] + vz * m[10] + vw * m[14],\n      vx * m[3] + vy * m[7] + vz * m[11] + vw * m[15],\n    ];\n  },\n\n  /**\n   * From: https://code.google.com/p/webgl-mjs/source/browse/mjs.js\n   */\n  v3Length(a: Array<number>): number {\n    return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);\n  },\n\n  /**\n   * Based on: https://code.google.com/p/webgl-mjs/source/browse/mjs.js\n   */\n  v3Normalize(vector: Array<number>, v3Length: number): Array<number> {\n    const im = 1 / (v3Length || MatrixMath.v3Length(vector));\n    return [vector[0] * im, vector[1] * im, vector[2] * im];\n  },\n\n  /**\n   * The dot product of a and b, two 3-element vectors.\n   * From: https://code.google.com/p/webgl-mjs/source/browse/mjs.js\n   */\n  v3Dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  },\n\n  /**\n   * From:\n   * http://www.opensource.apple.com/source/WebCore/WebCore-514/platform/graphics/transforms/TransformationMatrix.cpp\n   */\n  v3Combine(\n    a: Array<number>,\n    b: Array<number>,\n    aScale: number,\n    bScale: number,\n  ): Array<number> {\n    return [\n      aScale * a[0] + bScale * b[0],\n      aScale * a[1] + bScale * b[1],\n      aScale * a[2] + bScale * b[2],\n    ];\n  },\n\n  /**\n   * From:\n   * http://www.opensource.apple.com/source/WebCore/WebCore-514/platform/graphics/transforms/TransformationMatrix.cpp\n   */\n  v3Cross(a: Array<number>, b: Array<number>): Array<number> {\n    return [\n      a[1] * b[2] - a[2] * b[1],\n      a[2] * b[0] - a[0] * b[2],\n      a[0] * b[1] - a[1] * b[0],\n    ];\n  },\n\n  /**\n   * Based on:\n   * http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToEuler/\n   * and:\n   * http://quat.zachbennett.com/\n   *\n   * Note that this rounds degrees to the thousandth of a degree, due to\n   * floating point errors in the creation of the quaternion.\n   *\n   * Also note that this expects the qw value to be last, not first.\n   *\n   * Also, when researching this, remember that:\n   * yaw   === heading            === z-axis\n   * pitch === elevation/attitude === y-axis\n   * roll  === bank               === x-axis\n   */\n  quaternionToDegreesXYZ(q: Array<number>, matrix, row): Array<number> {\n    const [qx, qy, qz, qw] = q;\n    const qw2 = qw * qw;\n    const qx2 = qx * qx;\n    const qy2 = qy * qy;\n    const qz2 = qz * qz;\n    const test = qx * qy + qz * qw;\n    const unit = qw2 + qx2 + qy2 + qz2;\n    const conv = 180 / Math.PI;\n\n    if (test > 0.49999 * unit) {\n      return [0, 2 * Math.atan2(qx, qw) * conv, 90];\n    }\n    if (test < -0.49999 * unit) {\n      return [0, -2 * Math.atan2(qx, qw) * conv, -90];\n    }\n\n    return [\n      MatrixMath.roundTo3Places(\n        Math.atan2(2 * qx * qw - 2 * qy * qz, 1 - 2 * qx2 - 2 * qz2) * conv,\n      ),\n      MatrixMath.roundTo3Places(\n        Math.atan2(2 * qy * qw - 2 * qx * qz, 1 - 2 * qy2 - 2 * qz2) * conv,\n      ),\n      MatrixMath.roundTo3Places(Math.asin(2 * qx * qy + 2 * qz * qw) * conv),\n    ];\n  },\n\n  /**\n   * Based on:\n   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/round\n   */\n  roundTo3Places(n: number): number {\n    const arr = n.toString().split('e');\n    return Math.round(arr[0] + 'e' + (arr[1] ? +arr[1] - 3 : 3)) * 0.001;\n  },\n\n  /**\n   * Decompose a matrix into separate transform values, for use on platforms\n   * where applying a precomposed matrix is not possible, and transforms are\n   * applied in an inflexible ordering (e.g. Android).\n   *\n   * Implementation based on\n   * http://www.w3.org/TR/css3-transforms/#decomposing-a-2d-matrix\n   * http://www.w3.org/TR/css3-transforms/#decomposing-a-3d-matrix\n   * which was based on\n   * http://tog.acm.org/resources/GraphicsGems/gemsii/unmatrix.c\n   */\n  decomposeMatrix(transformMatrix: Array<number>): ?Object {\n    invariant(\n      transformMatrix.length === 16,\n      'Matrix decomposition needs a list of 3d matrix values, received %s',\n      transformMatrix,\n    );\n\n    // output values\n    let perspective = [];\n    const quaternion = [];\n    const scale = [];\n    const skew = [];\n    const translation = [];\n\n    // create normalized, 2d array matrix\n    // and normalized 1d array perspectiveMatrix with redefined 4th column\n    if (!transformMatrix[15]) {\n      return;\n    }\n    const matrix = [];\n    const perspectiveMatrix = [];\n    for (let i = 0; i < 4; i++) {\n      matrix.push([]);\n      for (let j = 0; j < 4; j++) {\n        const value = transformMatrix[i * 4 + j] / transformMatrix[15];\n        matrix[i].push(value);\n        perspectiveMatrix.push(j === 3 ? 0 : value);\n      }\n    }\n    perspectiveMatrix[15] = 1;\n\n    // test for singularity of upper 3x3 part of the perspective matrix\n    if (!MatrixMath.determinant(perspectiveMatrix)) {\n      return;\n    }\n\n    // isolate perspective\n    if (matrix[0][3] !== 0 || matrix[1][3] !== 0 || matrix[2][3] !== 0) {\n      // rightHandSide is the right hand side of the equation.\n      // rightHandSide is a vector, or point in 3d space relative to the origin.\n      const rightHandSide = [\n        matrix[0][3],\n        matrix[1][3],\n        matrix[2][3],\n        matrix[3][3],\n      ];\n\n      // Solve the equation by inverting perspectiveMatrix and multiplying\n      // rightHandSide by the inverse.\n      const inversePerspectiveMatrix = MatrixMath.inverse(perspectiveMatrix);\n      const transposedInversePerspectiveMatrix = MatrixMath.transpose(\n        inversePerspectiveMatrix,\n      );\n      perspective = MatrixMath.multiplyVectorByMatrix(\n        rightHandSide,\n        transposedInversePerspectiveMatrix,\n      );\n    } else {\n      // no perspective\n      perspective[0] = perspective[1] = perspective[2] = 0;\n      perspective[3] = 1;\n    }\n\n    // translation is simple\n    for (let i = 0; i < 3; i++) {\n      translation[i] = matrix[3][i];\n    }\n\n    // Now get scale and shear.\n    // 'row' is a 3 element array of 3 component vectors\n    const row = [];\n    for (let i = 0; i < 3; i++) {\n      row[i] = [matrix[i][0], matrix[i][1], matrix[i][2]];\n    }\n\n    // Compute X scale factor and normalize first row.\n    scale[0] = MatrixMath.v3Length(row[0]);\n    row[0] = MatrixMath.v3Normalize(row[0], scale[0]);\n\n    // Compute XY shear factor and make 2nd row orthogonal to 1st.\n    skew[0] = MatrixMath.v3Dot(row[0], row[1]);\n    row[1] = MatrixMath.v3Combine(row[1], row[0], 1.0, -skew[0]);\n\n    // Compute XY shear factor and make 2nd row orthogonal to 1st.\n    skew[0] = MatrixMath.v3Dot(row[0], row[1]);\n    row[1] = MatrixMath.v3Combine(row[1], row[0], 1.0, -skew[0]);\n\n    // Now, compute Y scale and normalize 2nd row.\n    scale[1] = MatrixMath.v3Length(row[1]);\n    row[1] = MatrixMath.v3Normalize(row[1], scale[1]);\n    skew[0] /= scale[1];\n\n    // Compute XZ and YZ shears, orthogonalize 3rd row\n    skew[1] = MatrixMath.v3Dot(row[0], row[2]);\n    row[2] = MatrixMath.v3Combine(row[2], row[0], 1.0, -skew[1]);\n    skew[2] = MatrixMath.v3Dot(row[1], row[2]);\n    row[2] = MatrixMath.v3Combine(row[2], row[1], 1.0, -skew[2]);\n\n    // Next, get Z scale and normalize 3rd row.\n    scale[2] = MatrixMath.v3Length(row[2]);\n    row[2] = MatrixMath.v3Normalize(row[2], scale[2]);\n    skew[1] /= scale[2];\n    skew[2] /= scale[2];\n\n    // At this point, the matrix (in rows) is orthonormal.\n    // Check for a coordinate system flip.  If the determinant\n    // is -1, then negate the matrix and the scaling factors.\n    const pdum3 = MatrixMath.v3Cross(row[1], row[2]);\n    if (MatrixMath.v3Dot(row[0], pdum3) < 0) {\n      for (let i = 0; i < 3; i++) {\n        scale[i] *= -1;\n        row[i][0] *= -1;\n        row[i][1] *= -1;\n        row[i][2] *= -1;\n      }\n    }\n\n    // Now, get the rotations out\n    quaternion[0] =\n      0.5 * Math.sqrt(Math.max(1 + row[0][0] - row[1][1] - row[2][2], 0));\n    quaternion[1] =\n      0.5 * Math.sqrt(Math.max(1 - row[0][0] + row[1][1] - row[2][2], 0));\n    quaternion[2] =\n      0.5 * Math.sqrt(Math.max(1 - row[0][0] - row[1][1] + row[2][2], 0));\n    quaternion[3] =\n      0.5 * Math.sqrt(Math.max(1 + row[0][0] + row[1][1] + row[2][2], 0));\n\n    if (row[2][1] > row[1][2]) {\n      quaternion[0] = -quaternion[0];\n    }\n    if (row[0][2] > row[2][0]) {\n      quaternion[1] = -quaternion[1];\n    }\n    if (row[1][0] > row[0][1]) {\n      quaternion[2] = -quaternion[2];\n    }\n\n    // correct for occasional, weird Euler synonyms for 2d rotation\n    let rotationDegrees;\n    if (\n      quaternion[0] < 0.001 &&\n      quaternion[0] >= 0 &&\n      quaternion[1] < 0.001 &&\n      quaternion[1] >= 0\n    ) {\n      // this is a 2d rotation on the z-axis\n      rotationDegrees = [\n        0,\n        0,\n        MatrixMath.roundTo3Places(\n          (Math.atan2(row[0][1], row[0][0]) * 180) / Math.PI,\n        ),\n      ];\n    } else {\n      rotationDegrees = MatrixMath.quaternionToDegreesXYZ(\n        quaternion,\n        matrix,\n        row,\n      );\n    }\n\n    // expose both base data and convenience names\n    return {\n      rotationDegrees,\n      perspective,\n      quaternion,\n      scale,\n      skew,\n      translation,\n\n      rotate: rotationDegrees[2],\n      rotateX: rotationDegrees[0],\n      rotateY: rotationDegrees[1],\n      scaleX: scale[0],\n      scaleY: scale[1],\n      translateX: translation[0],\n      translateY: translation[1],\n    };\n  },\n};\n\nmodule.exports = MatrixMath;\n"]}