{"version":3,"sources":["index.cjs.js"],"names":["Object","defineProperty","exports","value","isWhat","require","assignProp","carry","key","newVal","originalObject","propType","propertyIsEnumerable","enumerable","writable","configurable","mergeRecursively","origin","newComer","extensions","isPlainObject","isArray","forEach","extend","newObject","props_1","getOwnPropertyNames","symbols_1","getOwnPropertySymbols","concat","reduce","targetVal","isSymbol","includes","props","symbols","result","undefined","merge","newComers","_i","arguments","length","base","keys","concatArrays","originVal","default"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar isWhat = require('is-what');\n\nfunction assignProp(carry, key, newVal, originalObject) {\r\n    var propType = originalObject.propertyIsEnumerable(key)\r\n        ? 'enumerable'\r\n        : 'nonenumerable';\r\n    if (propType === 'enumerable')\r\n        carry[key] = newVal;\r\n    if (propType === 'nonenumerable') {\r\n        Object.defineProperty(carry, key, {\r\n            value: newVal,\r\n            enumerable: false,\r\n            writable: true,\r\n            configurable: true\r\n        });\r\n    }\r\n}\r\nfunction mergeRecursively(origin, newComer, extensions) {\r\n    // work directly on newComer if its not an object\r\n    if (!isWhat.isPlainObject(newComer)) {\r\n        // extend merge rules\r\n        if (extensions && isWhat.isArray(extensions)) {\r\n            extensions.forEach(function (extend) {\r\n                newComer = extend(origin, newComer);\r\n            });\r\n        }\r\n        return newComer;\r\n    }\r\n    // define newObject to merge all values upon\r\n    var newObject = {};\r\n    if (isWhat.isPlainObject(origin)) {\r\n        var props_1 = Object.getOwnPropertyNames(origin);\r\n        var symbols_1 = Object.getOwnPropertySymbols(origin);\r\n        newObject = props_1.concat(symbols_1).reduce(function (carry, key) {\r\n            // @ts-ignore\r\n            var targetVal = origin[key];\r\n            if ((!isWhat.isSymbol(key) && !Object.getOwnPropertyNames(newComer).includes(key)) ||\r\n                (isWhat.isSymbol(key) && !Object.getOwnPropertySymbols(newComer).includes(key))) {\r\n                assignProp(carry, key, targetVal, origin);\r\n            }\r\n            return carry;\r\n        }, {});\r\n    }\r\n    var props = Object.getOwnPropertyNames(newComer);\r\n    var symbols = Object.getOwnPropertySymbols(newComer);\r\n    var result = props.concat(symbols).reduce(function (carry, key) {\r\n        // re-define the origin and newComer as targetVal and newVal\r\n        var newVal = newComer[key];\r\n        var targetVal = (isWhat.isPlainObject(origin))\r\n            // @ts-ignore\r\n            ? origin[key]\r\n            : undefined;\r\n        // extend merge rules\r\n        if (extensions && isWhat.isArray(extensions)) {\r\n            extensions.forEach(function (extend) {\r\n                newVal = extend(targetVal, newVal);\r\n            });\r\n        }\r\n        // When newVal is an object do the merge recursively\r\n        if (targetVal !== undefined && isWhat.isPlainObject(newVal)) {\r\n            newVal = mergeRecursively(targetVal, newVal, extensions);\r\n        }\r\n        assignProp(carry, key, newVal, newComer);\r\n        return carry;\r\n    }, newObject);\r\n    return result;\r\n}\r\n/**\r\n * Merge anything recursively.\r\n * Objects get merged, special objects (classes etc.) are re-assigned \"as is\".\r\n * Basic types overwrite objects or other basic types.\r\n *\r\n * @param {(IConfig | any)} origin\r\n * @param {...any[]} newComers\r\n * @returns the result\r\n */\r\nfunction merge(origin) {\r\n    var newComers = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        newComers[_i - 1] = arguments[_i];\r\n    }\r\n    var extensions = null;\r\n    var base = origin;\r\n    if (isWhat.isPlainObject(origin) && origin.extensions && Object.keys(origin).length === 1) {\r\n        base = {};\r\n        extensions = origin.extensions;\r\n    }\r\n    return newComers.reduce(function (result, newComer) {\r\n        return mergeRecursively(result, newComer, extensions);\r\n    }, base);\r\n}\n\nfunction concatArrays(originVal, newVal) {\r\n    if (isWhat.isArray(originVal) && isWhat.isArray(newVal)) {\r\n        // concat logic\r\n        return originVal.concat(newVal);\r\n    }\r\n    return newVal; // always return newVal as fallback!!\r\n}\n\nexports.merge = merge;\nexports.concatArrays = concatArrays;\nexports.default = merge;\n"]}