{"version":3,"sources":["YellowBoxInspectorHeader.js"],"names":["Image","require","Platform","React","SafeAreaView","StyleSheet","Text","View","YellowBoxImageSource","YellowBoxPressable","YellowBoxStyle","YellowBoxInspectorHeader","props","prevIndex","selectedIndex","nextIndex","titleText","warnings","length","styles","root","header","chevronLeft","onSelectIndex","headerTitle","headerTitleText","chevronRight","YellowBoxInspectorHeaderButton","default","pressed","getHighlightColor","disabled","onPress","headerButton","height","uri","image","width","headerButtonImage","create","backgroundColor","getBackgroundColor","flexDirection","select","android","ios","alignItems","aspectRatio","justifyContent","tintColor","getTextColor","flex","color","fontSize","fontWeight","includeFontPadding","lineHeight","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nconst Image = require('../../Image/Image');\nconst Platform = require('../../Utilities/Platform');\nconst React = require('react');\nconst SafeAreaView = require('../../Components/SafeAreaView/SafeAreaView');\nconst StyleSheet = require('../../StyleSheet/StyleSheet');\nconst Text = require('../../Text/Text');\nconst View = require('../../Components/View/View');\nconst YellowBoxImageSource = require('./YellowBoxImageSource');\nconst YellowBoxPressable = require('./YellowBoxPressable');\nconst YellowBoxStyle = require('./YellowBoxStyle');\n\nimport type YellowBoxWarning from '../Data/YellowBoxWarning';\n\ntype Props = $ReadOnly<{|\n  onSelectIndex: (selectedIndex: number) => void,\n  selectedIndex: number,\n  warnings: $ReadOnlyArray<YellowBoxWarning>,\n|}>;\n\nconst YellowBoxInspectorHeader = (props: Props): React.Node => {\n  const prevIndex = props.selectedIndex - 1;\n  const nextIndex = props.selectedIndex + 1;\n\n  const titleText =\n    props.warnings.length === 1\n      ? 'Single Occurrence'\n      : `Occurrence ${props.selectedIndex + 1} of ${props.warnings.length}`;\n\n  return (\n    <SafeAreaView style={styles.root}>\n      <View style={styles.header}>\n        <YellowBoxInspectorHeaderButton\n          disabled={props.warnings[prevIndex] == null}\n          image={YellowBoxImageSource.chevronLeft}\n          onPress={() => props.onSelectIndex(prevIndex)}\n        />\n        <View style={styles.headerTitle}>\n          <Text style={styles.headerTitleText}>{titleText}</Text>\n        </View>\n        <YellowBoxInspectorHeaderButton\n          disabled={props.warnings[nextIndex] == null}\n          image={YellowBoxImageSource.chevronRight}\n          onPress={() => props.onSelectIndex(nextIndex)}\n        />\n      </View>\n    </SafeAreaView>\n  );\n};\n\nconst YellowBoxInspectorHeaderButton = (\n  props: $ReadOnly<{|\n    disabled: boolean,\n    image: string,\n    onPress?: ?() => void,\n  |}>,\n): React.Node => (\n  <YellowBoxPressable\n    backgroundColor={{\n      default: 'transparent',\n      pressed: YellowBoxStyle.getHighlightColor(1),\n    }}\n    onPress={props.disabled ? null : props.onPress}\n    style={styles.headerButton}>\n    {props.disabled ? null : (\n      <Image\n        source={{height: 16, uri: props.image, width: 16}}\n        style={styles.headerButtonImage}\n      />\n    )}\n  </YellowBoxPressable>\n);\n\nconst styles = StyleSheet.create({\n  root: {\n    backgroundColor: YellowBoxStyle.getBackgroundColor(0.95),\n  },\n  header: {\n    flexDirection: 'row',\n    height: Platform.select({\n      android: 48,\n      ios: 44,\n    }),\n  },\n  headerButton: {\n    alignItems: 'center',\n    aspectRatio: 1,\n    justifyContent: 'center',\n  },\n  headerButtonImage: {\n    tintColor: YellowBoxStyle.getTextColor(1),\n  },\n  headerTitle: {\n    alignItems: 'center',\n    flex: 1,\n    justifyContent: 'center',\n  },\n  headerTitleText: {\n    color: YellowBoxStyle.getTextColor(1),\n    fontSize: 16,\n    fontWeight: '600',\n    includeFontPadding: false,\n    lineHeight: 20,\n  },\n});\n\nmodule.exports = YellowBoxInspectorHeader;\n"]}