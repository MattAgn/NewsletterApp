{"version":3,"sources":["index.cjs.js"],"names":["Object","defineProperty","exports","value","getType","payload","prototype","toString","call","slice","isUndefined","isNull","isPlainObject","constructor","getPrototypeOf","isObject","isAnyObject","isObjectLike","isFunction","isArray","isString","isFullString","isEmptyString","isNumber","isNaN","isBoolean","isRegExp","isDate","isSymbol","isPrimitive","isType","type","Function","TypeError","hasOwnProperty","name","Boolean"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\r\n * Returns the object type of the given payload\r\n *\r\n * @param {*} payload\r\n * @returns {string}\r\n */\r\nfunction getType(payload) {\r\n    return Object.prototype.toString.call(payload).slice(8, -1);\r\n}\r\n/**\r\n * Returns whether the payload is undefined\r\n *\r\n * @param {*} payload\r\n * @returns {payload is undefined}\r\n */\r\nfunction isUndefined(payload) {\r\n    return getType(payload) === 'Undefined';\r\n}\r\n/**\r\n * Returns whether the payload is null\r\n *\r\n * @param {*} payload\r\n * @returns {payload is null}\r\n */\r\nfunction isNull(payload) {\r\n    return getType(payload) === 'Null';\r\n}\r\n/**\r\n * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is {[key: string]: any}}\r\n */\r\nfunction isPlainObject(payload) {\r\n    if (getType(payload) !== 'Object')\r\n        return false;\r\n    return (payload.constructor === Object && Object.getPrototypeOf(payload) === Object.prototype);\r\n}\r\n/**\r\n * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is {[key: string]: any}}\r\n */\r\nfunction isObject(payload) {\r\n    return isPlainObject(payload);\r\n}\r\n/**\r\n * Returns whether the payload is an any kind of object (including special classes or objects with different prototypes)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is {[key: string]: any}}\r\n */\r\nfunction isAnyObject(payload) {\r\n    return getType(payload) === 'Object';\r\n}\r\n/**\r\n * Returns whether the payload is an object like a type passed in < >\r\n *\r\n * Usage: isObjectLike<{id: any}>(payload) // will make sure it's an object and has an `id` prop.\r\n *\r\n * @template T this must be passed in < >\r\n * @param {*} payload\r\n * @returns {payload is T}\r\n */\r\nfunction isObjectLike(payload) {\r\n    return isAnyObject(payload);\r\n}\r\n/**\r\n * Returns whether the payload is a function\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Function}\r\n */\r\nfunction isFunction(payload) {\r\n    return getType(payload) === 'Function';\r\n}\r\n/**\r\n * Returns whether the payload is an array\r\n *\r\n * @param {*} payload\r\n * @returns {payload is undefined}\r\n */\r\nfunction isArray(payload) {\r\n    return getType(payload) === 'Array';\r\n}\r\n/**\r\n * Returns whether the payload is a string\r\n *\r\n * @param {*} payload\r\n * @returns {payload is string}\r\n */\r\nfunction isString(payload) {\r\n    return getType(payload) === 'String';\r\n}\r\n/**\r\n * Returns whether the payload is a string, BUT returns false for ''\r\n *\r\n * @param {*} payload\r\n * @returns {payload is string}\r\n */\r\nfunction isFullString(payload) {\r\n    return isString(payload) && payload !== '';\r\n}\r\n/**\r\n * Returns whether the payload is ''\r\n *\r\n * @param {*} payload\r\n * @returns {payload is string}\r\n */\r\nfunction isEmptyString(payload) {\r\n    return payload === '';\r\n}\r\n/**\r\n * Returns whether the payload is a number\r\n *\r\n * This will return false for NaN\r\n *\r\n * @param {*} payload\r\n * @returns {payload is number}\r\n */\r\nfunction isNumber(payload) {\r\n    return (getType(payload) === 'Number' && !isNaN(payload));\r\n}\r\n/**\r\n * Returns whether the payload is a boolean\r\n *\r\n * @param {*} payload\r\n * @returns {payload is boolean}\r\n */\r\nfunction isBoolean(payload) {\r\n    return getType(payload) === 'Boolean';\r\n}\r\n/**\r\n * Returns whether the payload is a regular expression\r\n *\r\n * @param {*} payload\r\n * @returns {payload is RegExp}\r\n */\r\nfunction isRegExp(payload) {\r\n    return getType(payload) === 'RegExp';\r\n}\r\n/**\r\n * Returns whether the payload is a date, and that the date is Valid\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Date}\r\n */\r\nfunction isDate(payload) {\r\n    return (getType(payload) === 'Date' && !isNaN(payload));\r\n}\r\n/**\r\n * Returns whether the payload is a Symbol\r\n *\r\n * @param {*} payload\r\n * @returns {payload is symbol}\r\n */\r\nfunction isSymbol(payload) {\r\n    return (getType(payload) === 'Symbol');\r\n}\r\n/**\r\n * Returns whether the payload is a primitive type (eg. Boolean | Null | Undefined | Number | String | Symbol)\r\n *\r\n * @param {*} payload\r\n * @returns {(payload is boolean | null | undefined | number | string | symbol)}\r\n */\r\nfunction isPrimitive(payload) {\r\n    return (isBoolean(payload) ||\r\n        isNull(payload) ||\r\n        isUndefined(payload) ||\r\n        isNumber(payload) ||\r\n        isString(payload) ||\r\n        isSymbol(payload));\r\n}\r\n/**\r\n * Does a generic check to check that the given payload is of a given type.\r\n * In cases like Number, it will return true for NaN as NaN is a Number (thanks javascript!);\r\n * It will, however, differentiate between object and null\r\n *\r\n * @template T\r\n * @param {*} payload\r\n * @param {T} type\r\n * @throws {TypeError} Will throw type error if type is an invalid type\r\n * @returns {payload is T}\r\n */\r\nfunction isType(payload, type) {\r\n    if (!(type instanceof Function)) {\r\n        throw new TypeError('Type must be a function');\r\n    }\r\n    if (!type.hasOwnProperty('prototype')) {\r\n        throw new TypeError('Type is not a class');\r\n    }\r\n    // Classes usually have names (as functions usually have names)\r\n    var name = type.name;\r\n    return (getType(payload) === name) || Boolean(payload && (payload.constructor === type));\r\n}\n\nexports.getType = getType;\nexports.isUndefined = isUndefined;\nexports.isNull = isNull;\nexports.isPlainObject = isPlainObject;\nexports.isObject = isObject;\nexports.isAnyObject = isAnyObject;\nexports.isObjectLike = isObjectLike;\nexports.isFunction = isFunction;\nexports.isArray = isArray;\nexports.isString = isString;\nexports.isFullString = isFullString;\nexports.isEmptyString = isEmptyString;\nexports.isNumber = isNumber;\nexports.isBoolean = isBoolean;\nexports.isRegExp = isRegExp;\nexports.isDate = isDate;\nexports.isSymbol = isSymbol;\nexports.isPrimitive = isPrimitive;\nexports.isType = isType;\n"]}