{"version":3,"sources":["_baseIsNative.js"],"names":["isFunction","require","isMasked","isObject","toSource","reRegExpChar","reIsHostCtor","funcProto","Function","prototype","objectProto","Object","funcToString","toString","hasOwnProperty","reIsNative","RegExp","call","replace","baseIsNative","value","pattern","test","module","exports"],"mappings":"AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,cAAD,CAAxB;AAAA,IACIC,QAAQ,GAAGD,OAAO,CAAC,aAAD,CADtB;AAAA,IAEIE,QAAQ,GAAGF,OAAO,CAAC,YAAD,CAFtB;AAAA,IAGIG,QAAQ,GAAGH,OAAO,CAAC,aAAD,CAHtB;;AASA,IAAII,YAAY,GAAG,qBAAnB;AAGA,IAAIC,YAAY,GAAG,6BAAnB;AAGA,IAAIC,SAAS,GAAGC,QAAQ,CAACC,SAAzB;AAAA,IACIC,WAAW,GAAGC,MAAM,CAACF,SADzB;AAIA,IAAIG,YAAY,GAAGL,SAAS,CAACM,QAA7B;AAGA,IAAIC,cAAc,GAAGJ,WAAW,CAACI,cAAjC;AAGA,IAAIC,UAAU,GAAGC,MAAM,CAAC,MACtBJ,YAAY,CAACK,IAAb,CAAkBH,cAAlB,EAAkCI,OAAlC,CAA0Cb,YAA1C,EAAwD,MAAxD,EACCa,OADD,CACS,wDADT,EACmE,OADnE,CADsB,GAEwD,GAFzD,CAAvB;;AAaA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,MAAI,CAACjB,QAAQ,CAACiB,KAAD,CAAT,IAAoBlB,QAAQ,CAACkB,KAAD,CAAhC,EAAyC;AACvC,WAAO,KAAP;AACD;;AACD,MAAIC,OAAO,GAAGrB,UAAU,CAACoB,KAAD,CAAV,GAAoBL,UAApB,GAAiCT,YAA/C;AACA,SAAOe,OAAO,CAACC,IAAR,CAAalB,QAAQ,CAACgB,KAAD,CAArB,CAAP;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiBL,YAAjB","sourcesContent":["var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n"]}