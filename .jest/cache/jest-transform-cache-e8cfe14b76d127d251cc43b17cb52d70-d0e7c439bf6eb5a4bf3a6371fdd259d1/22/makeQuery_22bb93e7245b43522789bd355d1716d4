4f9286c27201c30e73822d5e23e1bf94
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _errors = require("./errors");

function isNodeValid(node) {
  return typeof node.type === 'string';
}

function makeAliases(aliases, query) {
  return aliases.map(function (alias) {
    return (0, _defineProperty2.default)({}, alias, query);
  }).reduce(function (acc, query) {
    return (0, _objectSpread2.default)({}, acc, query);
  }, {});
}

var makeQuery = function makeQuery(name, queryNames, matcherFn) {
  return function (instance) {
    var getBy = function getBy(matcher) {
      try {
        return instance.find(function (node) {
          return isNodeValid(node) && matcherFn(node.props[name], matcher);
        });
      } catch (error) {
        throw new _errors.ErrorWithStack((0, _errors.prepareErrorMessage)(error), getBy);
      }
    };

    var getAllBy = function getAllBy(matcher) {
      var results = instance.findAll(function (node) {
        return isNodeValid(node) && matcherFn(node.props[name], matcher);
      });

      if (results.length === 0) {
        throw new _errors.ErrorWithStack('No instances found', getAllBy);
      }

      return results;
    };

    var queryBy = function queryBy(matcher) {
      try {
        return getBy(matcher);
      } catch (error) {
        return (0, _errors.createQueryByError)(error, queryBy);
      }
    };

    var queryAllBy = function queryAllBy(matcher) {
      try {
        return getAllBy(matcher);
      } catch (error) {
        return [];
      }
    };

    return (0, _objectSpread2.default)({}, makeAliases(queryNames.getBy, getBy), makeAliases(queryNames.getAllBy, getAllBy), makeAliases(queryNames.queryBy, queryBy), makeAliases(queryNames.queryAllBy, queryAllBy));
  };
};

var _default = makeQuery;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1ha2VRdWVyeS5qcyJdLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsIl9vYmplY3RTcHJlYWQyIiwiX2RlZmluZVByb3BlcnR5MiIsIl9lcnJvcnMiLCJpc05vZGVWYWxpZCIsIm5vZGUiLCJ0eXBlIiwibWFrZUFsaWFzZXMiLCJhbGlhc2VzIiwicXVlcnkiLCJtYXAiLCJhbGlhcyIsInJlZHVjZSIsImFjYyIsIm1ha2VRdWVyeSIsIm5hbWUiLCJxdWVyeU5hbWVzIiwibWF0Y2hlckZuIiwiaW5zdGFuY2UiLCJnZXRCeSIsIm1hdGNoZXIiLCJmaW5kIiwicHJvcHMiLCJlcnJvciIsIkVycm9yV2l0aFN0YWNrIiwicHJlcGFyZUVycm9yTWVzc2FnZSIsImdldEFsbEJ5IiwicmVzdWx0cyIsImZpbmRBbGwiLCJsZW5ndGgiLCJxdWVyeUJ5IiwiY3JlYXRlUXVlcnlCeUVycm9yIiwicXVlcnlBbGxCeSIsIl9kZWZhdWx0Il0sIm1hcHBpbmdzIjoiQUFBQSxJQUFJQSxzQkFBc0IsR0FBQ0MsT0FBTyxDQUFDLDhDQUFELENBQWxDOztBQUFtRkMsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUE4QixZQUE5QixFQUEyQztBQUFDQyxFQUFBQSxLQUFLLEVBQUM7QUFBUCxDQUEzQztBQUF5REQsT0FBTyxDQUFDRSxPQUFSLEdBQWdCLEtBQUssQ0FBckI7O0FBQXVCLElBQUlDLGNBQWMsR0FBQ1Asc0JBQXNCLENBQUNDLE9BQU8sQ0FBQyxxQ0FBRCxDQUFSLENBQXpDOztBQUEwRixJQUFJTyxnQkFBZ0IsR0FBQ1Isc0JBQXNCLENBQUNDLE9BQU8sQ0FBQyx1Q0FBRCxDQUFSLENBQTNDOztBQUE4RixJQUFJUSxPQUFPLEdBQUNSLE9BQU8sQ0FBQyxVQUFELENBQW5COztBQUFnQyxTQUFTUyxXQUFULENBQXFCQyxJQUFyQixFQUEw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QSxRQUFyQixDQUE3RSxFQUE0R25CLFdBQVcsQ0FBQ1MsVUFBVSxDQUFDYyxPQUFaLEVBQW9CQSxPQUFwQixDQUF2SCxFQUFvSnZCLFdBQVcsQ0FBQ1MsVUFBVSxDQUFDZ0IsVUFBWixFQUF1QkEsVUFBdkIsQ0FBL0osQ0FBTjtBQUEwTSxHQUFyN0I7QUFBdTdCLENBQW4vQjs7QUFBby9CLElBQUlDLFFBQVEsR0FBQ25CLFNBQWI7QUFBdUJoQixPQUFPLENBQUNFLE9BQVIsR0FBZ0JpQyxRQUFoQiIsInNvdXJjZXNDb250ZW50IjpbInZhciBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0PXJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2ludGVyb3BSZXF1aXJlRGVmYXVsdFwiKTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cyxcIl9fZXNNb2R1bGVcIix7dmFsdWU6dHJ1ZX0pO2V4cG9ydHMuZGVmYXVsdD12b2lkIDA7dmFyIF9vYmplY3RTcHJlYWQyPV9pbnRlcm9wUmVxdWlyZURlZmF1bHQocmVxdWlyZShcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvb2JqZWN0U3ByZWFkXCIpKTt2YXIgX2RlZmluZVByb3BlcnR5Mj1faW50ZXJvcFJlcXVpcmVEZWZhdWx0KHJlcXVpcmUoXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2RlZmluZVByb3BlcnR5XCIpKTt2YXIgX2Vycm9ycz1yZXF1aXJlKFwiLi9lcnJvcnNcIik7ZnVuY3Rpb24gaXNOb2RlVmFsaWQobm9kZSl7cmV0dXJuIHR5cGVvZiBub2RlLnR5cGU9PT0nc3RyaW5nJzt9ZnVuY3Rpb24gbWFrZUFsaWFzZXMoYWxpYXNlcyxxdWVyeSl7cmV0dXJuIGFsaWFzZXMubWFwKGZ1bmN0aW9uKGFsaWFzKXtyZXR1cm4oMCxfZGVmaW5lUHJvcGVydHkyLmRlZmF1bHQpKHt9LGFsaWFzLHF1ZXJ5KTt9KS5yZWR1Y2UoZnVuY3Rpb24oYWNjLHF1ZXJ5KXtyZXR1cm4oMCxfb2JqZWN0U3ByZWFkMi5kZWZhdWx0KSh7fSxhY2MscXVlcnkpO30se30pO312YXIgbWFrZVF1ZXJ5PWZ1bmN0aW9uIG1ha2VRdWVyeShuYW1lLHF1ZXJ5TmFtZXMsbWF0Y2hlckZuKXtyZXR1cm4gZnVuY3Rpb24oaW5zdGFuY2Upe3ZhciBnZXRCeT1mdW5jdGlvbiBnZXRCeShtYXRjaGVyKXt0cnl7cmV0dXJuIGluc3RhbmNlLmZpbmQoZnVuY3Rpb24obm9kZSl7cmV0dXJuIGlzTm9kZVZhbGlkKG5vZGUpJiZtYXRjaGVyRm4obm9kZS5wcm9wc1tuYW1lXSxtYXRjaGVyKTt9KTt9Y2F0Y2goZXJyb3Ipe3Rocm93IG5ldyBfZXJyb3JzLkVycm9yV2l0aFN0YWNrKCgwLF9lcnJvcnMucHJlcGFyZUVycm9yTWVzc2FnZSkoZXJyb3IpLGdldEJ5KTt9fTt2YXIgZ2V0QWxsQnk9ZnVuY3Rpb24gZ2V0QWxsQnkobWF0Y2hlcil7dmFyIHJlc3VsdHM9aW5zdGFuY2UuZmluZEFsbChmdW5jdGlvbihub2RlKXtyZXR1cm4gaXNOb2RlVmFsaWQobm9kZSkmJm1hdGNoZXJGbihub2RlLnByb3BzW25hbWVdLG1hdGNoZXIpO30pO2lmKHJlc3VsdHMubGVuZ3RoPT09MCl7dGhyb3cgbmV3IF9lcnJvcnMuRXJyb3JXaXRoU3RhY2soJ05vIGluc3RhbmNlcyBmb3VuZCcsZ2V0QWxsQnkpO31yZXR1cm4gcmVzdWx0czt9O3ZhciBxdWVyeUJ5PWZ1bmN0aW9uIHF1ZXJ5QnkobWF0Y2hlcil7dHJ5e3JldHVybiBnZXRCeShtYXRjaGVyKTt9Y2F0Y2goZXJyb3Ipe3JldHVybigwLF9lcnJvcnMuY3JlYXRlUXVlcnlCeUVycm9yKShlcnJvcixxdWVyeUJ5KTt9fTt2YXIgcXVlcnlBbGxCeT1mdW5jdGlvbiBxdWVyeUFsbEJ5KG1hdGNoZXIpe3RyeXtyZXR1cm4gZ2V0QWxsQnkobWF0Y2hlcik7fWNhdGNoKGVycm9yKXtyZXR1cm5bXTt9fTtyZXR1cm4oMCxfb2JqZWN0U3ByZWFkMi5kZWZhdWx0KSh7fSxtYWtlQWxpYXNlcyhxdWVyeU5hbWVzLmdldEJ5LGdldEJ5KSxtYWtlQWxpYXNlcyhxdWVyeU5hbWVzLmdldEFsbEJ5LGdldEFsbEJ5KSxtYWtlQWxpYXNlcyhxdWVyeU5hbWVzLnF1ZXJ5QnkscXVlcnlCeSksbWFrZUFsaWFzZXMocXVlcnlOYW1lcy5xdWVyeUFsbEJ5LHF1ZXJ5QWxsQnkpKTt9O307dmFyIF9kZWZhdWx0PW1ha2VRdWVyeTtleHBvcnRzLmRlZmF1bHQ9X2RlZmF1bHQ7Il19