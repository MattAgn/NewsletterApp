95ff297567fc65e61d4d80072e5e341a
'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var createChangeEmitter = exports.createChangeEmitter = function createChangeEmitter() {
  var currentListeners = [];
  var nextListeners = currentListeners;

  function ensureCanMutateNextListeners() {
    if (nextListeners === currentListeners) {
      nextListeners = currentListeners.slice();
    }
  }

  function listen(listener) {
    if (typeof listener !== 'function') {
      throw new Error('Expected listener to be a function.');
    }

    var isSubscribed = true;
    ensureCanMutateNextListeners();
    nextListeners.push(listener);
    return function () {
      if (!isSubscribed) {
        return;
      }

      isSubscribed = false;
      ensureCanMutateNextListeners();
      var index = nextListeners.indexOf(listener);
      nextListeners.splice(index, 1);
    };
  }

  function emit() {
    currentListeners = nextListeners;
    var listeners = currentListeners;

    for (var i = 0; i < listeners.length; i++) {
      listeners[i].apply(listeners, arguments);
    }
  }

  return {
    listen: listen,
    emit: emit
  };
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiY3JlYXRlQ2hhbmdlRW1pdHRlciIsImN1cnJlbnRMaXN0ZW5lcnMiLCJuZXh0TGlzdGVuZXJzIiwiZW5zdXJlQ2FuTXV0YXRlTmV4dExpc3RlbmVycyIsInNsaWNlIiwibGlzdGVuIiwibGlzdGVuZXIiLCJFcnJvciIsImlzU3Vic2NyaWJlZCIsInB1c2giLCJpbmRleCIsImluZGV4T2YiLCJzcGxpY2UiLCJlbWl0IiwibGlzdGVuZXJzIiwiaSIsImxlbmd0aCIsImFwcGx5IiwiYXJndW1lbnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQUEsTUFBTSxDQUFDQyxjQUFQLENBQXNCQyxPQUF0QixFQUErQixZQUEvQixFQUE2QztBQUMzQ0MsRUFBQUEsS0FBSyxFQUFFO0FBRG9DLENBQTdDOztBQUdBLElBQUlDLG1CQUFtQixHQUFHRixPQUFPLENBQUNFLG1CQUFSLEdBQThCLFNBQVNBLG1CQUFULEdBQStCO0FBQ3JGLE1BQUlDLGdCQUFnQixHQUFHLEVBQXZCO0FBQ0EsTUFBSUMsYUFBYSxHQUFHRCxnQkFBcEI7O0FBRUEsV0FBU0UsNEJBQVQsR0FBd0M7QUFDdEMsUUFBSUQsYUFBYSxLQUFLRCxnQkFBdEIsRUFBd0M7QUFDdENDLE1BQUFBLGFBQWEsR0FBR0QsZ0JBQWdCLENBQUNHLEtBQWpCLEVBQWhCO0FBQ0Q7QUFDRjs7QUFFRCxXQUFTQyxNQUFULENBQWdCQyxRQUFoQixFQUEwQjtBQUN4QixRQUFJLE9BQU9BLFFBQVAsS0FBb0IsVUFBeEIsRUFBb0M7QUFDbEMsWUFBTSxJQUFJQyxLQUFKLENBQVUscUNBQVYsQ0FBTjtBQUNEOztBQUVELFFBQUlDLFlBQVksR0FBRyxJQUFuQjtBQUVBTCxJQUFBQSw0QkFBNEI7QUFDNUJELElBQUFBLGFBQWEsQ0FBQ08sSUFBZCxDQUFtQkgsUUFBbkI7QUFFQSxXQUFPLFlBQVk7QUFDakIsVUFBSSxDQUFDRSxZQUFMLEVBQW1CO0FBQ2pCO0FBQ0Q7O0FBRURBLE1BQUFBLFlBQVksR0FBRyxLQUFmO0FBRUFMLE1BQUFBLDRCQUE0QjtBQUM1QixVQUFJTyxLQUFLLEdBQUdSLGFBQWEsQ0FBQ1MsT0FBZCxDQUFzQkwsUUFBdEIsQ0FBWjtBQUNBSixNQUFBQSxhQUFhLENBQUNVLE1BQWQsQ0FBcUJGLEtBQXJCLEVBQTRCLENBQTVCO0FBQ0QsS0FWRDtBQVdEOztBQUVELFdBQVNHLElBQVQsR0FBZ0I7QUFDZFosSUFBQUEsZ0JBQWdCLEdBQUdDLGFBQW5CO0FBQ0EsUUFBSVksU0FBUyxHQUFHYixnQkFBaEI7O0FBQ0EsU0FBSyxJQUFJYyxDQUFDLEdBQUcsQ0FBYixFQUFnQkEsQ0FBQyxHQUFHRCxTQUFTLENBQUNFLE1BQTlCLEVBQXNDRCxDQUFDLEVBQXZDLEVBQTJDO0FBQ3pDRCxNQUFBQSxTQUFTLENBQUNDLENBQUQsQ0FBVCxDQUFhRSxLQUFiLENBQW1CSCxTQUFuQixFQUE4QkksU0FBOUI7QUFDRDtBQUNGOztBQUVELFNBQU87QUFDTGIsSUFBQUEsTUFBTSxFQUFFQSxNQURIO0FBRUxRLElBQUFBLElBQUksRUFBRUE7QUFGRCxHQUFQO0FBSUQsQ0E3Q0QiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICB2YWx1ZTogdHJ1ZVxufSk7XG52YXIgY3JlYXRlQ2hhbmdlRW1pdHRlciA9IGV4cG9ydHMuY3JlYXRlQ2hhbmdlRW1pdHRlciA9IGZ1bmN0aW9uIGNyZWF0ZUNoYW5nZUVtaXR0ZXIoKSB7XG4gIHZhciBjdXJyZW50TGlzdGVuZXJzID0gW107XG4gIHZhciBuZXh0TGlzdGVuZXJzID0gY3VycmVudExpc3RlbmVycztcblxuICBmdW5jdGlvbiBlbnN1cmVDYW5NdXRhdGVOZXh0TGlzdGVuZXJzKCkge1xuICAgIGlmIChuZXh0TGlzdGVuZXJzID09PSBjdXJyZW50TGlzdGVuZXJzKSB7XG4gICAgICBuZXh0TGlzdGVuZXJzID0gY3VycmVudExpc3RlbmVycy5zbGljZSgpO1xuICAgIH1cbiAgfVxuXG4gIGZ1bmN0aW9uIGxpc3RlbihsaXN0ZW5lcikge1xuICAgIGlmICh0eXBlb2YgbGlzdGVuZXIgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgbGlzdGVuZXIgdG8gYmUgYSBmdW5jdGlvbi4nKTtcbiAgICB9XG5cbiAgICB2YXIgaXNTdWJzY3JpYmVkID0gdHJ1ZTtcblxuICAgIGVuc3VyZUNhbk11dGF0ZU5leHRMaXN0ZW5lcnMoKTtcbiAgICBuZXh0TGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcbiAgICAgIGlmICghaXNTdWJzY3JpYmVkKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgaXNTdWJzY3JpYmVkID0gZmFsc2U7XG5cbiAgICAgIGVuc3VyZUNhbk11dGF0ZU5leHRMaXN0ZW5lcnMoKTtcbiAgICAgIHZhciBpbmRleCA9IG5leHRMaXN0ZW5lcnMuaW5kZXhPZihsaXN0ZW5lcik7XG4gICAgICBuZXh0TGlzdGVuZXJzLnNwbGljZShpbmRleCwgMSk7XG4gICAgfTtcbiAgfVxuXG4gIGZ1bmN0aW9uIGVtaXQoKSB7XG4gICAgY3VycmVudExpc3RlbmVycyA9IG5leHRMaXN0ZW5lcnM7XG4gICAgdmFyIGxpc3RlbmVycyA9IGN1cnJlbnRMaXN0ZW5lcnM7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0ZW5lcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGxpc3RlbmVyc1tpXS5hcHBseShsaXN0ZW5lcnMsIGFyZ3VtZW50cyk7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHtcbiAgICBsaXN0ZW46IGxpc3RlbixcbiAgICBlbWl0OiBlbWl0XG4gIH07XG59OyJdfQ==