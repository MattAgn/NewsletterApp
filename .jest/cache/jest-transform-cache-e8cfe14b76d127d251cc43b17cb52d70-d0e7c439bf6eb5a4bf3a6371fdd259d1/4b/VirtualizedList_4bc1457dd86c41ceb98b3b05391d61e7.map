{"version":3,"sources":["VirtualizedList.js"],"names":["Batchinator","require","FillRateHelper","PropTypes","React","ReactNative","RefreshControl","ScrollView","StyleSheet","UIManager","View","ViewabilityHelper","flattenStyle","infoLog","invariant","warning","computeWindowedRenderLimits","_usedIndexForKey","_keylessItemComponentName","VirtualizedList","params","animated","veryLast","props","getItemCount","data","frame","_getFrameMetricsApprox","offset","Math","max","length","_footerLength","_scrollMetrics","visibleLength","_scrollRef","scrollTo","horizontal","x","y","getItemLayout","onScrollToIndexFailed","index","viewOffset","viewPosition","_highestMeasuredFrameIndex","averageItemLength","_averageCellLength","highestMeasuredFrameIndex","item","getItem","itemCount","scrollToIndex","_nestedChildLists","forEach","childList","ref","recordInteraction","_viewabilityTuples","t","viewabilityHelper","_updateViewableItems","flashScrollIndicators","getScrollResponder","getScrollableNode","findNodeHandle","getScrollRef","setNativeProps","virtualizedList","getScrollMetrics","_getScrollMetrics","getOutermostParentListRef","_getOutermostParentListRef","getNestedChildState","_getNestedChildState","registerAsNestedChild","_registerAsNestedChild","unregisterAsNestedChild","_unregisterAsNestedChild","context","virtualizedCell","cellKey","_hasMore","_isNestedWithSameOrientation","key","existingChildData","get","state","childListsInCell","_cellKeysToChildListKeys","Set","add","set","console","error","_hasInteracted","_onUpdateSeparators","keys","newProps","_cellRefs","updateSeparatorProps","Map","_frames","_hasDataChangedSinceEndReached","_hasDoneInitialScroll","_hasWarned","_headerLength","_hiPriInProgress","_indicesToKeys","_offsetFromParentVirtualizedList","_prevParentOffset","contentLength","dOffset","dt","timestamp","velocity","_sentEndForContentLength","_totalCellLength","_totalCellsMeasured","_captureScrollRef","_defaultRenderScrollComponent","onRefresh","refreshing","JSON","stringify","refreshControl","progressViewOffset","_onCellUnmount","curr","inLayout","_onLayout","e","measureLayoutRelativeToContainingList","_selectLength","nativeEvent","layout","onLayout","_scheduleCellsToRenderUpdate","_maybeCallOnEndReached","_onLayoutEmpty","_onLayoutFooter","_onLayoutHeader","_onContentSizeChange","width","height","initialScrollIndex","onContentSizeChange","_convertParentScrollMetrics","metrics","_onScroll","onScroll","timeStamp","layoutMeasurement","contentSize","_selectOffset","contentOffset","perf","prevDt","_fillRateHelper","activate","_computeBlankness","_onScrollBeginDrag","tuple","onScrollBeginDrag","_onScrollEndDrag","onScrollEndDrag","_onMomentumScrollEnd","onMomentumScrollEnd","_updateCellsToRender","onEndReachedThreshold","isVirtualizationDisabled","_isVirtualizationDisabled","setState","newState","distanceFromEnd","renderAhead","maxToRenderPerBatch","first","last","min","size","newFirst","newLast","ii","cellKeyForIndex","childListKeys","someChildHasMore","childKey","hasMore","_createViewToken","isViewable","keyExtractor","_getFrameMetrics","__DEV__","frameType","shape","number","isRequired","checkPropTypes","__isNative","windowSize","_updateCellsToRenderBatcher","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","map","pair","viewabilityConfig","onViewableItemsChanged","push","initialState","initialNumToRender","storedState","listKey","_getCellKey","frames","dispose","abort","deactivateAndFlush","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","CellRendererComponent","ItemSeparatorComponent","stickyOffset","ListHeaderComponent","end","prevCellKey","has","undefined","_onCellLayout","disableVirtualization","nestedContext","flatStyles","contentContainerStyle","flexWrap","ListEmptyComponent","ListFooterComponent","inverted","styles","horizontallyInverted","verticallyInverted","element","isValidElement","compose","ListHeaderComponentStyle","spacerKey","lastInitialIndex","_pushCells","firstAfterInitial","insertedStickySpacer","initBlock","stickyBlock","leadSpace","trailSpace","firstSpace","warn","lastFrame","endFrame","tailSpacerLength","cloneElement","event","style","ListFooterComponentStyle","scrollProps","scrollEventThrottle","invertStickyHeaders","ret","renderScrollComponent","debug","_renderDebugOverlay","prevProps","extraData","resetViewableIndices","hiPriInProgress","computeBlankness","next","measureLayout","getNativeScrollRef","scrollMetrics","stack","normalize","framesInLayout","windowTop","frameLast","windowLen","visTop","visLen","debugOverlayBase","debugOverlay","f","debugOverlayFrame","top","debugOverlayFrameLast","debugOverlayFrameVis","onEndReached","hiPri","scrollingThreshold","distTop","distBottom","schedule","onUpdate","prevState","PureComponent","defaultProps","id","type","displayName","String","contextTypes","string","func","bool","childContextTypes","CellRenderer","separatorProps","highlighted","leadingItem","_separators","highlight","onUpdateSeparators","unhighlight","updateProps","select","onUnmount","fillRateHelper","parentProps","renderItem","separators","enabled","itemSeparator","cellStyle","flexDirection","Component","VirtualizedCellWrapper","children","create","transform","scaleY","scaleX","flex","position","right","bottom","borderColor","borderWidth","left","backgroundColor","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nconst Batchinator = require('../Interaction/Batchinator');\nconst FillRateHelper = require('./FillRateHelper');\nconst PropTypes = require('prop-types');\nconst React = require('react');\nconst ReactNative = require('../Renderer/shims/ReactNative');\nconst RefreshControl = require('../Components/RefreshControl/RefreshControl');\nconst ScrollView = require('../Components/ScrollView/ScrollView');\nconst StyleSheet = require('../StyleSheet/StyleSheet');\nconst UIManager = require('../ReactNative/UIManager');\nconst View = require('../Components/View/View');\nconst ViewabilityHelper = require('./ViewabilityHelper');\n\nconst flattenStyle = require('../StyleSheet/flattenStyle');\nconst infoLog = require('../Utilities/infoLog');\nconst invariant = require('invariant');\nconst warning = require('fbjs/lib/warning');\n\nconst {computeWindowedRenderLimits} = require('./VirtualizeUtils');\n\nimport type {ViewStyleProp} from '../StyleSheet/StyleSheet';\nimport type {\n  ViewabilityConfig,\n  ViewToken,\n  ViewabilityConfigCallbackPair,\n} from './ViewabilityHelper';\n\ntype Item = any;\n\nexport type renderItemType = (info: any) => ?React.Element<any>;\n\ntype ViewabilityHelperCallbackTuple = {\n  viewabilityHelper: ViewabilityHelper,\n  onViewableItemsChanged: (info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n  }) => void,\n};\n\ntype RequiredProps = {\n  // TODO: Conflicts with the optional `renderItem` in\n  // `VirtualizedSectionList`'s props.\n  renderItem: $FlowFixMe<renderItemType>,\n  /**\n   * The default accessor functions assume this is an Array<{key: string} | {id: string}> but you can override\n   * getItem, getItemCount, and keyExtractor to handle any type of index-based data.\n   */\n  data?: any,\n  /**\n   * A generic accessor for extracting an item from any sort of data blob.\n   */\n  getItem: (data: any, index: number) => ?Item,\n  /**\n   * Determines how many items are in the data blob.\n   */\n  getItemCount: (data: any) => number,\n};\ntype OptionalProps = {\n  /**\n   * `debug` will turn on extra logging and visual overlays to aid with debugging both usage and\n   * implementation, but with a significant perf hit.\n   */\n  debug?: ?boolean,\n  /**\n   * DEPRECATED: Virtualization provides significant performance and memory optimizations, but fully\n   * unmounts react instances that are outside of the render window. You should only need to disable\n   * this for debugging purposes.\n   */\n  disableVirtualization?: ?boolean,\n  /**\n   * A marker property for telling the list to re-render (since it implements `PureComponent`). If\n   * any of your `renderItem`, Header, Footer, etc. functions depend on anything outside of the\n   * `data` prop, stick it here and treat it immutably.\n   */\n  extraData?: any,\n  getItemLayout?: (\n    data: any,\n    index: number,\n  ) => {length: number, offset: number, index: number}, // e.g. height, y\n  horizontal?: ?boolean,\n  /**\n   * How many items to render in the initial batch. This should be enough to fill the screen but not\n   * much more. Note these items will never be unmounted as part of the windowed rendering in order\n   * to improve perceived performance of scroll-to-top actions.\n   */\n  initialNumToRender: number,\n  /**\n   * Instead of starting at the top with the first item, start at `initialScrollIndex`. This\n   * disables the \"scroll to top\" optimization that keeps the first `initialNumToRender` items\n   * always rendered and immediately renders the items starting at this initial index. Requires\n   * `getItemLayout` to be implemented.\n   */\n  initialScrollIndex?: ?number,\n  /**\n   * Reverses the direction of scroll. Uses scale transforms of -1.\n   */\n  inverted?: ?boolean,\n  keyExtractor: (item: Item, index: number) => string,\n  /**\n   * Each cell is rendered using this element. Can be a React Component Class,\n   * or a render function. Defaults to using View.\n   */\n  CellRendererComponent?: ?React.ComponentType<any>,\n  /**\n   * Rendered when the list is empty. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListEmptyComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Rendered at the bottom of all the items. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListFooterComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Styling for internal View for ListFooterComponent\n   */\n  ListFooterComponentStyle?: ViewStyleProp,\n  /**\n   * Rendered at the top of all the items. Can be a React Component Class, a render function, or\n   * a rendered element.\n   */\n  ListHeaderComponent?: ?(React.ComponentType<any> | React.Element<any>),\n  /**\n   * Styling for internal View for ListHeaderComponent\n   */\n  ListHeaderComponentStyle?: ViewStyleProp,\n  /**\n   * A unique identifier for this list. If there are multiple VirtualizedLists at the same level of\n   * nesting within another VirtualizedList, this key is necessary for virtualization to\n   * work properly.\n   */\n  listKey?: string,\n  /**\n   * The maximum number of items to render in each incremental render batch. The more rendered at\n   * once, the better the fill rate, but responsiveness my suffer because rendering content may\n   * interfere with responding to button taps or other interactions.\n   */\n  maxToRenderPerBatch: number,\n  onEndReached?: ?(info: {distanceFromEnd: number}) => void,\n  onEndReachedThreshold?: ?number, // units of visible length\n  onLayout?: ?Function,\n  /**\n   * If provided, a standard RefreshControl will be added for \"Pull to Refresh\" functionality. Make\n   * sure to also set the `refreshing` prop correctly.\n   */\n  onRefresh?: ?Function,\n  /**\n   * Used to handle failures when scrolling to an index that has not been measured yet. Recommended\n   * action is to either compute your own offset and `scrollTo` it, or scroll as far as possible and\n   * then try again after more items have been rendered.\n   */\n  onScrollToIndexFailed?: ?(info: {\n    index: number,\n    highestMeasuredFrameIndex: number,\n    averageItemLength: number,\n  }) => void,\n  /**\n   * Called when the viewability of rows changes, as defined by the\n   * `viewabilityConfig` prop.\n   */\n  onViewableItemsChanged?: ?(info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n  }) => void,\n  persistentScrollbar?: ?boolean,\n  /**\n   * Set this when offset is needed for the loading indicator to show correctly.\n   * @platform android\n   */\n  progressViewOffset?: number,\n  /**\n   * A custom refresh control element. When set, it overrides the default\n   * <RefreshControl> component built internally. The onRefresh and refreshing\n   * props are also ignored. Only works for vertical VirtualizedList.\n   */\n  refreshControl?: ?React.Element<any>,\n  /**\n   * Set this true while waiting for new data from a refresh.\n   */\n  refreshing?: ?boolean,\n  /**\n   * Note: may have bugs (missing content) in some circumstances - use at your own risk.\n   *\n   * This may improve scroll performance for large lists.\n   */\n  removeClippedSubviews?: boolean,\n  /**\n   * Render a custom scroll component, e.g. with a differently styled `RefreshControl`.\n   */\n  renderScrollComponent?: (props: Object) => React.Element<any>,\n  /**\n   * Amount of time between low-pri item render batches, e.g. for rendering items quite a ways off\n   * screen. Similar fill rate/responsiveness tradeoff as `maxToRenderPerBatch`.\n   */\n  updateCellsBatchingPeriod: number,\n  viewabilityConfig?: ViewabilityConfig,\n  /**\n   * List of ViewabilityConfig/onViewableItemsChanged pairs. A specific onViewableItemsChanged\n   * will be called when its corresponding ViewabilityConfig's conditions are met.\n   */\n  viewabilityConfigCallbackPairs?: Array<ViewabilityConfigCallbackPair>,\n  /**\n   * Determines the maximum number of items rendered outside of the visible area, in units of\n   * visible lengths. So if your list fills the screen, then `windowSize={21}` (the default) will\n   * render the visible screen area plus up to 10 screens above and 10 below the viewport. Reducing\n   * this number will reduce memory consumption and may improve performance, but will increase the\n   * chance that fast scrolling may reveal momentary blank areas of unrendered content.\n   */\n  windowSize: number,\n};\n/* $FlowFixMe - this Props seems to be missing a bunch of stuff. Remove this\n * comment to see the errors */\nexport type Props = RequiredProps & OptionalProps;\n\nlet _usedIndexForKey = false;\nlet _keylessItemComponentName: string = '';\n\ntype Frame = {\n  offset: number,\n  length: number,\n  index: number,\n  inLayout: boolean,\n};\n\ntype ChildListState = {\n  first: number,\n  last: number,\n  frames: {[key: number]: Frame},\n};\n\ntype State = {first: number, last: number};\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](/react-native/docs/flatlist.html)\n * and [`<SectionList>`](/react-native/docs/sectionlist.html) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n *\n */\nclass VirtualizedList extends React.PureComponent<Props, State> {\n  props: Props;\n\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params?: ?{animated?: ?boolean}) {\n    const animated = params ? params.animated : true;\n    const veryLast = this.props.getItemCount(this.props.data) - 1;\n    const frame = this._getFrameMetricsApprox(veryLast);\n    const offset = Math.max(\n      0,\n      frame.offset +\n        frame.length +\n        this._footerLength -\n        this._scrollMetrics.visibleLength,\n    );\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._scrollRef.scrollTo(\n      this.props.horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  // scrollToIndex may be janky without getItemLayout prop\n  scrollToIndex(params: {\n    animated?: ?boolean,\n    index: number,\n    viewOffset?: number,\n    viewPosition?: number,\n  }) {\n    const {\n      data,\n      horizontal,\n      getItemCount,\n      getItemLayout,\n      onScrollToIndexFailed,\n    } = this.props;\n    const {animated, index, viewOffset, viewPosition} = params;\n    invariant(\n      index >= 0 && index < getItemCount(data),\n      `scrollToIndex out of range: ${index} vs ${getItemCount(data) - 1}`,\n    );\n    if (!getItemLayout && index > this._highestMeasuredFrameIndex) {\n      invariant(\n        !!onScrollToIndexFailed,\n        'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' +\n          'otherwise there is no way to know the location of offscreen indices or handle failures.',\n      );\n      onScrollToIndexFailed({\n        averageItemLength: this._averageCellLength,\n        highestMeasuredFrameIndex: this._highestMeasuredFrameIndex,\n        index,\n      });\n      return;\n    }\n    const frame = this._getFrameMetricsApprox(index);\n    const offset =\n      Math.max(\n        0,\n        frame.offset -\n          (viewPosition || 0) *\n            (this._scrollMetrics.visibleLength - frame.length),\n      ) - (viewOffset || 0);\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._scrollRef.scrollTo(\n      horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  scrollToItem(params: {\n    animated?: ?boolean,\n    item: Item,\n    viewPosition?: number,\n  }) {\n    const {item} = params;\n    const {data, getItem, getItemCount} = this.props;\n    const itemCount = getItemCount(data);\n    for (let index = 0; index < itemCount; index++) {\n      if (getItem(data, index) === item) {\n        this.scrollToIndex({...params, index});\n        break;\n      }\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  scrollToOffset(params: {animated?: ?boolean, offset: number}) {\n    const {animated, offset} = params;\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._scrollRef.scrollTo(\n      this.props.horizontal ? {x: offset, animated} : {y: offset, animated},\n    );\n  }\n\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref.recordInteraction();\n    });\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n    this._updateViewableItems(this.props.data);\n  }\n\n  flashScrollIndicators() {\n    /* $FlowFixMe(>=0.53.0 site=react_native_fb,react_native_oss) This comment\n     * suppresses an error when upgrading Flow's support for React. To see the\n     * error delete this comment and run Flow. */\n    this._scrollRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  getScrollResponder() {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n\n  getScrollableNode() {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return ReactNative.findNodeHandle(this._scrollRef);\n    }\n  }\n\n  getScrollRef() {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  }\n\n  setNativeProps(props: Object) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  }\n\n  static defaultProps = {\n    disableVirtualization: false,\n    horizontal: false,\n    initialNumToRender: 10,\n    keyExtractor: (item: Item, index: number) => {\n      if (item.key != null) {\n        return item.key;\n      }\n      if (item.id != null) {\n        return item.id;\n      }\n      _usedIndexForKey = true;\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n      return String(index);\n    },\n    maxToRenderPerBatch: 10,\n    onEndReachedThreshold: 2, // multiples of length\n    scrollEventThrottle: 50,\n    updateCellsBatchingPeriod: 50,\n    windowSize: 21, // multiples of length\n  };\n\n  static contextTypes = {\n    virtualizedCell: PropTypes.shape({\n      cellKey: PropTypes.string,\n    }),\n    virtualizedList: PropTypes.shape({\n      getScrollMetrics: PropTypes.func,\n      horizontal: PropTypes.bool,\n      getOutermostParentListRef: PropTypes.func,\n      getNestedChildState: PropTypes.func,\n      registerAsNestedChild: PropTypes.func,\n      unregisterAsNestedChild: PropTypes.func,\n    }),\n  };\n\n  static childContextTypes = {\n    virtualizedList: PropTypes.shape({\n      getScrollMetrics: PropTypes.func,\n      horizontal: PropTypes.bool,\n      getOutermostParentListRef: PropTypes.func,\n      getNestedChildState: PropTypes.func,\n      registerAsNestedChild: PropTypes.func,\n      unregisterAsNestedChild: PropTypes.func,\n    }),\n  };\n\n  getChildContext() {\n    return {\n      virtualizedList: {\n        getScrollMetrics: this._getScrollMetrics,\n        horizontal: this.props.horizontal,\n        getOutermostParentListRef: this._getOutermostParentListRef,\n        getNestedChildState: this._getNestedChildState,\n        registerAsNestedChild: this._registerAsNestedChild,\n        unregisterAsNestedChild: this._unregisterAsNestedChild,\n      },\n    };\n  }\n\n  _getCellKey(): string {\n    return (\n      (this.context.virtualizedCell && this.context.virtualizedCell.cellKey) ||\n      'rootList'\n    );\n  }\n\n  _getScrollMetrics = () => {\n    return this._scrollMetrics;\n  };\n\n  hasMore(): boolean {\n    return this._hasMore;\n  }\n\n  _getOutermostParentListRef = () => {\n    if (this._isNestedWithSameOrientation()) {\n      return this.context.virtualizedList.getOutermostParentListRef();\n    } else {\n      return this;\n    }\n  };\n\n  _getNestedChildState = (key: string): ?ChildListState => {\n    const existingChildData = this._nestedChildLists.get(key);\n    return existingChildData && existingChildData.state;\n  };\n\n  _registerAsNestedChild = (childList: {\n    cellKey: string,\n    key: string,\n    ref: VirtualizedList,\n  }): ?ChildListState => {\n    // Register the mapping between this child key and the cellKey for its cell\n    const childListsInCell =\n      this._cellKeysToChildListKeys.get(childList.cellKey) || new Set();\n    childListsInCell.add(childList.key);\n    this._cellKeysToChildListKeys.set(childList.cellKey, childListsInCell);\n\n    const existingChildData = this._nestedChildLists.get(childList.key);\n    if (existingChildData && existingChildData.ref !== null) {\n      console.error(\n        'A VirtualizedList contains a cell which itself contains ' +\n          'more than one VirtualizedList of the same orientation as the parent ' +\n          'list. You must pass a unique listKey prop to each sibling list.',\n      );\n    }\n    this._nestedChildLists.set(childList.key, {\n      ref: childList.ref,\n      state: null,\n    });\n\n    if (this._hasInteracted) {\n      childList.ref.recordInteraction();\n    }\n  };\n\n  _unregisterAsNestedChild = (childList: {\n    key: string,\n    state: ChildListState,\n  }): void => {\n    this._nestedChildLists.set(childList.key, {\n      ref: null,\n      state: childList.state,\n    });\n  };\n\n  state: State;\n\n  constructor(props: Props, context: Object) {\n    super(props, context);\n    invariant(\n      !props.onScroll || !props.onScroll.__isNative,\n      'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' +\n        'to support native onScroll events with useNativeDriver',\n    );\n\n    invariant(\n      props.windowSize > 0,\n      'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.',\n    );\n\n    this._fillRateHelper = new FillRateHelper(this._getFrameMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(\n      this._updateCellsToRender,\n      this.props.updateCellsBatchingPeriod,\n    );\n\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(\n        pair => ({\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged,\n        }),\n      );\n    } else if (this.props.onViewableItemsChanged) {\n      this._viewabilityTuples.push({\n        viewabilityHelper: new ViewabilityHelper(this.props.viewabilityConfig),\n        onViewableItemsChanged: this.props.onViewableItemsChanged,\n      });\n    }\n\n    let initialState = {\n      first: this.props.initialScrollIndex || 0,\n      last:\n        Math.min(\n          this.props.getItemCount(this.props.data),\n          (this.props.initialScrollIndex || 0) + this.props.initialNumToRender,\n        ) - 1,\n    };\n\n    if (this._isNestedWithSameOrientation()) {\n      const storedState = this.context.virtualizedList.getNestedChildState(\n        this.props.listKey || this._getCellKey(),\n      );\n      if (storedState) {\n        initialState = storedState;\n        this.state = storedState;\n        this._frames = storedState.frames;\n      }\n    }\n\n    this.state = initialState;\n  }\n\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.virtualizedList.registerAsNestedChild({\n        cellKey: this._getCellKey(),\n        key: this.props.listKey || this._getCellKey(),\n        ref: this,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.virtualizedList.unregisterAsNestedChild({\n        key: this.props.listKey || this._getCellKey(),\n        state: {\n          first: this.state.first,\n          last: this.state.last,\n          frames: this._frames,\n        },\n      });\n    }\n    this._updateViewableItems(null);\n    this._updateCellsToRenderBatcher.dispose({abort: true});\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n    this._fillRateHelper.deactivateAndFlush();\n  }\n\n  static getDerivedStateFromProps(newProps: Props, prevState: State) {\n    const {data, getItemCount, maxToRenderPerBatch} = newProps;\n    // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n    return {\n      first: Math.max(\n        0,\n        Math.min(prevState.first, getItemCount(data) - 1 - maxToRenderPerBatch),\n      ),\n      last: Math.max(0, Math.min(prevState.last, getItemCount(data) - 1)),\n    };\n  }\n\n  _pushCells(\n    cells: Array<Object>,\n    stickyHeaderIndices: Array<number>,\n    stickyIndicesFromProps: Set<number>,\n    first: number,\n    last: number,\n    inversionStyle: ViewStyleProp,\n  ) {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      data,\n      getItem,\n      getItemCount,\n      horizontal,\n      keyExtractor,\n    } = this.props;\n    const stickyOffset = this.props.ListHeaderComponent ? 1 : 0;\n    const end = getItemCount(data) - 1;\n    let prevCellKey;\n    last = Math.min(end, last);\n    for (let ii = first; ii <= last; ii++) {\n      const item = getItem(data, ii);\n      const key = keyExtractor(item, ii);\n      this._indicesToKeys.set(ii, key);\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n      cells.push(\n        <CellRenderer\n          CellRendererComponent={CellRendererComponent}\n          ItemSeparatorComponent={ii < end ? ItemSeparatorComponent : undefined}\n          cellKey={key}\n          fillRateHelper={this._fillRateHelper}\n          horizontal={horizontal}\n          index={ii}\n          inversionStyle={inversionStyle}\n          item={item}\n          key={key}\n          prevCellKey={prevCellKey}\n          onUpdateSeparators={this._onUpdateSeparators}\n          onLayout={e => this._onCellLayout(e, key, ii)}\n          onUnmount={this._onCellUnmount}\n          parentProps={this.props}\n          ref={ref => {\n            this._cellRefs[key] = ref;\n          }}\n        />,\n      );\n      prevCellKey = key;\n    }\n  }\n\n  _onUpdateSeparators = (keys: Array<?string>, newProps: Object) => {\n    keys.forEach(key => {\n      const ref = key != null && this._cellRefs[key];\n      ref && ref.updateSeparatorProps(newProps);\n    });\n  };\n\n  _isVirtualizationDisabled(): boolean {\n    return this.props.disableVirtualization || false;\n  }\n\n  _isNestedWithSameOrientation(): boolean {\n    const nestedContext = this.context.virtualizedList;\n    return !!(\n      nestedContext && !!nestedContext.horizontal === !!this.props.horizontal\n    );\n  }\n\n  render() {\n    if (__DEV__) {\n      const flatStyles = flattenStyle(this.props.contentContainerStyle);\n      warning(\n        flatStyles == null || flatStyles.flexWrap !== 'wrap',\n        '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' +\n          'Consider using `numColumns` with `FlatList` instead.',\n      );\n    }\n    const {\n      ListEmptyComponent,\n      ListFooterComponent,\n      ListHeaderComponent,\n    } = this.props;\n    const {data, horizontal} = this.props;\n    const isVirtualizationDisabled = this._isVirtualizationDisabled();\n    const inversionStyle = this.props.inverted\n      ? this.props.horizontal\n        ? styles.horizontallyInverted\n        : styles.verticallyInverted\n      : null;\n    const cells = [];\n    const stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    const stickyHeaderIndices = [];\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n      const element = React.isValidElement(ListHeaderComponent) ? (\n        ListHeaderComponent\n      ) : (\n        // $FlowFixMe\n        <ListHeaderComponent />\n      );\n      cells.push(\n        <VirtualizedCellWrapper\n          cellKey={this._getCellKey() + '-header'}\n          key=\"$header\">\n          <View\n            onLayout={this._onLayoutHeader}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListHeaderComponentStyle,\n            )}>\n            {\n              // $FlowFixMe - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedCellWrapper>,\n      );\n    }\n    const itemCount = this.props.getItemCount(data);\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n      const spacerKey = !horizontal ? 'height' : 'width';\n      const lastInitialIndex = this.props.initialScrollIndex\n        ? -1\n        : this.props.initialNumToRender - 1;\n      const {first, last} = this.state;\n      this._pushCells(\n        cells,\n        stickyHeaderIndices,\n        stickyIndicesFromProps,\n        0,\n        lastInitialIndex,\n        inversionStyle,\n      );\n      const firstAfterInitial = Math.max(lastInitialIndex + 1, first);\n      if (!isVirtualizationDisabled && first > lastInitialIndex + 1) {\n        let insertedStickySpacer = false;\n        if (stickyIndicesFromProps.size > 0) {\n          const stickyOffset = ListHeaderComponent ? 1 : 0;\n          // See if there are any sticky headers in the virtualized space that we need to render.\n          for (let ii = firstAfterInitial - 1; ii > lastInitialIndex; ii--) {\n            if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n              const initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n              const stickyBlock = this._getFrameMetricsApprox(ii);\n              const leadSpace =\n                stickyBlock.offset -\n                initBlock.offset -\n                (this.props.initialScrollIndex ? 0 : initBlock.length);\n              cells.push(\n                <View key=\"$sticky_lead\" style={{[spacerKey]: leadSpace}} />,\n              );\n              this._pushCells(\n                cells,\n                stickyHeaderIndices,\n                stickyIndicesFromProps,\n                ii,\n                ii,\n                inversionStyle,\n              );\n              const trailSpace =\n                this._getFrameMetricsApprox(first).offset -\n                (stickyBlock.offset + stickyBlock.length);\n              cells.push(\n                <View key=\"$sticky_trail\" style={{[spacerKey]: trailSpace}} />,\n              );\n              insertedStickySpacer = true;\n              break;\n            }\n          }\n        }\n        if (!insertedStickySpacer) {\n          const initBlock = this._getFrameMetricsApprox(lastInitialIndex);\n          const firstSpace =\n            this._getFrameMetricsApprox(first).offset -\n            (initBlock.offset + initBlock.length);\n          cells.push(\n            <View key=\"$lead_spacer\" style={{[spacerKey]: firstSpace}} />,\n          );\n        }\n      }\n      this._pushCells(\n        cells,\n        stickyHeaderIndices,\n        stickyIndicesFromProps,\n        firstAfterInitial,\n        last,\n        inversionStyle,\n      );\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn(\n          'VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' +\n            'item or provide a custom keyExtractor.',\n          _keylessItemComponentName,\n        );\n        this._hasWarned.keys = true;\n      }\n      if (!isVirtualizationDisabled && last < itemCount - 1) {\n        const lastFrame = this._getFrameMetricsApprox(last);\n        // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n        // prevent the user for hyperscrolling into un-measured area because otherwise content will\n        // likely jump around as it renders in above the viewport.\n        const end = this.props.getItemLayout\n          ? itemCount - 1\n          : Math.min(itemCount - 1, this._highestMeasuredFrameIndex);\n        const endFrame = this._getFrameMetricsApprox(end);\n        const tailSpacerLength =\n          endFrame.offset +\n          endFrame.length -\n          (lastFrame.offset + lastFrame.length);\n        cells.push(\n          <View key=\"$tail_spacer\" style={{[spacerKey]: tailSpacerLength}} />,\n        );\n      }\n    } else if (ListEmptyComponent) {\n      const element: React.Element<any> = ((React.isValidElement(\n        ListEmptyComponent,\n      ) ? (\n        ListEmptyComponent\n      ) : (\n        // $FlowFixMe\n        <ListEmptyComponent />\n      )): any);\n      cells.push(\n        React.cloneElement(element, {\n          key: '$empty',\n          onLayout: event => {\n            this._onLayoutEmpty(event);\n            if (element.props.onLayout) {\n              element.props.onLayout(event);\n            }\n          },\n          style: StyleSheet.compose(\n            inversionStyle,\n            element.props.style,\n          ),\n        }),\n      );\n    }\n    if (ListFooterComponent) {\n      const element = React.isValidElement(ListFooterComponent) ? (\n        ListFooterComponent\n      ) : (\n        // $FlowFixMe\n        <ListFooterComponent />\n      );\n      cells.push(\n        <VirtualizedCellWrapper\n          cellKey={this._getCellKey() + '-footer'}\n          key=\"$footer\">\n          <View\n            onLayout={this._onLayoutFooter}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListFooterComponentStyle,\n            )}>\n            {\n              // $FlowFixMe - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedCellWrapper>,\n      );\n    }\n    const scrollProps = {\n      ...this.props,\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      scrollEventThrottle: this.props.scrollEventThrottle, // TODO: Android support\n      invertStickyHeaders:\n        this.props.invertStickyHeaders !== undefined\n          ? this.props.invertStickyHeaders\n          : this.props.inverted,\n      stickyHeaderIndices,\n    };\n    if (inversionStyle) {\n      /* $FlowFixMe(>=0.70.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.70 was deployed. To see the error delete\n       * this comment and run Flow. */\n      scrollProps.style = [inversionStyle, this.props.style];\n    }\n\n    this._hasMore =\n      this.state.last < this.props.getItemCount(this.props.data) - 1;\n\n    const ret = React.cloneElement(\n      (this.props.renderScrollComponent || this._defaultRenderScrollComponent)(\n        scrollProps,\n      ),\n      {\n        ref: this._captureScrollRef,\n      },\n      cells,\n    );\n    if (this.props.debug) {\n      return (\n        <View style={styles.debug}>\n          {ret}\n          {this._renderDebugOverlay()}\n        </View>\n      );\n    } else {\n      return ret;\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {data, extraData} = this.props;\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      this._hasDataChangedSinceEndReached = true;\n\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n    // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n    const hiPriInProgress = this._hiPriInProgress;\n    this._scheduleCellsToRenderUpdate();\n    // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  }\n\n  _averageCellLength = 0;\n  // Maps a cell key to the set of keys for all outermost child lists within that cell\n  _cellKeysToChildListKeys: Map<string, Set<string>> = new Map();\n  _cellRefs = {};\n  _fillRateHelper: FillRateHelper;\n  _frames = {};\n  _footerLength = 0;\n  _hasDataChangedSinceEndReached = true;\n  _hasDoneInitialScroll = false;\n  _hasInteracted = false;\n  _hasMore = false;\n  _hasWarned = {};\n  _headerLength = 0;\n  _hiPriInProgress: boolean = false; // flag to prevent infinite hiPri cell limit update\n  _highestMeasuredFrameIndex = 0;\n  _indicesToKeys: Map<number, string> = new Map();\n  _nestedChildLists: Map<\n    string,\n    {ref: ?VirtualizedList, state: ?ChildListState},\n  > = new Map();\n  _offsetFromParentVirtualizedList: number = 0;\n  _prevParentOffset: number = 0;\n  _scrollMetrics = {\n    contentLength: 0,\n    dOffset: 0,\n    dt: 10,\n    offset: 0,\n    timestamp: 0,\n    velocity: 0,\n    visibleLength: 0,\n  };\n  _scrollRef: ?React.ElementRef<any> = null;\n  _sentEndForContentLength = 0;\n  _totalCellLength = 0;\n  _totalCellsMeasured = 0;\n  _updateCellsToRenderBatcher: Batchinator;\n  _viewabilityTuples: Array<ViewabilityHelperCallbackTuple> = [];\n\n  _captureScrollRef = ref => {\n    this._scrollRef = ref;\n  };\n\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(\n      this.props,\n      this.state,\n      this._scrollMetrics,\n    );\n  }\n\n  _defaultRenderScrollComponent = props => {\n    const onRefresh = props.onRefresh;\n    if (this._isNestedWithSameOrientation()) {\n      // $FlowFixMe - Typing ReactNativeComponent revealed errors\n      return <View {...props} />;\n    } else if (onRefresh) {\n      invariant(\n        typeof props.refreshing === 'boolean',\n        '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' +\n          JSON.stringify(props.refreshing) +\n          '`',\n      );\n      return (\n        // $FlowFixMe Invalid prop usage\n        <ScrollView\n          {...props}\n          refreshControl={\n            props.refreshControl == null ? (\n              <RefreshControl\n                refreshing={props.refreshing}\n                onRefresh={onRefresh}\n                progressViewOffset={props.progressViewOffset}\n              />\n            ) : (\n              props.refreshControl\n            )\n          }\n        />\n      );\n    } else {\n      // $FlowFixMe Invalid prop usage\n      return <ScrollView {...props} />;\n    }\n  };\n\n  _onCellLayout(e, cellKey, index) {\n    const layout = e.nativeEvent.layout;\n    const next = {\n      offset: this._selectOffset(layout),\n      length: this._selectLength(layout),\n      index,\n      inLayout: true,\n    };\n    const curr = this._frames[cellKey];\n    if (\n      !curr ||\n      next.offset !== curr.offset ||\n      next.length !== curr.length ||\n      index !== curr.index\n    ) {\n      this._totalCellLength += next.length - (curr ? curr.length : 0);\n      this._totalCellsMeasured += curr ? 0 : 1;\n      this._averageCellLength =\n        this._totalCellLength / this._totalCellsMeasured;\n      this._frames[cellKey] = next;\n      this._highestMeasuredFrameIndex = Math.max(\n        this._highestMeasuredFrameIndex,\n        index,\n      );\n      this._scheduleCellsToRenderUpdate();\n    } else {\n      this._frames[cellKey].inLayout = true;\n    }\n\n    const childListKeys = this._cellKeysToChildListKeys.get(cellKey);\n    if (childListKeys) {\n      for (let childKey of childListKeys) {\n        const childList = this._nestedChildLists.get(childKey);\n        childList &&\n          childList.ref &&\n          childList.ref.measureLayoutRelativeToContainingList();\n      }\n    }\n\n    this._computeBlankness();\n    this._updateViewableItems(this.props.data);\n  }\n\n  _onCellUnmount = (cellKey: string) => {\n    const curr = this._frames[cellKey];\n    if (curr) {\n      this._frames[cellKey] = {...curr, inLayout: false};\n    }\n  };\n\n  measureLayoutRelativeToContainingList(): void {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      }\n      // We are asuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n      this._scrollRef.measureLayout(\n        this.context.virtualizedList\n          .getOutermostParentListRef()\n          .getScrollRef()\n          .getNativeScrollRef(),\n        (x, y, width, height) => {\n          this._offsetFromParentVirtualizedList = this._selectOffset({x, y});\n          this._scrollMetrics.contentLength = this._selectLength({\n            width,\n            height,\n          });\n          const scrollMetrics = this._convertParentScrollMetrics(\n            this.context.virtualizedList.getScrollMetrics(),\n          );\n          this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n          this._scrollMetrics.offset = scrollMetrics.offset;\n        },\n        error => {\n          console.warn(\n            \"VirtualizedList: Encountered an error while measuring a list's\" +\n              ' offset from its containing VirtualizedList.',\n          );\n        },\n      );\n    } catch (error) {\n      console.warn(\n        'measureLayoutRelativeToContainingList threw an error',\n        error.stack,\n      );\n    }\n  }\n\n  _onLayout = (e: Object) => {\n    if (this._isNestedWithSameOrientation()) {\n      // Need to adjust our scroll metrics to be relative to our containing\n      // VirtualizedList before we can make claims about list item viewability\n      this.measureLayoutRelativeToContainingList();\n    } else {\n      this._scrollMetrics.visibleLength = this._selectLength(\n        e.nativeEvent.layout,\n      );\n    }\n    this.props.onLayout && this.props.onLayout(e);\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  _onLayoutEmpty = e => {\n    this.props.onLayout && this.props.onLayout(e);\n  };\n\n  _onLayoutFooter = e => {\n    this._footerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _onLayoutHeader = e => {\n    this._headerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _renderDebugOverlay() {\n    const normalize =\n      this._scrollMetrics.visibleLength /\n      (this._scrollMetrics.contentLength || 1);\n    const framesInLayout = [];\n    const itemCount = this.props.getItemCount(this.props.data);\n    for (let ii = 0; ii < itemCount; ii++) {\n      const frame = this._getFrameMetricsApprox(ii);\n      /* $FlowFixMe(>=0.68.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.68 was deployed. To see the error delete this\n       * comment and run Flow. */\n      if (frame.inLayout) {\n        framesInLayout.push(frame);\n      }\n    }\n    const windowTop = this._getFrameMetricsApprox(this.state.first).offset;\n    const frameLast = this._getFrameMetricsApprox(this.state.last);\n    const windowLen = frameLast.offset + frameLast.length - windowTop;\n    const visTop = this._scrollMetrics.offset;\n    const visLen = this._scrollMetrics.visibleLength;\n\n    return (\n      <View style={[styles.debugOverlayBase, styles.debugOverlay]}>\n        {framesInLayout.map((f, ii) => (\n          <View\n            key={'f' + ii}\n            style={[\n              styles.debugOverlayBase,\n              styles.debugOverlayFrame,\n              {\n                top: f.offset * normalize,\n                height: f.length * normalize,\n              },\n            ]}\n          />\n        ))}\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameLast,\n            {\n              top: windowTop * normalize,\n              height: windowLen * normalize,\n            },\n          ]}\n        />\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameVis,\n            {\n              top: visTop * normalize,\n              height: visLen * normalize,\n            },\n          ]}\n        />\n      </View>\n    );\n  }\n\n  _selectLength(metrics: $ReadOnly<{height: number, width: number}>): number {\n    return !this.props.horizontal ? metrics.height : metrics.width;\n  }\n\n  _selectOffset(metrics: $ReadOnly<{x: number, y: number}>): number {\n    return !this.props.horizontal ? metrics.y : metrics.x;\n  }\n\n  _maybeCallOnEndReached() {\n    const {\n      data,\n      getItemCount,\n      onEndReached,\n      onEndReachedThreshold,\n    } = this.props;\n    const {contentLength, visibleLength, offset} = this._scrollMetrics;\n    const distanceFromEnd = contentLength - visibleLength - offset;\n    if (\n      onEndReached &&\n      this.state.last === getItemCount(data) - 1 &&\n      /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.63 was deployed. To see the error delete this\n       * comment and run Flow. */\n      distanceFromEnd < onEndReachedThreshold * visibleLength &&\n      (this._hasDataChangedSinceEndReached ||\n        this._scrollMetrics.contentLength !== this._sentEndForContentLength)\n    ) {\n      // Only call onEndReached once for a given dataset + content length.\n      this._hasDataChangedSinceEndReached = false;\n      this._sentEndForContentLength = this._scrollMetrics.contentLength;\n      onEndReached({distanceFromEnd});\n    }\n  }\n\n  _onContentSizeChange = (width: number, height: number) => {\n    if (\n      width > 0 &&\n      height > 0 &&\n      this.props.initialScrollIndex != null &&\n      this.props.initialScrollIndex > 0 &&\n      !this._hasDoneInitialScroll\n    ) {\n      this.scrollToIndex({\n        animated: false,\n        index: this.props.initialScrollIndex,\n      });\n      this._hasDoneInitialScroll = true;\n    }\n    if (this.props.onContentSizeChange) {\n      this.props.onContentSizeChange(width, height);\n    }\n    this._scrollMetrics.contentLength = this._selectLength({height, width});\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEndReached();\n  };\n\n  /* Translates metrics from a scroll event in a parent VirtualizedList into\n   * coordinates relative to the child list.\n   */\n  _convertParentScrollMetrics = (metrics: {\n    visibleLength: number,\n    offset: number,\n  }) => {\n    // Offset of the top of the nested list relative to the top of its parent's viewport\n    const offset = metrics.offset - this._offsetFromParentVirtualizedList;\n    // Child's visible length is the same as its parent's\n    const visibleLength = metrics.visibleLength;\n    const dOffset = offset - this._scrollMetrics.offset;\n    const contentLength = this._scrollMetrics.contentLength;\n\n    return {\n      visibleLength,\n      contentLength,\n      offset,\n      dOffset,\n    };\n  };\n\n  _onScroll = (e: Object) => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScroll(e);\n    });\n    if (this.props.onScroll) {\n      this.props.onScroll(e);\n    }\n    const timestamp = e.timeStamp;\n    let visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n    let contentLength = this._selectLength(e.nativeEvent.contentSize);\n    let offset = this._selectOffset(e.nativeEvent.contentOffset);\n    let dOffset = offset - this._scrollMetrics.offset;\n\n    if (this._isNestedWithSameOrientation()) {\n      if (this._scrollMetrics.contentLength === 0) {\n        // Ignore scroll events until onLayout has been called and we\n        // know our offset from our offset from our parent\n        return;\n      }\n      ({\n        visibleLength,\n        contentLength,\n        offset,\n        dOffset,\n      } = this._convertParentScrollMetrics({\n        visibleLength,\n        offset,\n      }));\n    }\n\n    const dt = this._scrollMetrics.timestamp\n      ? Math.max(1, timestamp - this._scrollMetrics.timestamp)\n      : 1;\n    const velocity = dOffset / dt;\n\n    if (\n      dt > 500 &&\n      this._scrollMetrics.dt > 500 &&\n      contentLength > 5 * visibleLength &&\n      !this._hasWarned.perf\n    ) {\n      infoLog(\n        'VirtualizedList: You have a large list that is slow to update - make sure your ' +\n          'renderItem function renders components that follow React performance best practices ' +\n          'like PureComponent, shouldComponentUpdate, etc.',\n        {dt, prevDt: this._scrollMetrics.dt, contentLength},\n      );\n      this._hasWarned.perf = true;\n    }\n    this._scrollMetrics = {\n      contentLength,\n      dt,\n      dOffset,\n      offset,\n      timestamp,\n      velocity,\n      visibleLength,\n    };\n    this._updateViewableItems(this.props.data);\n    if (!this.props) {\n      return;\n    }\n    this._maybeCallOnEndReached();\n    if (velocity !== 0) {\n      this._fillRateHelper.activate();\n    }\n    this._computeBlankness();\n    this._scheduleCellsToRenderUpdate();\n  };\n\n  _scheduleCellsToRenderUpdate() {\n    const {first, last} = this.state;\n    const {offset, visibleLength, velocity} = this._scrollMetrics;\n    const itemCount = this.props.getItemCount(this.props.data);\n    let hiPri = false;\n    const scrollingThreshold =\n      /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.63 was deployed. To see the error delete\n       * this comment and run Flow. */\n      (this.props.onEndReachedThreshold * visibleLength) / 2;\n    // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n    if (first > 0) {\n      const distTop = offset - this._getFrameMetricsApprox(first).offset;\n      hiPri =\n        hiPri || distTop < 0 || (velocity < -2 && distTop < scrollingThreshold);\n    }\n    // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n    if (last < itemCount - 1) {\n      const distBottom =\n        this._getFrameMetricsApprox(last).offset - (offset + visibleLength);\n      hiPri =\n        hiPri ||\n        distBottom < 0 ||\n        (velocity > 2 && distBottom < scrollingThreshold);\n    }\n    // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n    if (\n      hiPri &&\n      (this._averageCellLength || this.props.getItemLayout) &&\n      !this._hiPriInProgress\n    ) {\n      this._hiPriInProgress = true;\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n      this._updateCellsToRenderBatcher.dispose({abort: true});\n      this._updateCellsToRender();\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n\n  _onScrollBeginDrag = (e): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList.ref && childList.ref._onScrollBeginDrag(e);\n    });\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.recordInteraction();\n    });\n    this._hasInteracted = true;\n    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n  };\n\n  _onScrollEndDrag = (e): void => {\n    const {velocity} = e.nativeEvent;\n    if (velocity) {\n      this._scrollMetrics.velocity = this._selectOffset(velocity);\n    }\n    this._computeBlankness();\n    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n  };\n\n  _onMomentumScrollEnd = (e): void => {\n    this._scrollMetrics.velocity = 0;\n    this._computeBlankness();\n    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n  };\n\n  _updateCellsToRender = () => {\n    const {data, getItemCount, onEndReachedThreshold} = this.props;\n    const isVirtualizationDisabled = this._isVirtualizationDisabled();\n    this._updateViewableItems(data);\n    if (!data) {\n      return;\n    }\n    this.setState(state => {\n      let newState;\n      if (!isVirtualizationDisabled) {\n        // If we run this with bogus data, we'll force-render window {first: 0, last: 0},\n        // and wipe out the initialNumToRender rendered elements.\n        // So let's wait until the scroll view metrics have been set up. And until then,\n        // we will trust the initialNumToRender suggestion\n        if (this._scrollMetrics.visibleLength) {\n          // If we have a non-zero initialScrollIndex and run this before we've scrolled,\n          // we'll wipe out the initialNumToRender rendered elements starting at initialScrollIndex.\n          // So let's wait until we've scrolled the view to the right place. And until then,\n          // we will trust the initialScrollIndex suggestion.\n          if (!this.props.initialScrollIndex || this._scrollMetrics.offset) {\n            newState = computeWindowedRenderLimits(\n              this.props,\n              state,\n              this._getFrameMetricsApprox,\n              this._scrollMetrics,\n            );\n          }\n        }\n      } else {\n        const {contentLength, offset, visibleLength} = this._scrollMetrics;\n        const distanceFromEnd = contentLength - visibleLength - offset;\n        const renderAhead =\n          /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses\n           * an error found when Flow v0.63 was deployed. To see the error\n           * delete this comment and run Flow. */\n          distanceFromEnd < onEndReachedThreshold * visibleLength\n            ? this.props.maxToRenderPerBatch\n            : 0;\n        newState = {\n          first: 0,\n          last: Math.min(state.last + renderAhead, getItemCount(data) - 1),\n        };\n      }\n      if (newState && this._nestedChildLists.size > 0) {\n        const newFirst = newState.first;\n        const newLast = newState.last;\n        // If some cell in the new state has a child list in it, we should only render\n        // up through that item, so that we give that list a chance to render.\n        // Otherwise there's churn from multiple child lists mounting and un-mounting\n        // their items.\n        for (let ii = newFirst; ii <= newLast; ii++) {\n          const cellKeyForIndex = this._indicesToKeys.get(ii);\n          const childListKeys =\n            cellKeyForIndex &&\n            this._cellKeysToChildListKeys.get(cellKeyForIndex);\n          if (!childListKeys) {\n            continue;\n          }\n          let someChildHasMore = false;\n          // For each cell, need to check whether any child list in it has more elements to render\n          for (let childKey of childListKeys) {\n            const childList = this._nestedChildLists.get(childKey);\n            if (childList && childList.ref && childList.ref.hasMore()) {\n              someChildHasMore = true;\n              break;\n            }\n          }\n          if (someChildHasMore) {\n            newState.last = ii;\n            break;\n          }\n        }\n      }\n      return newState;\n    });\n  };\n\n  _createViewToken = (index: number, isViewable: boolean) => {\n    const {data, getItem, keyExtractor} = this.props;\n    const item = getItem(data, index);\n    return {index, item, key: keyExtractor(item, index), isViewable};\n  };\n\n  _getFrameMetricsApprox = (\n    index: number,\n  ): {length: number, offset: number} => {\n    const frame = this._getFrameMetrics(index);\n    if (frame && frame.index === index) {\n      // check for invalid frames due to row re-ordering\n      return frame;\n    } else {\n      const {getItemLayout} = this.props;\n      invariant(\n        !getItemLayout,\n        'Should not have to estimate frames when a measurement metrics function is provided',\n      );\n      return {\n        length: this._averageCellLength,\n        offset: this._averageCellLength * index,\n      };\n    }\n  };\n\n  _getFrameMetrics = (\n    index: number,\n  ): ?{\n    length: number,\n    offset: number,\n    index: number,\n    inLayout?: boolean,\n  } => {\n    const {\n      data,\n      getItem,\n      getItemCount,\n      getItemLayout,\n      keyExtractor,\n    } = this.props;\n    invariant(\n      getItemCount(data) > index,\n      'Tried to get frame for out of range index ' + index,\n    );\n    const item = getItem(data, index);\n    let frame = item && this._frames[keyExtractor(item, index)];\n    if (!frame || frame.index !== index) {\n      if (getItemLayout) {\n        frame = getItemLayout(data, index);\n        if (__DEV__) {\n          const frameType = PropTypes.shape({\n            length: PropTypes.number.isRequired,\n            offset: PropTypes.number.isRequired,\n            index: PropTypes.number.isRequired,\n          }).isRequired;\n          PropTypes.checkPropTypes(\n            {frame: frameType},\n            {frame},\n            'frame',\n            'VirtualizedList.getItemLayout',\n          );\n        }\n      }\n    }\n    /* $FlowFixMe(>=0.63.0 site=react_native_fb) This comment suppresses an\n     * error found when Flow v0.63 was deployed. To see the error delete this\n     * comment and run Flow. */\n    return frame;\n  };\n\n  _updateViewableItems(data: any) {\n    const {getItemCount} = this.props;\n\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(\n        getItemCount(data),\n        this._scrollMetrics.offset,\n        this._scrollMetrics.visibleLength,\n        this._getFrameMetrics,\n        this._createViewToken,\n        tuple.onViewableItemsChanged,\n        this.state,\n      );\n    });\n  }\n}\n\nclass CellRenderer extends React.Component<\n  {\n    CellRendererComponent?: ?React.ComponentType<any>,\n    ItemSeparatorComponent: ?React.ComponentType<*>,\n    cellKey: string,\n    fillRateHelper: FillRateHelper,\n    horizontal: ?boolean,\n    index: number,\n    inversionStyle: ViewStyleProp,\n    item: Item,\n    onLayout: (event: Object) => void, // This is extracted by ScrollViewStickyHeader\n    onUnmount: (cellKey: string) => void,\n    onUpdateSeparators: (cellKeys: Array<?string>, props: Object) => void,\n    parentProps: {\n      getItemLayout?: ?Function,\n      renderItem: renderItemType,\n    },\n    prevCellKey: ?string,\n  },\n  $FlowFixMeState,\n> {\n  state = {\n    separatorProps: {\n      highlighted: false,\n      leadingItem: this.props.item,\n    },\n  };\n\n  static childContextTypes = {\n    virtualizedCell: PropTypes.shape({\n      cellKey: PropTypes.string,\n    }),\n  };\n\n  getChildContext() {\n    return {\n      virtualizedCell: {\n        cellKey: this.props.cellKey,\n      },\n    };\n  }\n\n  // TODO: consider factoring separator stuff out of VirtualizedList into FlatList since it's not\n  // reused by SectionList and we can keep VirtualizedList simpler.\n  _separators = {\n    highlight: () => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators([cellKey, prevCellKey], {\n        highlighted: true,\n      });\n    },\n    unhighlight: () => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators([cellKey, prevCellKey], {\n        highlighted: false,\n      });\n    },\n    updateProps: (select: 'leading' | 'trailing', newProps: Object) => {\n      const {cellKey, prevCellKey} = this.props;\n      this.props.onUpdateSeparators(\n        [select === 'leading' ? prevCellKey : cellKey],\n        newProps,\n      );\n    },\n  };\n\n  updateSeparatorProps(newProps: Object) {\n    this.setState(state => ({\n      separatorProps: {...state.separatorProps, ...newProps},\n    }));\n  }\n\n  componentWillUnmount() {\n    this.props.onUnmount(this.props.cellKey);\n  }\n\n  render() {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      fillRateHelper,\n      horizontal,\n      item,\n      index,\n      inversionStyle,\n      parentProps,\n    } = this.props;\n    const {renderItem, getItemLayout} = parentProps;\n    invariant(renderItem, 'no renderItem!');\n    const element = renderItem({\n      item,\n      index,\n      separators: this._separators,\n    });\n    const onLayout =\n      /* $FlowFixMe(>=0.68.0 site=react_native_fb) This comment suppresses an\n       * error found when Flow v0.68 was deployed. To see the error delete this\n       * comment and run Flow. */\n      getItemLayout && !parentProps.debug && !fillRateHelper.enabled()\n        ? undefined\n        : this.props.onLayout;\n    // NOTE: that when this is a sticky header, `onLayout` will get automatically extracted and\n    // called explicitly by `ScrollViewStickyHeader`.\n    const itemSeparator = ItemSeparatorComponent && (\n      <ItemSeparatorComponent {...this.state.separatorProps} />\n    );\n    const cellStyle = inversionStyle\n      ? horizontal\n        ? [{flexDirection: 'row-reverse'}, inversionStyle]\n        : [{flexDirection: 'column-reverse'}, inversionStyle]\n      : horizontal\n      ? [{flexDirection: 'row'}, inversionStyle]\n      : inversionStyle;\n    if (!CellRendererComponent) {\n      return (\n        /* $FlowFixMe(>=0.89.0 site=react_native_fb) This comment suppresses an\n         * error found when Flow v0.89 was deployed. To see the error, delete\n         * this comment and run Flow. */\n        <View style={cellStyle} onLayout={onLayout}>\n          {element}\n          {itemSeparator}\n        </View>\n      );\n    }\n    return (\n      <CellRendererComponent\n        {...this.props}\n        style={cellStyle}\n        onLayout={onLayout}>\n        {element}\n        {itemSeparator}\n      </CellRendererComponent>\n    );\n  }\n}\n\nclass VirtualizedCellWrapper extends React.Component<{\n  cellKey: string,\n  children: React.Node,\n}> {\n  static childContextTypes = {\n    virtualizedCell: PropTypes.shape({\n      cellKey: PropTypes.string,\n    }),\n  };\n\n  getChildContext() {\n    return {\n      virtualizedCell: {\n        cellKey: this.props.cellKey,\n      },\n    };\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nconst styles = StyleSheet.create({\n  verticallyInverted: {\n    transform: [{scaleY: -1}],\n  },\n  horizontallyInverted: {\n    transform: [{scaleX: -1}],\n  },\n  debug: {\n    flex: 1,\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1,\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange',\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2,\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2,\n  },\n});\n\nmodule.exports = VirtualizedList;\n"]}