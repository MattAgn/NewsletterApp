{"version":3,"sources":["YellowBoxPressable.js"],"names":["React","require","StyleSheet","TouchableWithoutFeedback","View","YellowBoxStyle","YellowBoxPressable","state","pressed","_handlePressIn","setState","_handlePressOut","content","compose","backgroundColor","props","default","style","children","onPress","hitSlop","Component","defaultProps","getBackgroundColor","getHighlightColor","module","exports"],"mappings":"AAUA;;;;;;;;;;;;;;AAEA,IAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,IAAMC,UAAU,GAAGD,OAAO,CAAC,6BAAD,CAA1B;;AACA,IAAME,wBAAwB,GAAGF,OAAO,CAAC,qDAAD,CAAxC;;AACA,IAAMG,IAAI,GAAGH,OAAO,CAAC,4BAAD,CAApB;;AACA,IAAMI,cAAc,GAAGJ,OAAO,CAAC,kBAAD,CAA9B;;IAqBMK,kB;;;;;;;;;;;;;;;UAQJC,K,GAAQ;AACNC,MAAAA,OAAO,EAAE;AADH,K;;UA+BRC,c,GAAiB,YAAM;AACrB,YAAKC,QAAL,CAAc;AAACF,QAAAA,OAAO,EAAE;AAAV,OAAd;AACD,K;;UAEDG,e,GAAkB,YAAM;AACtB,YAAKD,QAAL,CAAc;AAACF,QAAAA,OAAO,EAAE;AAAV,OAAd;AACD,K;;;;;;;6BAjCoB;AACnB,UAAMI,OAAO,GACX,oBAAC,IAAD;AACE,QAAA,KAAK,EAAEV,UAAU,CAACW,OAAX,CACL;AACEC,UAAAA,eAAe,EAAE,KAAKP,KAAL,CAAWC,OAAX,GACb,KAAKO,KAAL,CAAWD,eAAX,CAA2BN,OADd,GAEb,KAAKO,KAAL,CAAWD,eAAX,CAA2BE;AAHjC,SADK,EAML,KAAKD,KAAL,CAAWE,KANN;AADT,SASG,KAAKF,KAAL,CAAWG,QATd,CADF;AAaA,aAAO,KAAKH,KAAL,CAAWI,OAAX,IAAsB,IAAtB,GACLP,OADK,GAGL,oBAAC,wBAAD;AACE,QAAA,OAAO,EAAE,KAAKG,KAAL,CAAWK,OADtB;AAEE,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWI,OAFtB;AAGE,QAAA,SAAS,EAAE,KAAKV,cAHlB;AAIE,QAAA,UAAU,EAAE,KAAKE;AAJnB,SAKGC,OALH,CAHF;AAWD;;;EArC8BZ,KAAK,CAACqB,S;;AAAjCf,kB,CACGgB,Y,GAAe;AACpBR,EAAAA,eAAe,EAAE;AACfE,IAAAA,OAAO,EAAEX,cAAc,CAACkB,kBAAf,CAAkC,IAAlC,CADM;AAEff,IAAAA,OAAO,EAAEH,cAAc,CAACmB,iBAAf,CAAiC,CAAjC;AAFM;AADG,C;AA+CxBC,MAAM,CAACC,OAAP,GAAiBpB,kBAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nconst React = require('react');\nconst StyleSheet = require('../../StyleSheet/StyleSheet');\nconst TouchableWithoutFeedback = require('../../Components/Touchable/TouchableWithoutFeedback');\nconst View = require('../../Components/View/View');\nconst YellowBoxStyle = require('./YellowBoxStyle');\n\nimport type {PressEvent} from '../../Types/CoreEventTypes';\nimport type {EdgeInsetsProp} from '../../StyleSheet/EdgeInsetsPropType';\nimport type {ViewStyleProp} from '../../StyleSheet/StyleSheet';\n\ntype Props = $ReadOnly<{|\n  backgroundColor: $ReadOnly<{|\n    default: string,\n    pressed: string,\n  |}>,\n  children?: React.Node,\n  hitSlop?: ?EdgeInsetsProp,\n  onPress?: ?(event: PressEvent) => void,\n  style?: ViewStyleProp,\n|}>;\n\ntype State = {|\n  pressed: boolean,\n|};\n\nclass YellowBoxPressable extends React.Component<Props, State> {\n  static defaultProps = {\n    backgroundColor: {\n      default: YellowBoxStyle.getBackgroundColor(0.95),\n      pressed: YellowBoxStyle.getHighlightColor(1),\n    },\n  };\n\n  state = {\n    pressed: false,\n  };\n\n  render(): React.Node {\n    const content = (\n      <View\n        style={StyleSheet.compose(\n          {\n            backgroundColor: this.state.pressed\n              ? this.props.backgroundColor.pressed\n              : this.props.backgroundColor.default,\n          },\n          this.props.style,\n        )}>\n        {this.props.children}\n      </View>\n    );\n    return this.props.onPress == null ? (\n      content\n    ) : (\n      <TouchableWithoutFeedback\n        hitSlop={this.props.hitSlop}\n        onPress={this.props.onPress}\n        onPressIn={this._handlePressIn}\n        onPressOut={this._handlePressOut}>\n        {content}\n      </TouchableWithoutFeedback>\n    );\n  }\n\n  _handlePressIn = () => {\n    this.setState({pressed: true});\n  };\n\n  _handlePressOut = () => {\n    this.setState({pressed: false});\n  };\n}\n\nmodule.exports = YellowBoxPressable;\n"]}