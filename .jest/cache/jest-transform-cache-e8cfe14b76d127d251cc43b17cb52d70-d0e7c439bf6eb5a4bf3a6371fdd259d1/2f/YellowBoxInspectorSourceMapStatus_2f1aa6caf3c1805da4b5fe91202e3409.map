{"version":3,"sources":["YellowBoxInspectorSourceMapStatus.js"],"names":["Animated","require","Easing","React","StyleSheet","Text","YellowBoxImageSource","YellowBoxPressable","YellowBoxStyle","YellowBoxInspectorSourceMapStatus","state","animation","rotate","image","props","status","check","alertTriangle","loader","default","getTextColor","pressed","bottom","left","right","top","onPress","compose","styles","root","pending","height","uri","width","transform","text","_updateAnimation","stop","animated","Value","loop","timing","duration","easing","linear","toValue","useNativeDriver","setState","interpolate","inputRange","outputRange","start","Component","create","alignItems","borderRadius","flexDirection","paddingHorizontal","backgroundColor","marginEnd","tintColor","getBackgroundColor","color","fontSize","includeFontPadding","lineHeight","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nconst Animated = require('../../Animated/src/Animated');\nconst Easing = require('../../Animated/src/Easing');\nconst React = require('react');\nconst StyleSheet = require('../../StyleSheet/StyleSheet');\nconst Text = require('../../Text/Text');\nconst YellowBoxImageSource = require('./YellowBoxImageSource');\nconst YellowBoxPressable = require('./YellowBoxPressable');\nconst YellowBoxStyle = require('./YellowBoxStyle');\n\nimport type {CompositeAnimation} from '../../Animated/src/AnimatedImplementation';\nimport type AnimatedInterpolation from '../../Animated/src/nodes/AnimatedInterpolation';\nimport type {PressEvent} from '../../Types/CoreEventTypes';\n\ntype Props = $ReadOnly<{|\n  onPress?: ?(event: PressEvent) => void,\n  status: 'COMPLETE' | 'FAILED' | 'NONE' | 'PENDING',\n|}>;\n\ntype State = {|\n  animation: ?CompositeAnimation,\n  rotate: ?AnimatedInterpolation,\n|};\n\nclass YellowBoxInspectorSourceMapStatus extends React.Component<Props, State> {\n  state = {\n    animation: null,\n    rotate: null,\n  };\n\n  render(): React.Node {\n    let image;\n    switch (this.props.status) {\n      case 'COMPLETE':\n        image = YellowBoxImageSource.check;\n        break;\n      case 'FAILED':\n        image = YellowBoxImageSource.alertTriangle;\n        break;\n      case 'PENDING':\n        image = YellowBoxImageSource.loader;\n        break;\n    }\n\n    return image == null ? null : (\n      <YellowBoxPressable\n        backgroundColor={{\n          default: YellowBoxStyle.getTextColor(0.8),\n          pressed: YellowBoxStyle.getTextColor(0.6),\n        }}\n        hitSlop={{bottom: 8, left: 8, right: 8, top: 8}}\n        onPress={this.props.onPress}\n        style={StyleSheet.compose(\n          styles.root,\n          this.props.status === 'PENDING' ? styles.pending : null,\n        )}>\n        <Animated.Image\n          source={{height: 16, uri: image, width: 16}}\n          style={StyleSheet.compose(\n            styles.image,\n            this.state.rotate == null\n              ? null\n              : {transform: [{rotate: this.state.rotate}]},\n          )}\n        />\n        <Text style={styles.text}>Source Map</Text>\n      </YellowBoxPressable>\n    );\n  }\n\n  componentDidMount(): void {\n    this._updateAnimation();\n  }\n\n  componentDidUpdate(): void {\n    this._updateAnimation();\n  }\n\n  componentWillUnmount(): void {\n    if (this.state.animation != null) {\n      this.state.animation.stop();\n    }\n  }\n\n  _updateAnimation(): void {\n    if (this.props.status === 'PENDING') {\n      if (this.state.animation == null) {\n        const animated = new Animated.Value(0);\n        const animation = Animated.loop(\n          Animated.timing(animated, {\n            duration: 2000,\n            easing: Easing.linear,\n            toValue: 1,\n            useNativeDriver: true,\n          }),\n        );\n        this.setState(\n          {\n            animation,\n            rotate: animated.interpolate({\n              inputRange: [0, 1],\n              outputRange: ['0deg', '360deg'],\n            }),\n          },\n          () => {\n            animation.start();\n          },\n        );\n      }\n    } else {\n      if (this.state.animation != null) {\n        this.state.animation.stop();\n        this.setState({\n          animation: null,\n          rotate: null,\n        });\n      }\n    }\n  }\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    alignItems: 'center',\n    borderRadius: 12,\n    flexDirection: 'row',\n    height: 24,\n    paddingHorizontal: 8,\n  },\n  pending: {\n    backgroundColor: YellowBoxStyle.getTextColor(0.6),\n  },\n  image: {\n    marginEnd: 4,\n    tintColor: YellowBoxStyle.getBackgroundColor(1),\n  },\n  text: {\n    color: YellowBoxStyle.getBackgroundColor(1),\n    fontSize: 12,\n    includeFontPadding: false,\n    lineHeight: 16,\n  },\n});\n\nmodule.exports = YellowBoxInspectorSourceMapStatus;\n"]}