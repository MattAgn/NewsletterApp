031ca7e7ad383b51e0220b63122292bd
"use strict";

var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (b.hasOwnProperty(p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});

var Subject_1 = require("../Subject");

var OuterSubscriber_1 = require("../OuterSubscriber");

var subscribeToResult_1 = require("../util/subscribeToResult");

function repeatWhen(notifier) {
  return function (source) {
    return source.lift(new RepeatWhenOperator(notifier));
  };
}

exports.repeatWhen = repeatWhen;

var RepeatWhenOperator = function () {
  function RepeatWhenOperator(notifier) {
    this.notifier = notifier;
  }

  RepeatWhenOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));
  };

  return RepeatWhenOperator;
}();

var RepeatWhenSubscriber = function (_super) {
  __extends(RepeatWhenSubscriber, _super);

  function RepeatWhenSubscriber(destination, notifier, source) {
    var _this = _super.call(this, destination) || this;

    _this.notifier = notifier;
    _this.source = source;
    _this.sourceIsBeingSubscribedTo = true;
    return _this;
  }

  RepeatWhenSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.sourceIsBeingSubscribedTo = true;
    this.source.subscribe(this);
  };

  RepeatWhenSubscriber.prototype.notifyComplete = function (innerSub) {
    if (this.sourceIsBeingSubscribedTo === false) {
      return _super.prototype.complete.call(this);
    }
  };

  RepeatWhenSubscriber.prototype.complete = function () {
    this.sourceIsBeingSubscribedTo = false;

    if (!this.isStopped) {
      if (!this.retries) {
        this.subscribeToRetries();
      }

      if (!this.retriesSubscription || this.retriesSubscription.closed) {
        return _super.prototype.complete.call(this);
      }

      this._unsubscribeAndRecycle();

      this.notifications.next();
    }
  };

  RepeatWhenSubscriber.prototype._unsubscribe = function () {
    var _a = this,
        notifications = _a.notifications,
        retriesSubscription = _a.retriesSubscription;

    if (notifications) {
      notifications.unsubscribe();
      this.notifications = null;
    }

    if (retriesSubscription) {
      retriesSubscription.unsubscribe();
      this.retriesSubscription = null;
    }

    this.retries = null;
  };

  RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {
    var _unsubscribe = this._unsubscribe;
    this._unsubscribe = null;

    _super.prototype._unsubscribeAndRecycle.call(this);

    this._unsubscribe = _unsubscribe;
    return this;
  };

  RepeatWhenSubscriber.prototype.subscribeToRetries = function () {
    this.notifications = new Subject_1.Subject();
    var retries;

    try {
      var notifier = this.notifier;
      retries = notifier(this.notifications);
    } catch (e) {
      return _super.prototype.complete.call(this);
    }

    this.retries = retries;
    this.retriesSubscription = subscribeToResult_1.subscribeToResult(this, retries);
  };

  return RepeatWhenSubscriber;
}(OuterSubscriber_1.OuterSubscriber);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pbnRlcm5hbC9vcGVyYXRvcnMvcmVwZWF0V2hlbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUdBLElBQUEsU0FBQSxHQUFBLE9BQUEsQ0FBQSxZQUFBLENBQUE7O0FBR0EsSUFBQSxpQkFBQSxHQUFBLE9BQUEsQ0FBQSxvQkFBQSxDQUFBOztBQUVBLElBQUEsbUJBQUEsR0FBQSxPQUFBLENBQUEsMkJBQUEsQ0FBQTs7QUFrQ0EsU0FBZ0IsVUFBaEIsQ0FBOEIsUUFBOUIsRUFBMkY7QUFDekYsU0FBTyxVQUFDLE1BQUQsRUFBc0I7QUFBSyxXQUFBLE1BQU0sQ0FBQyxJQUFQLENBQVksSUFBSSxrQkFBSixDQUFaLFFBQVksQ0FBWixDQUFBO0FBQTZDLEdBQS9FO0FBQ0Q7O0FBRkQsT0FBQSxDQUFBLFVBQUEsR0FBQSxVQUFBOztBQUlBLElBQUEsa0JBQUEsR0FBQSxZQUFBO0FBQ0UsV0FBQSxrQkFBQSxDQUFzQixRQUF0QixFQUFtRjtBQUE3RCxTQUFBLFFBQUEsR0FBQSxRQUFBO0FBQ3JCOztBQUVELEVBQUEsa0JBQUEsQ0FBQSxTQUFBLENBQUEsSUFBQSxHQUFBLFVBQUssVUFBTCxFQUFnQyxNQUFoQyxFQUEyQztBQUN6QyxXQUFPLE1BQU0sQ0FBQyxTQUFQLENBQWlCLElBQUksb0JBQUosQ0FBeUIsVUFBekIsRUFBcUMsS0FBSyxRQUExQyxFQUFvRCxNQUFwRCxDQUFqQixDQUFQO0FBQ0QsR0FGRDs7QUFHRixTQUFBLGtCQUFBO0FBQUMsQ0FQRCxFQUFBOztBQWNBLElBQUEsb0JBQUEsR0FBQSxVQUFBLE1BQUEsRUFBQTtBQUF5QyxFQUFBLFNBQUEsQ0FBQSxvQkFBQSxFQUFBLE1BQUEsQ0FBQTs7QUFPdkMsV0FBQSxvQkFBQSxDQUFZLFdBQVosRUFDb0IsUUFEcEIsRUFFb0IsTUFGcEIsRUFFeUM7QUFGekMsUUFBQSxLQUFBLEdBR0UsTUFBQSxDQUFBLElBQUEsQ0FB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