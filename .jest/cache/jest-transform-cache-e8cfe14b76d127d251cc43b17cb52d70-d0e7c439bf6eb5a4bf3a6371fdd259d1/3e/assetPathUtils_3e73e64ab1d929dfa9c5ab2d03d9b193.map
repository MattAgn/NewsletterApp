{"version":3,"sources":["assetPathUtils.js"],"names":["androidScaleSuffix","getAndroidAssetSuffix","scale","toString","Error","drawableFileTypes","Set","getAndroidResourceFolderName","asset","has","type","suffix","JSON","stringify","androidFolder","getAndroidResourceIdentifier","folderPath","getBasePath","name","toLowerCase","replace","basePath","httpServerLocation","substr","module","exports"],"mappings":"AAUA;;AAIA,IAAMA,kBAAkB,GAAG;AACzB,UAAQ,MADiB;AAEzB,OAAK,MAFoB;AAGzB,SAAO,MAHkB;AAIzB,OAAK,OAJoB;AAKzB,OAAK,QALoB;AAMzB,OAAK;AANoB,CAA3B;;AAaA,SAASC,qBAAT,CAA+BC,KAA/B,EAAsD;AACpD,MAAIA,KAAK,CAACC,QAAN,MAAoBH,kBAAxB,EAA4C;AAC1C,WAAOA,kBAAkB,CAACE,KAAK,CAACC,QAAN,EAAD,CAAzB;AACD;;AAED,QAAM,IAAIC,KAAJ,CAAU,mBAAmBF,KAAK,CAACC,QAAN,EAA7B,CAAN;AACD;;AAGD,IAAME,iBAAiB,GAAG,IAAIC,GAAJ,CAAQ,CAChC,KADgC,EAEhC,MAFgC,EAGhC,KAHgC,EAIhC,KAJgC,EAKhC,KALgC,EAMhC,MANgC,EAOhC,KAPgC,CAAR,CAA1B;;AAUA,SAASC,4BAAT,CAAsCC,KAAtC,EAA4DN,KAA5D,EAA2E;AACzE,MAAI,CAACG,iBAAiB,CAACI,GAAlB,CAAsBD,KAAK,CAACE,IAA5B,CAAL,EAAwC;AACtC,WAAO,KAAP;AACD;;AACD,MAAIC,MAAM,GAAGV,qBAAqB,CAACC,KAAD,CAAlC;;AACA,MAAI,CAACS,MAAL,EAAa;AACX,UAAM,IAAIP,KAAJ,CACJ,gEACEF,KADF,GAEE,WAFF,GAGEU,IAAI,CAACC,SAAL,CAAeL,KAAf,EAAsB,IAAtB,EAA4B,IAA5B,CAHF,GAIE,wBAJF,GAKEI,IAAI,CAACC,SAAL,CAAeb,kBAAf,EAAmC,IAAnC,EAAyC,IAAzC,CANE,CAAN;AAQD;;AACD,MAAMc,aAAa,GAAG,cAAcH,MAApC;AACA,SAAOG,aAAP;AACD;;AAED,SAASC,4BAAT,CAAsCP,KAAtC,EAA4D;AAC1D,MAAIQ,UAAU,GAAGC,WAAW,CAACT,KAAD,CAA5B;AACA,SAAO,CAACQ,UAAU,GAAG,GAAb,GAAmBR,KAAK,CAACU,IAA1B,EACJC,WADI,GAEJC,OAFI,CAEI,KAFJ,EAEW,GAFX,EAGJA,OAHI,CAGI,eAHJ,EAGqB,EAHrB,EAIJA,OAJI,CAII,UAJJ,EAIgB,EAJhB,CAAP;AAKD;;AAED,SAASH,WAAT,CAAqBT,KAArB,EAA2C;AACzC,MAAIa,QAAQ,GAAGb,KAAK,CAACc,kBAArB;;AACA,MAAID,QAAQ,CAAC,CAAD,CAAR,KAAgB,GAApB,EAAyB;AACvBA,IAAAA,QAAQ,GAAGA,QAAQ,CAACE,MAAT,CAAgB,CAAhB,CAAX;AACD;;AACD,SAAOF,QAAP;AACD;;AAEDG,MAAM,CAACC,OAAP,GAAiB;AACfxB,EAAAA,qBAAqB,EAAEA,qBADR;AAEfM,EAAAA,4BAA4B,EAAEA,4BAFf;AAGfQ,EAAAA,4BAA4B,EAAEA,4BAHf;AAIfE,EAAAA,WAAW,EAAEA;AAJE,CAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\n'use strict';\n\nimport type {PackagerAsset} from './AssetRegistry';\n\nconst androidScaleSuffix = {\n  '0.75': 'ldpi',\n  '1': 'mdpi',\n  '1.5': 'hdpi',\n  '2': 'xhdpi',\n  '3': 'xxhdpi',\n  '4': 'xxxhdpi',\n};\n\n/**\n * FIXME: using number to represent discrete scale numbers is fragile in essence because of\n * floating point numbers imprecision.\n */\nfunction getAndroidAssetSuffix(scale: number): string {\n  if (scale.toString() in androidScaleSuffix) {\n    return androidScaleSuffix[scale.toString()];\n  }\n\n  throw new Error('no such scale ' + scale.toString());\n}\n\n// See https://developer.android.com/guide/topics/resources/drawable-resource.html\nconst drawableFileTypes = new Set([\n  'gif',\n  'jpeg',\n  'jpg',\n  'png',\n  'svg',\n  'webp',\n  'xml',\n]);\n\nfunction getAndroidResourceFolderName(asset: PackagerAsset, scale: number) {\n  if (!drawableFileTypes.has(asset.type)) {\n    return 'raw';\n  }\n  var suffix = getAndroidAssetSuffix(scale);\n  if (!suffix) {\n    throw new Error(\n      \"Don't know which android drawable suffix to use for scale: \" +\n        scale +\n        '\\nAsset: ' +\n        JSON.stringify(asset, null, '\\t') +\n        '\\nPossible scales are:' +\n        JSON.stringify(androidScaleSuffix, null, '\\t'),\n    );\n  }\n  const androidFolder = 'drawable-' + suffix;\n  return androidFolder;\n}\n\nfunction getAndroidResourceIdentifier(asset: PackagerAsset) {\n  var folderPath = getBasePath(asset);\n  return (folderPath + '/' + asset.name)\n    .toLowerCase()\n    .replace(/\\//g, '_') // Encode folder structure in file name\n    .replace(/([^a-z0-9_])/g, '') // Remove illegal chars\n    .replace(/^assets_/, ''); // Remove \"assets_\" prefix\n}\n\nfunction getBasePath(asset: PackagerAsset) {\n  var basePath = asset.httpServerLocation;\n  if (basePath[0] === '/') {\n    basePath = basePath.substr(1);\n  }\n  return basePath;\n}\n\nmodule.exports = {\n  getAndroidAssetSuffix: getAndroidAssetSuffix,\n  getAndroidResourceFolderName: getAndroidResourceFolderName,\n  getAndroidResourceIdentifier: getAndroidResourceIdentifier,\n  getBasePath: getBasePath,\n};\n"]}