{"version":3,"sources":["inspecting.js"],"names":["require","normalizeUrl","FetchMock","sanitizeRoute","generateMatcher","isName","nameOrMatcher","test","filterCallsWithMatcher","matcher","options","calls","filter","url","filterCalls","_calls","isUnmatched","identifier","routes","some","call","length","method","lastCall","pop","lastUrl","lastOptions","called","flush","waitForResponseMethods","queuedPromises","_holdingPromises","Promise","all","then","done","routesToCheck","map","console","warn","expectedTimes","find","r","repeat","actualTimes","every","isDone","module","exports"],"mappings":"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","sourcesContent":["const { normalizeUrl } = require('./request-utils');\nconst FetchMock = {};\nconst { sanitizeRoute } = require('./compile-route');\nconst generateMatcher = require('./generate-matcher');\nconst isName = nameOrMatcher =>\n\ttypeof nameOrMatcher === 'string' && /^[\\da-zA-Z\\-]+$/.test(nameOrMatcher);\n\nconst filterCallsWithMatcher = (matcher, options = {}, calls) => {\n\tmatcher = generateMatcher(sanitizeRoute(Object.assign({ matcher }, options)));\n\treturn calls.filter(([url, options]) => matcher(normalizeUrl(url), options));\n};\n\nFetchMock.filterCalls = function(nameOrMatcher, options) {\n\tlet calls = this._calls;\n\tlet matcher = '*';\n\n\tif (nameOrMatcher === true) {\n\t\tcalls = calls.filter(({ isUnmatched }) => !isUnmatched);\n\t} else if (nameOrMatcher === false) {\n\t\tcalls = calls.filter(({ isUnmatched }) => isUnmatched);\n\t} else if (typeof nameOrMatcher === 'undefined') {\n\t\tcalls = calls;\n\t} else if (isName(nameOrMatcher)) {\n\t\tcalls = calls.filter(({ identifier }) => identifier === nameOrMatcher);\n\t} else {\n\t\tmatcher = normalizeUrl(nameOrMatcher);\n\t\tif (this.routes.some(({ identifier }) => identifier === matcher)) {\n\t\t\tcalls = calls.filter(call => call.identifier === matcher);\n\t\t}\n\t}\n\n\tif ((options || matcher !== '*') && calls.length) {\n\t\tif (typeof options === 'string') {\n\t\t\toptions = { method: options };\n\t\t}\n\t\tcalls = filterCallsWithMatcher(matcher, options, calls);\n\t}\n\treturn calls;\n};\n\nFetchMock.calls = function(nameOrMatcher, options) {\n\treturn this.filterCalls(nameOrMatcher, options);\n};\n\nFetchMock.lastCall = function(nameOrMatcher, options) {\n\treturn [...this.filterCalls(nameOrMatcher, options)].pop();\n};\n\nFetchMock.lastUrl = function(nameOrMatcher, options) {\n\treturn (this.lastCall(nameOrMatcher, options) || [])[0];\n};\n\nFetchMock.lastOptions = function(nameOrMatcher, options) {\n\treturn (this.lastCall(nameOrMatcher, options) || [])[1];\n};\n\nFetchMock.called = function(nameOrMatcher, options) {\n\treturn !!this.filterCalls(nameOrMatcher, options).length;\n};\n\nFetchMock.flush = function(waitForResponseMethods) {\n\tconst queuedPromises = this._holdingPromises;\n\tthis._holdingPromises = [];\n\n\treturn Promise.all(queuedPromises).then(() => {\n\t\tif (waitForResponseMethods && this._holdingPromises.length) {\n\t\t\treturn this.flush(waitForResponseMethods);\n\t\t}\n\t});\n};\n\nFetchMock.done = function(nameOrMatcher) {\n\tconst routesToCheck =\n\t\tnameOrMatcher && typeof nameOrMatcher !== 'boolean'\n\t\t\t? [{ identifier: nameOrMatcher }]\n\t\t\t: this.routes;\n\n\t// Can't use array.every because would exit after first failure, which would\n\t// break the logging\n\treturn routesToCheck\n\t\t.map(({ identifier }) => {\n\t\t\tif (!this.called(identifier)) {\n\t\t\t\tconsole.warn(`Warning: ${identifier} not called`); // eslint-disable-line\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst expectedTimes = (\n\t\t\t\tthis.routes.find(r => r.identifier === identifier) || {}\n\t\t\t).repeat;\n\n\t\t\tif (!expectedTimes) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tconst actualTimes = this.filterCalls(identifier).length;\n\t\t\tif (expectedTimes > actualTimes) {\n\t\t\t\tconsole.warn(\n\t\t\t\t\t`Warning: ${identifier} only called ${actualTimes} times, but ${expectedTimes} expected`\n\t\t\t\t); // eslint-disable-line\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t})\n\t\t.every(isDone => isDone);\n};\n\nmodule.exports = FetchMock;\n"]}