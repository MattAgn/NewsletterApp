17ac02c30d28b2e226af99f765da239d
"use strict";

var __extends = this && this.__extends || function () {
  var _extendStatics = function extendStatics(d, b) {
    _extendStatics = Object.setPrototypeOf || {
      __proto__: []
    } instanceof Array && function (d, b) {
      d.__proto__ = b;
    } || function (d, b) {
      for (var p in b) {
        if (b.hasOwnProperty(p)) d[p] = b[p];
      }
    };

    return _extendStatics(d, b);
  };

  return function (d, b) {
    _extendStatics(d, b);

    function __() {
      this.constructor = d;
    }

    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  };
}();

Object.defineProperty(exports, "__esModule", {
  value: true
});

var OuterSubscriber_1 = require("../OuterSubscriber");

var subscribeToResult_1 = require("../util/subscribeToResult");

function distinct(keySelector, flushes) {
  return function (source) {
    return source.lift(new DistinctOperator(keySelector, flushes));
  };
}

exports.distinct = distinct;

var DistinctOperator = function () {
  function DistinctOperator(keySelector, flushes) {
    this.keySelector = keySelector;
    this.flushes = flushes;
  }

  DistinctOperator.prototype.call = function (subscriber, source) {
    return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));
  };

  return DistinctOperator;
}();

var DistinctSubscriber = function (_super) {
  __extends(DistinctSubscriber, _super);

  function DistinctSubscriber(destination, keySelector, flushes) {
    var _this = _super.call(this, destination) || this;

    _this.keySelector = keySelector;
    _this.values = new Set();

    if (flushes) {
      _this.add(subscribeToResult_1.subscribeToResult(_this, flushes));
    }

    return _this;
  }

  DistinctSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
    this.values.clear();
  };

  DistinctSubscriber.prototype.notifyError = function (error, innerSub) {
    this._error(error);
  };

  DistinctSubscriber.prototype._next = function (value) {
    if (this.keySelector) {
      this._useKeySelector(value);
    } else {
      this._finalizeNext(value, value);
    }
  };

  DistinctSubscriber.prototype._useKeySelector = function (value) {
    var key;
    var destination = this.destination;

    try {
      key = this.keySelector(value);
    } catch (err) {
      destination.error(err);
      return;
    }

    this._finalizeNext(key, value);
  };

  DistinctSubscriber.prototype._finalizeNext = function (key, value) {
    var values = this.values;

    if (!values.has(key)) {
      values.add(key);
      this.destination.next(value);
    }
  };

  return DistinctSubscriber;
}(OuterSubscriber_1.OuterSubscriber);

exports.DistinctSubscriber = DistinctSubscriber;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9pbnRlcm5hbC9vcGVyYXRvcnMvZGlzdGluY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFHQSxJQUFBLGlCQUFBLEdBQUEsT0FBQSxDQUFBLG9CQUFBLENBQUE7O0FBRUEsSUFBQSxtQkFBQSxHQUFBLE9BQUEsQ0FBQSwyQkFBQSxDQUFBOztBQTZEQSxTQUFnQixRQUFoQixDQUErQixXQUEvQixFQUMrQixPQUQvQixFQUN3RDtBQUN0RCxTQUFPLFVBQUMsTUFBRCxFQUFzQjtBQUFLLFdBQUEsTUFBTSxDQUFDLElBQVAsQ0FBWSxJQUFJLGdCQUFKLENBQXFCLFdBQXJCLEVBQVosT0FBWSxDQUFaLENBQUE7QUFBdUQsR0FBekY7QUFDRDs7QUFIRCxPQUFBLENBQUEsUUFBQSxHQUFBLFFBQUE7O0FBS0EsSUFBQSxnQkFBQSxHQUFBLFlBQUE7QUFDRSxXQUFBLGdCQUFBLENBQW9CLFdBQXBCLEVBQTBELE9BQTFELEVBQWtGO0FBQTlELFNBQUEsV0FBQSxHQUFBLFdBQUE7QUFBc0MsU0FBQSxPQUFBLEdBQUEsT0FBQTtBQUN6RDs7QUFFRCxFQUFBLGdCQUFBLENBQUEsU0FBQSxDQUFBLElBQUEsR0FBQSxVQUFLLFVBQUwsRUFBZ0MsTUFBaEMsRUFBMkM7QUFDekMsV0FBTyxNQUFNLENBQUMsU0FBUCxDQUFpQixJQUFJLGtCQUFKLENBQXVCLFVBQXZCLEVBQW1DLEtBQUssV0FBeEMsRUFBcUQsS0FBSyxPQUExRCxDQUFqQixDQUFQO0FBQ0QsR0FGRDs7QUFHRixTQUFBLGdCQUFBO0FBQUMsQ0FQRCxFQUFBOztBQWNBLElBQUEsa0JBQUEsR0FBQSxVQUFBLE1BQUEsRUFBQTtBQUE4QyxFQUFBLFNBQUEsQ0FBQSxrQkFBQSxFQUFBLE1BQUEsQ0FBQTs7QUFHNUMsV0FBQSxrQkFBQSxDQUFZLFdBQVosRUFBZ0QsV0FBaEQsRUFBOEUsT0FBOUUsRUFBc0c7QUFBdEcsUUFBQSxLQUFBLEdBQ0UsTUFBQSxDQUFBLElBQUEsQ0FBQSxJQUFBLEVBQU0sV0FBTixLQUFrQixJQURwQjs7QUFBZ0QsSUFBQSxLQUFBLENBQUEsV0FBQSxHQUFBLFdBQUE7QUFGeEMsSUFBQSxLQUFBLENBQUEsTUFBQSxHQUFTLElBQUksR0FBSixFQUFUOztBQUtOLFFBQUksT0FBSixFQUFhO0FBQ1gsTUFBQSxLQUFJLENBQUMsR0FBTCxDQUFTLG1CQUFBLENBQUEsaUJBQUEsQ0FBa0IsS0FBbEIsRUFBd0IsT0FBeEIsQ0FBVDtBQUNEOzs7QUFDRjs7QUFFRCxFQUFBLGtCQUFBLENBQUEsU0FBQSxDQUFBLFVBQUEsR0FBQSxVQUFXLFVBQVgsRUFBMEIsVUFBMUIsRUFDVyxVQURYLEVBQytCLFVBRC9CLEVBRVcsUUFGWCxFQUUwQztBQUN4QyxTQUFLLE1BQUwsQ0FBWSxLQUFaO0FBQ0QsR0FKRDs7QUFNQSxFQUFBLGtCQUFBLENBQUEsU0FBQSxDQUFBLFdBQUEsR0FBQSxVQUFZLEtBQVosRUFBd0IsUUFBeEIsRUFBdUQ7QUFDckQsU0FBSyxNQUFMLENBQVksS0FBWjtBQUNELEdBRkQ7O0FBSVUsRUFBQSxrQkFBQSxDQUFBLFNBQUEsQ0FBQSxLQUFBLEdBQVYsVUFBZ0IsS0FBaEIsRUFBd0I7QUFDdEIsUUFBSSxLQUFLLFdBQVQsRUFBc0I7QUFDcEIsV0FBSyxlQUFMLENBQXFCLEtBQXJCO0FBQ0QsS0FGRCxNQUVPO0FBQ0wsV0FBSyxhQUFMLENBQW1CLEtBQW5CLEVBQTBCLEtBQTFCO0FBQ0Q7QUFDRixHQU5TOztBQVFGLEVBQUEsa0JBQUEsQ0FBQSxTQUFBLENBQUEsZUFBQSxHQUFSLFVBQXdCLEtBQXhCLEVBQWdDO0FBQzlCLFFBQUksR0FBSjtBQUNRLFFBQUEsV0FBQSxHQUFBLEtBQUEsV0FBQTs7QUFDUixRQUFJO0FBQ0YsTUFBQSxHQUFHLEdBQUcsS0FBSyxXQUFMLENBQWlCLEtBQWpCLENBQU47QUFDRCxLQUZELENBRUUsT0FBTyxHQUFQLEVBQVk7QUFDWixNQUFBLFdBQVcsQ0FBQyxLQUFaLENBQWtCLEdBQWxCO0FBQ0E7QUFDRDs7QUFDRCxTQUFLLGFBQUwsQ0FBbUIsR0FBbkIsRUFBd0IsS0FBeEI7QUFDRCxHQVZPOztBQVlBLEVBQUEsa0JBQUEsQ0FBQSxTQUFBLENBQUEsYUFBQSxHQUFSLFVBQXNCLEdBQXRCLEVBQWdDLEtBQWhDLEVBQXdDO0FBQzlCLFFBQUEsTUFBQSxHQUFBLEtBQUEsTUFBQTs7QUFDUixRQUFJLENBQUMsTUFBTSxDQUFDLEdBQVAsQ0FBYyxHQUFkLENBQUwsRUFBeUI7QUFDdkIsTUFBQSxNQUFNLENBQUMsR0FBUCxDQUFjLEdBQWQ7QUFDQSxXQUFLLFdBQUwsQ0FBaUIsSUFBakIsQ0FBc0IsS0FBdEI7QUFDRDtBQUNGLEdBTk87O0FBUVYsU0FBQSxrQkFBQTtBQUFDLENBakRELENBQThDLGlCQUFBLENBQUEsZUFBOUMsQ0FBQTs7QUFBYSxPQUFBLENBQUEsa0JBQUEsR0FBQSxrQkFBQSJ9