{"version":3,"sources":["AnimatedProps.js"],"names":["require","AnimatedEvent","AnimatedNode","AnimatedStyle","NativeAnimatedHelper","ReactNative","invariant","AnimatedProps","props","callback","style","_props","_callback","__attach","key","value","__isNative","__getValue","__getHandler","__getAnimatedValue","__addChild","_animatedView","__disconnectAnimatedView","__removeChild","__makeNative","__connectAnimatedView","animatedView","nativeViewTag","findNodeHandle","API","connectAnimatedNodeToView","__getNativeTag","disconnectAnimatedNodeFromView","propsConfig","propKey","type","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nconst {AnimatedEvent} = require('../AnimatedEvent');\nconst AnimatedNode = require('./AnimatedNode');\nconst AnimatedStyle = require('./AnimatedStyle');\nconst NativeAnimatedHelper = require('../NativeAnimatedHelper');\nconst ReactNative = require('../../../Renderer/shims/ReactNative');\n\nconst invariant = require('invariant');\n\nclass AnimatedProps extends AnimatedNode {\n  _props: Object;\n  _animatedView: any;\n  _callback: () => void;\n\n  constructor(props: Object, callback: () => void) {\n    super();\n    if (props.style) {\n      props = {\n        ...props,\n        style: new AnimatedStyle(props.style),\n      };\n    }\n    this._props = props;\n    this._callback = callback;\n    this.__attach();\n  }\n\n  __getValue(): Object {\n    const props = {};\n    for (const key in this._props) {\n      const value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        if (!value.__isNative || value instanceof AnimatedStyle) {\n          // We cannot use value of natively driven nodes this way as the value we have access from\n          // JS may not be up to date.\n          props[key] = value.__getValue();\n        }\n      } else if (value instanceof AnimatedEvent) {\n        props[key] = value.__getHandler();\n      } else {\n        props[key] = value;\n      }\n    }\n    return props;\n  }\n\n  __getAnimatedValue(): Object {\n    const props = {};\n    for (const key in this._props) {\n      const value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        props[key] = value.__getAnimatedValue();\n      }\n    }\n    return props;\n  }\n\n  __attach(): void {\n    for (const key in this._props) {\n      const value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        value.__addChild(this);\n      }\n    }\n  }\n\n  __detach(): void {\n    if (this.__isNative && this._animatedView) {\n      this.__disconnectAnimatedView();\n    }\n    for (const key in this._props) {\n      const value = this._props[key];\n      if (value instanceof AnimatedNode) {\n        value.__removeChild(this);\n      }\n    }\n    super.__detach();\n  }\n\n  update(): void {\n    this._callback();\n  }\n\n  __makeNative(): void {\n    if (!this.__isNative) {\n      this.__isNative = true;\n      for (const key in this._props) {\n        const value = this._props[key];\n        if (value instanceof AnimatedNode) {\n          value.__makeNative();\n        }\n      }\n      if (this._animatedView) {\n        this.__connectAnimatedView();\n      }\n    }\n  }\n\n  setNativeView(animatedView: any): void {\n    if (this._animatedView === animatedView) {\n      return;\n    }\n    this._animatedView = animatedView;\n    if (this.__isNative) {\n      this.__connectAnimatedView();\n    }\n  }\n\n  __connectAnimatedView(): void {\n    invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n    const nativeViewTag: ?number = ReactNative.findNodeHandle(\n      this._animatedView,\n    );\n    invariant(\n      nativeViewTag != null,\n      'Unable to locate attached view in the native tree',\n    );\n    NativeAnimatedHelper.API.connectAnimatedNodeToView(\n      this.__getNativeTag(),\n      nativeViewTag,\n    );\n  }\n\n  __disconnectAnimatedView(): void {\n    invariant(this.__isNative, 'Expected node to be marked as \"native\"');\n    const nativeViewTag: ?number = ReactNative.findNodeHandle(\n      this._animatedView,\n    );\n    invariant(\n      nativeViewTag != null,\n      'Unable to locate attached view in the native tree',\n    );\n    NativeAnimatedHelper.API.disconnectAnimatedNodeFromView(\n      this.__getNativeTag(),\n      nativeViewTag,\n    );\n  }\n\n  __getNativeConfig(): Object {\n    const propsConfig = {};\n    for (const propKey in this._props) {\n      const value = this._props[propKey];\n      if (value instanceof AnimatedNode) {\n        propsConfig[propKey] = value.__getNativeTag();\n      }\n    }\n    return {\n      type: 'props',\n      props: propsConfig,\n    };\n  }\n}\n\nmodule.exports = AnimatedProps;\n"]}