{"version":3,"sources":["setFormikInitialValue.js"],"names":["setFormikInitialValue","WrappedInput","props","formik","name","values","setFieldValue","React","PureComponent","withFormik"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA,IAAMA,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAC,YAAY,EAAI;AAC5C;AAAA;;AACE,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;AACjB,qHAAMA,KAAN;AADiB,UAGTC,MAHS,GAGQD,KAHR,CAGTC,MAHS;AAAA,UAGDC,IAHC,GAGQF,KAHR,CAGDE,IAHC;;AAIjB,UAAI,CAAC,iBAAID,MAAM,CAACE,MAAX,EAAmBD,IAAnB,CAAL,EAA+B;AAC7BD,QAAAA,MAAM,CAACG,aAAP,CAAqBF,IAArB,EAA2B,EAA3B;AACD;;AANgB;AAOlB;;AARH;AAAA;AAAA,+BAUW;AACP,eAAO,6BAAC,YAAD,EAAkB,KAAKF,KAAvB,CAAP;AACD;AAZH;AAAA;AAAA,IAAmCK,eAAMC,aAAzC;AAcD,CAfD;;eAiBe,wBACbC,mBADa,EAEbT,qBAFa,C","sourcesContent":["import React from \"react\";\nimport { compose } from \"recompose\";\nimport { has } from \"lodash\";\nimport withFormik from \"./withFormik\";\n\nconst setFormikInitialValue = WrappedInput => {\n  return class WithFocusProp extends React.PureComponent {\n    constructor(props) {\n      super(props);\n\n      const { formik, name } = props;\n      if (!has(formik.values, name)) {\n        formik.setFieldValue(name, \"\");\n      }\n    }\n\n    render() {\n      return <WrappedInput {...this.props} />;\n    }\n  };\n};\n\nexport default compose(\n  withFormik,\n  setFormikInitialValue\n);\n"]}