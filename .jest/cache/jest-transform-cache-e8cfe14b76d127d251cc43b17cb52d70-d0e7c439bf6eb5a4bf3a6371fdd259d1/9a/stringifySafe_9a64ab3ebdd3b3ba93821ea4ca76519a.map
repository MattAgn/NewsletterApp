{"version":3,"sources":["stringifySafe.js"],"names":["stringifySafe","arg","ret","type","undefined","toString","e","JSON","stringify","E","module","exports"],"mappings":"AAUA;;AAMA,SAASA,aAAT,CAAuBC,GAAvB,EAAyC;AACvC,MAAIC,GAAJ;AACA,MAAMC,IAAI,GAAG,OAAOF,GAApB;;AACA,MAAIA,GAAG,KAAKG,SAAZ,EAAuB;AACrBF,IAAAA,GAAG,GAAG,WAAN;AACD,GAFD,MAEO,IAAID,GAAG,KAAK,IAAZ,EAAkB;AACvBC,IAAAA,GAAG,GAAG,MAAN;AACD,GAFM,MAEA,IAAIC,IAAI,KAAK,QAAb,EAAuB;AAC5BD,IAAAA,GAAG,GAAG,MAAMD,GAAN,GAAY,GAAlB;AACD,GAFM,MAEA,IAAIE,IAAI,KAAK,UAAb,EAAyB;AAC9B,QAAI;AACFD,MAAAA,GAAG,GAAGD,GAAG,CAACI,QAAJ,EAAN;AACD,KAFD,CAEE,OAAOC,CAAP,EAAU;AACVJ,MAAAA,GAAG,GAAG,oBAAN;AACD;AACF,GANM,MAMA;AAGL,QAAI;AACFA,MAAAA,GAAG,GAAGK,IAAI,CAACC,SAAL,CAAeP,GAAf,CAAN;AACD,KAFD,CAEE,OAAOK,CAAP,EAAU;AACV,UAAI,OAAOL,GAAG,CAACI,QAAX,KAAwB,UAA5B,EAAwC;AACtC,YAAI;AACFH,UAAAA,GAAG,GAAGD,GAAG,CAACI,QAAJ,EAAN;AACD,SAFD,CAEE,OAAOI,CAAP,EAAU,CAAE;AACf;AACF;AACF;;AACD,SAAOP,GAAG,IAAI,OAAOC,IAAP,GAAc,wBAA5B;AACD;;AAEDO,MAAM,CAACC,OAAP,GAAiBX,aAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\n/**\n * Tries to stringify with JSON.stringify and toString, but catches exceptions\n * (e.g. from circular objects) and always returns a string and never throws.\n */\nfunction stringifySafe(arg: any): string {\n  let ret;\n  const type = typeof arg;\n  if (arg === undefined) {\n    ret = 'undefined';\n  } else if (arg === null) {\n    ret = 'null';\n  } else if (type === 'string') {\n    ret = '\"' + arg + '\"';\n  } else if (type === 'function') {\n    try {\n      ret = arg.toString();\n    } catch (e) {\n      ret = '[function unknown]';\n    }\n  } else {\n    // Perform a try catch, just in case the object has a circular\n    // reference or stringify throws for some other reason.\n    try {\n      ret = JSON.stringify(arg);\n    } catch (e) {\n      if (typeof arg.toString === 'function') {\n        try {\n          ret = arg.toString();\n        } catch (E) {}\n      }\n    }\n  }\n  return ret || '[\"' + type + '\" failed to stringify]';\n}\n\nmodule.exports = stringifySafe;\n"]}