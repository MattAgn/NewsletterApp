7242603c1d01cb66bdfd24940a53c83f
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var AnimatedInterpolation = require('./AnimatedInterpolation');

var AnimatedNode = require('./AnimatedNode');

var AnimatedWithChildren = require('./AnimatedWithChildren');

var AnimatedDiffClamp = function (_AnimatedWithChildren) {
  (0, _inherits2.default)(AnimatedDiffClamp, _AnimatedWithChildren);

  function AnimatedDiffClamp(a, min, max) {
    var _this;

    (0, _classCallCheck2.default)(this, AnimatedDiffClamp);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(AnimatedDiffClamp).call(this));
    _this._a = a;
    _this._min = min;
    _this._max = max;
    _this._value = _this._lastValue = _this._a.__getValue();
    return _this;
  }

  (0, _createClass2.default)(AnimatedDiffClamp, [{
    key: "__makeNative",
    value: function __makeNative() {
      this._a.__makeNative();

      (0, _get2.default)((0, _getPrototypeOf2.default)(AnimatedDiffClamp.prototype), "__makeNative", this).call(this);
    }
  }, {
    key: "interpolate",
    value: function interpolate(config) {
      return new AnimatedInterpolation(this, config);
    }
  }, {
    key: "__getValue",
    value: function __getValue() {
      var value = this._a.__getValue();

      var diff = value - this._lastValue;
      this._lastValue = value;
      this._value = Math.min(Math.max(this._value + diff, this._min), this._max);
      return this._value;
    }
  }, {
    key: "__attach",
    value: function __attach() {
      this._a.__addChild(this);
    }
  }, {
    key: "__detach",
    value: function __detach() {
      this._a.__removeChild(this);

      (0, _get2.default)((0, _getPrototypeOf2.default)(AnimatedDiffClamp.prototype), "__detach", this).call(this);
    }
  }, {
    key: "__getNativeConfig",
    value: function __getNativeConfig() {
      return {
        type: 'diffclamp',
        input: this._a.__getNativeTag(),
        min: this._min,
        max: this._max
      };
    }
  }]);
  return AnimatedDiffClamp;
}(AnimatedWithChildren);

module.exports = AnimatedDiffClamp;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFuaW1hdGVkRGlmZkNsYW1wLmpzIl0sIm5hbWVzIjpbIkFuaW1hdGVkSW50ZXJwb2xhdGlvbiIsInJlcXVpcmUiLCJBbmltYXRlZE5vZGUiLCJBbmltYXRlZFdpdGhDaGlsZHJlbiIsIkFuaW1hdGVkRGlmZkNsYW1wIiwiYSIsIm1pbiIsIm1heCIsIl9hIiwiX21pbiIsIl9tYXgiLCJfdmFsdWUiLCJfbGFzdFZhbHVlIiwiX19nZXRWYWx1ZSIsIl9fbWFrZU5hdGl2ZSIsImNvbmZpZyIsInZhbHVlIiwiZGlmZiIsIk1hdGgiLCJfX2FkZENoaWxkIiwiX19yZW1vdmVDaGlsZCIsInR5cGUiLCJpbnB1dCIsIl9fZ2V0TmF0aXZlVGFnIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBU0E7Ozs7Ozs7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxxQkFBcUIsR0FBR0MsT0FBTyxDQUFDLHlCQUFELENBQXJDOztBQUNBLElBQU1DLFlBQVksR0FBR0QsT0FBTyxDQUFDLGdCQUFELENBQTVCOztBQUNBLElBQU1FLG9CQUFvQixHQUFHRixPQUFPLENBQUMsd0JBQUQsQ0FBcEM7O0lBSU1HLGlCOzs7QUFPSiw2QkFBWUMsQ0FBWixFQUE2QkMsR0FBN0IsRUFBMENDLEdBQTFDLEVBQXVEO0FBQUE7O0FBQUE7QUFDckQ7QUFFQSxVQUFLQyxFQUFMLEdBQVVILENBQVY7QUFDQSxVQUFLSSxJQUFMLEdBQVlILEdBQVo7QUFDQSxVQUFLSSxJQUFMLEdBQVlILEdBQVo7QUFDQSxVQUFLSSxNQUFMLEdBQWMsTUFBS0MsVUFBTCxHQUFrQixNQUFLSixFQUFMLENBQVFLLFVBQVIsRUFBaEM7QUFOcUQ7QUFPdEQ7Ozs7bUNBRWM7QUFDYixXQUFLTCxFQUFMLENBQVFNLFlBQVI7O0FBQ0E7QUFDRDs7O2dDQUVXQyxNLEVBQXdEO0FBQ2xFLGFBQU8sSUFBSWYscUJBQUosQ0FBMEIsSUFBMUIsRUFBZ0NlLE1BQWhDLENBQVA7QUFDRDs7O2lDQUVvQjtBQUNuQixVQUFNQyxLQUFLLEdBQUcsS0FBS1IsRUFBTCxDQUFRSyxVQUFSLEVBQWQ7O0FBQ0EsVUFBTUksSUFBSSxHQUFHRCxLQUFLLEdBQUcsS0FBS0osVUFBMUI7QUFDQSxXQUFLQSxVQUFMLEdBQWtCSSxLQUFsQjtBQUNBLFdBQUtMLE1BQUwsR0FBY08sSUFBSSxDQUFDWixHQUFMLENBQVNZLElBQUksQ0FBQ1gsR0FBTCxDQUFTLEtBQUtJLE1BQUwsR0FBY00sSUFBdkIsRUFBNkIsS0FBS1IsSUFBbEMsQ0FBVCxFQUFrRCxLQUFLQyxJQUF2RCxDQUFkO0FBQ0EsYUFBTyxLQUFLQyxNQUFaO0FBQ0Q7OzsrQkFFZ0I7QUFDZixXQUFLSCxFQUFMLENBQVFXLFVBQVIsQ0FBbUIsSUFBbkI7QUFDRDs7OytCQUVnQjtBQUNmLFdBQUtYLEVBQUwsQ0FBUVksYUFBUixDQUFzQixJQUF0Qjs7QUFDQTtBQUNEOzs7d0NBRXdCO0FBQ3ZCLGFBQU87QUFDTEMsUUFBQUEsSUFBSSxFQUFFLFdBREQ7QUFFTEMsUUFBQUEsS0FBSyxFQUFFLEtBQUtkLEVBQUwsQ0FBUWUsY0FBUixFQUZGO0FBR0xqQixRQUFBQSxHQUFHLEVBQUUsS0FBS0csSUFITDtBQUlMRixRQUFBQSxHQUFHLEVBQUUsS0FBS0c7QUFKTCxPQUFQO0FBTUQ7OztFQWpENkJQLG9COztBQW9EaENxQixNQUFNLENBQUNDLE9BQVAsR0FBaUJyQixpQkFBakIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmbG93XG4gKiBAZm9ybWF0XG4gKi9cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgQW5pbWF0ZWRJbnRlcnBvbGF0aW9uID0gcmVxdWlyZSgnLi9BbmltYXRlZEludGVycG9sYXRpb24nKTtcbmNvbnN0IEFuaW1hdGVkTm9kZSA9IHJlcXVpcmUoJy4vQW5pbWF0ZWROb2RlJyk7XG5jb25zdCBBbmltYXRlZFdpdGhDaGlsZHJlbiA9IHJlcXVpcmUoJy4vQW5pbWF0ZWRXaXRoQ2hpbGRyZW4nKTtcblxuaW1wb3J0IHR5cGUge0ludGVycG9sYXRpb25Db25maWdUeXBlfSBmcm9tICcuL0FuaW1hdGVkSW50ZXJwb2xhdGlvbic7XG5cbmNsYXNzIEFuaW1hdGVkRGlmZkNsYW1wIGV4dGVuZHMgQW5pbWF0ZWRXaXRoQ2hpbGRyZW4ge1xuICBfYTogQW5pbWF0ZWROb2RlO1xuICBfbWluOiBudW1iZXI7XG4gIF9tYXg6IG51bWJlcjtcbiAgX3ZhbHVlOiBudW1iZXI7XG4gIF9sYXN0VmFsdWU6IG51bWJlcjtcblxuICBjb25zdHJ1Y3RvcihhOiBBbmltYXRlZE5vZGUsIG1pbjogbnVtYmVyLCBtYXg6IG51bWJlcikge1xuICAgIHN1cGVyKCk7XG5cbiAgICB0aGlzLl9hID0gYTtcbiAgICB0aGlzLl9taW4gPSBtaW47XG4gICAgdGhpcy5fbWF4ID0gbWF4O1xuICAgIHRoaXMuX3ZhbHVlID0gdGhpcy5fbGFzdFZhbHVlID0gdGhpcy5fYS5fX2dldFZhbHVlKCk7XG4gIH1cblxuICBfX21ha2VOYXRpdmUoKSB7XG4gICAgdGhpcy5fYS5fX21ha2VOYXRpdmUoKTtcbiAgICBzdXBlci5fX21ha2VOYXRpdmUoKTtcbiAgfVxuXG4gIGludGVycG9sYXRlKGNvbmZpZzogSW50ZXJwb2xhdGlvbkNvbmZpZ1R5cGUpOiBBbmltYXRlZEludGVycG9sYXRpb24ge1xuICAgIHJldHVybiBuZXcgQW5pbWF0ZWRJbnRlcnBvbGF0aW9uKHRoaXMsIGNvbmZpZyk7XG4gIH1cblxuICBfX2dldFZhbHVlKCk6IG51bWJlciB7XG4gICAgY29uc3QgdmFsdWUgPSB0aGlzLl9hLl9fZ2V0VmFsdWUoKTtcbiAgICBjb25zdCBkaWZmID0gdmFsdWUgLSB0aGlzLl9sYXN0VmFsdWU7XG4gICAgdGhpcy5fbGFzdFZhbHVlID0gdmFsdWU7XG4gICAgdGhpcy5fdmFsdWUgPSBNYXRoLm1pbihNYXRoLm1heCh0aGlzLl92YWx1ZSArIGRpZmYsIHRoaXMuX21pbiksIHRoaXMuX21heCk7XG4gICAgcmV0dXJuIHRoaXMuX3ZhbHVlO1xuICB9XG5cbiAgX19hdHRhY2goKTogdm9pZCB7XG4gICAgdGhpcy5fYS5fX2FkZENoaWxkKHRoaXMpO1xuICB9XG5cbiAgX19kZXRhY2goKTogdm9pZCB7XG4gICAgdGhpcy5fYS5fX3JlbW92ZUNoaWxkKHRoaXMpO1xuICAgIHN1cGVyLl9fZGV0YWNoKCk7XG4gIH1cblxuICBfX2dldE5hdGl2ZUNvbmZpZygpOiBhbnkge1xuICAgIHJldHVybiB7XG4gICAgICB0eXBlOiAnZGlmZmNsYW1wJyxcbiAgICAgIGlucHV0OiB0aGlzLl9hLl9fZ2V0TmF0aXZlVGFnKCksXG4gICAgICBtaW46IHRoaXMuX21pbixcbiAgICAgIG1heDogdGhpcy5fbWF4LFxuICAgIH07XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBBbmltYXRlZERpZmZDbGFtcDtcbiJdfQ==