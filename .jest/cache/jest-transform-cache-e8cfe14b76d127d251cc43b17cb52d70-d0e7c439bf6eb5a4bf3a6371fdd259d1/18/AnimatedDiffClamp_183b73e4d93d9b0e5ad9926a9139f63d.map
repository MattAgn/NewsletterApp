{"version":3,"sources":["AnimatedDiffClamp.js"],"names":["AnimatedInterpolation","require","AnimatedNode","AnimatedWithChildren","AnimatedDiffClamp","a","min","max","_a","_min","_max","_value","_lastValue","__getValue","__makeNative","config","value","diff","Math","__addChild","__removeChild","type","input","__getNativeTag","module","exports"],"mappings":"AASA;;;;;;;;;;;;;;;;AAEA,IAAMA,qBAAqB,GAAGC,OAAO,CAAC,yBAAD,CAArC;;AACA,IAAMC,YAAY,GAAGD,OAAO,CAAC,gBAAD,CAA5B;;AACA,IAAME,oBAAoB,GAAGF,OAAO,CAAC,wBAAD,CAApC;;IAIMG,iB;;;AAOJ,6BAAYC,CAAZ,EAA6BC,GAA7B,EAA0CC,GAA1C,EAAuD;AAAA;;AAAA;AACrD;AAEA,UAAKC,EAAL,GAAUH,CAAV;AACA,UAAKI,IAAL,GAAYH,GAAZ;AACA,UAAKI,IAAL,GAAYH,GAAZ;AACA,UAAKI,MAAL,GAAc,MAAKC,UAAL,GAAkB,MAAKJ,EAAL,CAAQK,UAAR,EAAhC;AANqD;AAOtD;;;;mCAEc;AACb,WAAKL,EAAL,CAAQM,YAAR;;AACA;AACD;;;gCAEWC,M,EAAwD;AAClE,aAAO,IAAIf,qBAAJ,CAA0B,IAA1B,EAAgCe,MAAhC,CAAP;AACD;;;iCAEoB;AACnB,UAAMC,KAAK,GAAG,KAAKR,EAAL,CAAQK,UAAR,EAAd;;AACA,UAAMI,IAAI,GAAGD,KAAK,GAAG,KAAKJ,UAA1B;AACA,WAAKA,UAAL,GAAkBI,KAAlB;AACA,WAAKL,MAAL,GAAcO,IAAI,CAACZ,GAAL,CAASY,IAAI,CAACX,GAAL,CAAS,KAAKI,MAAL,GAAcM,IAAvB,EAA6B,KAAKR,IAAlC,CAAT,EAAkD,KAAKC,IAAvD,CAAd;AACA,aAAO,KAAKC,MAAZ;AACD;;;+BAEgB;AACf,WAAKH,EAAL,CAAQW,UAAR,CAAmB,IAAnB;AACD;;;+BAEgB;AACf,WAAKX,EAAL,CAAQY,aAAR,CAAsB,IAAtB;;AACA;AACD;;;wCAEwB;AACvB,aAAO;AACLC,QAAAA,IAAI,EAAE,WADD;AAELC,QAAAA,KAAK,EAAE,KAAKd,EAAL,CAAQe,cAAR,EAFF;AAGLjB,QAAAA,GAAG,EAAE,KAAKG,IAHL;AAILF,QAAAA,GAAG,EAAE,KAAKG;AAJL,OAAP;AAMD;;;EAjD6BP,oB;;AAoDhCqB,MAAM,CAACC,OAAP,GAAiBrB,iBAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n'use strict';\n\nconst AnimatedInterpolation = require('./AnimatedInterpolation');\nconst AnimatedNode = require('./AnimatedNode');\nconst AnimatedWithChildren = require('./AnimatedWithChildren');\n\nimport type {InterpolationConfigType} from './AnimatedInterpolation';\n\nclass AnimatedDiffClamp extends AnimatedWithChildren {\n  _a: AnimatedNode;\n  _min: number;\n  _max: number;\n  _value: number;\n  _lastValue: number;\n\n  constructor(a: AnimatedNode, min: number, max: number) {\n    super();\n\n    this._a = a;\n    this._min = min;\n    this._max = max;\n    this._value = this._lastValue = this._a.__getValue();\n  }\n\n  __makeNative() {\n    this._a.__makeNative();\n    super.__makeNative();\n  }\n\n  interpolate(config: InterpolationConfigType): AnimatedInterpolation {\n    return new AnimatedInterpolation(this, config);\n  }\n\n  __getValue(): number {\n    const value = this._a.__getValue();\n    const diff = value - this._lastValue;\n    this._lastValue = value;\n    this._value = Math.min(Math.max(this._value + diff, this._min), this._max);\n    return this._value;\n  }\n\n  __attach(): void {\n    this._a.__addChild(this);\n  }\n\n  __detach(): void {\n    this._a.__removeChild(this);\n    super.__detach();\n  }\n\n  __getNativeConfig(): any {\n    return {\n      type: 'diffclamp',\n      input: this._a.__getNativeTag(),\n      min: this._min,\n      max: this._max,\n    };\n  }\n}\n\nmodule.exports = AnimatedDiffClamp;\n"]}