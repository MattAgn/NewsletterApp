9c787c0d7fadc35e358de6ec3d995096
'use strict';

var normalizeColor = require('../Color/normalizeColor');

var colorPropType = function colorPropType(isRequired, props, propName, componentName, location, propFullName) {
  var color = props[propName];

  if (color === undefined || color === null) {
    if (isRequired) {
      return new Error('Required ' + location + ' `' + (propFullName || propName) + '` was not specified in `' + componentName + '`.');
    }

    return;
  }

  if (typeof color === 'number') {
    return;
  }

  if (normalizeColor(color) === null) {
    return new Error('Invalid ' + location + ' `' + (propFullName || propName) + '` supplied to `' + componentName + '`: ' + color + '\n' + "Valid color formats are\n  - '#f0f' (#rgb)\n  - '#f0fc' (#rgba)\n  - '#ff00ff' (#rrggbb)\n  - '#ff00ff00' (#rrggbbaa)\n  - 'rgb(255, 255, 255)'\n  - 'rgba(255, 255, 255, 1.0)'\n  - 'hsl(360, 100%, 100%)'\n  - 'hsla(360, 100%, 100%, 1.0)'\n  - 'transparent'\n  - 'red'\n  - 0xff00ff00 (0xrrggbbaa)\n");
  }
};

var ColorPropType = colorPropType.bind(null, false);
ColorPropType.isRequired = colorPropType.bind(null, true);
module.exports = ColorPropType;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRlcHJlY2F0ZWRDb2xvclByb3BUeXBlLmpzIl0sIm5hbWVzIjpbIm5vcm1hbGl6ZUNvbG9yIiwicmVxdWlyZSIsImNvbG9yUHJvcFR5cGUiLCJpc1JlcXVpcmVkIiwicHJvcHMiLCJwcm9wTmFtZSIsImNvbXBvbmVudE5hbWUiLCJsb2NhdGlvbiIsInByb3BGdWxsTmFtZSIsImNvbG9yIiwidW5kZWZpbmVkIiwiRXJyb3IiLCJDb2xvclByb3BUeXBlIiwiYmluZCIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQVNBOztBQUVBLElBQU1BLGNBQWMsR0FBR0MsT0FBTyxDQUFDLHlCQUFELENBQTlCOztBQUVBLElBQU1DLGFBQWEsR0FBRyxTQUFoQkEsYUFBZ0IsQ0FDcEJDLFVBRG9CLEVBRXBCQyxLQUZvQixFQUdwQkMsUUFIb0IsRUFJcEJDLGFBSm9CLEVBS3BCQyxRQUxvQixFQU1wQkMsWUFOb0IsRUFPcEI7QUFDQSxNQUFNQyxLQUFLLEdBQUdMLEtBQUssQ0FBQ0MsUUFBRCxDQUFuQjs7QUFDQSxNQUFJSSxLQUFLLEtBQUtDLFNBQVYsSUFBdUJELEtBQUssS0FBSyxJQUFyQyxFQUEyQztBQUN6QyxRQUFJTixVQUFKLEVBQWdCO0FBQ2QsYUFBTyxJQUFJUSxLQUFKLENBQ0wsY0FDRUosUUFERixHQUVFLElBRkYsSUFHR0MsWUFBWSxJQUFJSCxRQUhuQixJQUlFLDBCQUpGLEdBS0VDLGFBTEYsR0FNRSxJQVBHLENBQVA7QUFTRDs7QUFDRDtBQUNEOztBQUVELE1BQUksT0FBT0csS0FBUCxLQUFpQixRQUFyQixFQUErQjtBQUk3QjtBQUNEOztBQUVELE1BQUlULGNBQWMsQ0FBQ1MsS0FBRCxDQUFkLEtBQTBCLElBQTlCLEVBQW9DO0FBQ2xDLFdBQU8sSUFBSUUsS0FBSixDQUNMLGFBQ0VKLFFBREYsR0FFRSxJQUZGLElBR0dDLFlBQVksSUFBSUgsUUFIbkIsSUFJRSxpQkFKRixHQUtFQyxhQUxGLEdBTUUsS0FORixHQU9FRyxLQVBGLEdBUUUsSUFSRiwrU0FESyxDQUFQO0FBd0JEO0FBQ0YsQ0F6REQ7O0FBMkRBLElBQU1HLGFBQWEsR0FBR1YsYUFBYSxDQUFDVyxJQUFkLENBQW1CLElBQW5CLEVBQXlCLEtBQXpCLENBQXRCO0FBQ0FELGFBQWEsQ0FBQ1QsVUFBZCxHQUEyQkQsYUFBYSxDQUFDVyxJQUFkLENBQW1CLElBQW5CLEVBQXlCLElBQXpCLENBQTNCO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQkgsYUFBakIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmb3JtYXRcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmNvbnN0IG5vcm1hbGl6ZUNvbG9yID0gcmVxdWlyZSgnLi4vQ29sb3Ivbm9ybWFsaXplQ29sb3InKTtcblxuY29uc3QgY29sb3JQcm9wVHlwZSA9IGZ1bmN0aW9uKFxuICBpc1JlcXVpcmVkLFxuICBwcm9wcyxcbiAgcHJvcE5hbWUsXG4gIGNvbXBvbmVudE5hbWUsXG4gIGxvY2F0aW9uLFxuICBwcm9wRnVsbE5hbWUsXG4pIHtcbiAgY29uc3QgY29sb3IgPSBwcm9wc1twcm9wTmFtZV07XG4gIGlmIChjb2xvciA9PT0gdW5kZWZpbmVkIHx8IGNvbG9yID09PSBudWxsKSB7XG4gICAgaWYgKGlzUmVxdWlyZWQpIHtcbiAgICAgIHJldHVybiBuZXcgRXJyb3IoXG4gICAgICAgICdSZXF1aXJlZCAnICtcbiAgICAgICAgICBsb2NhdGlvbiArXG4gICAgICAgICAgJyBgJyArXG4gICAgICAgICAgKHByb3BGdWxsTmFtZSB8fCBwcm9wTmFtZSkgK1xuICAgICAgICAgICdgIHdhcyBub3Qgc3BlY2lmaWVkIGluIGAnICtcbiAgICAgICAgICBjb21wb25lbnROYW1lICtcbiAgICAgICAgICAnYC4nLFxuICAgICAgKTtcbiAgICB9XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgaWYgKHR5cGVvZiBjb2xvciA9PT0gJ251bWJlcicpIHtcbiAgICAvLyBEZXZlbG9wZXJzIHNob3VsZCBub3QgdXNlIGEgbnVtYmVyLCBidXQgd2UgYXJlIHVzaW5nIHRoZSBwcm9wIHR5cGVcbiAgICAvLyBib3RoIGZvciB1c2VyIHByb3ZpZGVkIGNvbG9ycyBhbmQgZm9yIHRyYW5zZm9ybWVkIG9uZXMuIFRoaXMgaXNuJ3QgaWRlYWxcbiAgICAvLyBhbmQgc2hvdWxkIGJlIGZpeGVkIGJ1dCB3aWxsIGRvIGZvciBub3cuLi5cbiAgICByZXR1cm47XG4gIH1cblxuICBpZiAobm9ybWFsaXplQ29sb3IoY29sb3IpID09PSBudWxsKSB7XG4gICAgcmV0dXJuIG5ldyBFcnJvcihcbiAgICAgICdJbnZhbGlkICcgK1xuICAgICAgICBsb2NhdGlvbiArXG4gICAgICAgICcgYCcgK1xuICAgICAgICAocHJvcEZ1bGxOYW1lIHx8IHByb3BOYW1lKSArXG4gICAgICAgICdgIHN1cHBsaWVkIHRvIGAnICtcbiAgICAgICAgY29tcG9uZW50TmFtZSArXG4gICAgICAgICdgOiAnICtcbiAgICAgICAgY29sb3IgK1xuICAgICAgICAnXFxuJyArXG4gICAgICAgIGBWYWxpZCBjb2xvciBmb3JtYXRzIGFyZVxuICAtICcjZjBmJyAoI3JnYilcbiAgLSAnI2YwZmMnICgjcmdiYSlcbiAgLSAnI2ZmMDBmZicgKCNycmdnYmIpXG4gIC0gJyNmZjAwZmYwMCcgKCNycmdnYmJhYSlcbiAgLSAncmdiKDI1NSwgMjU1LCAyNTUpJ1xuICAtICdyZ2JhKDI1NSwgMjU1LCAyNTUsIDEuMCknXG4gIC0gJ2hzbCgzNjAsIDEwMCUsIDEwMCUpJ1xuICAtICdoc2xhKDM2MCwgMTAwJSwgMTAwJSwgMS4wKSdcbiAgLSAndHJhbnNwYXJlbnQnXG4gIC0gJ3JlZCdcbiAgLSAweGZmMDBmZjAwICgweHJyZ2diYmFhKVxuYCxcbiAgICApO1xuICB9XG59O1xuXG5jb25zdCBDb2xvclByb3BUeXBlID0gY29sb3JQcm9wVHlwZS5iaW5kKG51bGwsIGZhbHNlIC8qIGlzUmVxdWlyZWQgKi8pO1xuQ29sb3JQcm9wVHlwZS5pc1JlcXVpcmVkID0gY29sb3JQcm9wVHlwZS5iaW5kKG51bGwsIHRydWUgLyogaXNSZXF1aXJlZCAqLyk7XG5cbm1vZHVsZS5leHBvcnRzID0gQ29sb3JQcm9wVHlwZTtcbiJdfQ==