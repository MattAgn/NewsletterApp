{"version":3,"sources":["withNextInputAutoFocus.js"],"names":["withNextInputAutoFocusContextType","setInput","PropTypes","func","handleSubmitEditing","getReturnKeyType","getInputs","children","React","Children","toArray","reduce","partialInputs","child","props","concat","name","withNextInputAutoFocusForm","WrappedComponent","submitAfterLastInput","WithNextInputAutoFocusForm","inputRefs","getInputPosition","inputs","findIndex","input","getChildContext","component","inputPosition","nextInputs","slice","nextFocusableInput","find","element","focus","formik","submitForm","isLastInput","length","PureComponent","childContextTypes","withNextInputAutoFocusInput","Input","WithNextInputAutoFocusInput","context","onSubmitEditing","Component","contextTypes"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport withFormik from \"./withFormik\";\n\nconst withNextInputAutoFocusContextType = {\n  setInput: PropTypes.func,\n  handleSubmitEditing: PropTypes.func,\n  getReturnKeyType: PropTypes.func\n};\n\nconst getInputs = children =>\n  React.Children.toArray(children).reduce((partialInputs, child) => {\n    if (child && child.props && child.props.children) {\n      return partialInputs.concat(getInputs(child.props.children));\n    }\n    if (child && child.props && !!child.props.name)\n      return partialInputs.concat(child);\n    return partialInputs;\n  }, []);\n\nexport const withNextInputAutoFocusForm = (\n  WrappedComponent,\n  { submitAfterLastInput } = { submitAfterLastInput: true }\n) => {\n  class WithNextInputAutoFocusForm extends React.PureComponent {\n    static childContextTypes = withNextInputAutoFocusContextType;\n\n    constructor(props) {\n      super(props);\n      const { children } = props;\n      this.inputs = getInputs(children || []);\n    }\n\n    inputs;\n    inputNameMap;\n    inputRefs = {};\n\n    getInputPosition = name =>\n      this.inputs.findIndex(input => input.props.name === name);\n\n    getChildContext = () => ({\n      setInput: (name, component) => {\n        this.inputRefs[name] = component;\n      },\n      handleSubmitEditing: name => {\n        const inputPosition = this.getInputPosition(name);\n        const nextInputs = this.inputs.slice(inputPosition + 1);\n        const nextFocusableInput = nextInputs.find(\n          element =>\n            this.inputRefs[element.props.name] &&\n            this.inputRefs[element.props.name].focus\n        );\n\n        if (nextFocusableInput) {\n          this.inputRefs[nextFocusableInput.props.name].focus();\n        } else {\n          if (submitAfterLastInput) this.props.formik.submitForm();\n        }\n      },\n      getReturnKeyType: name => {\n        const inputPosition = this.getInputPosition(name);\n        const isLastInput = inputPosition === this.inputs.length - 1;\n\n        return isLastInput ? \"done\" : \"next\";\n      }\n    });\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  return withFormik(WithNextInputAutoFocusForm);\n};\n\nexport const withNextInputAutoFocusInput = Input => {\n  class WithNextInputAutoFocusInput extends React.Component<\n    $FlowFixMeProps,\n    $FlowFixMeState\n  > {\n    static contextTypes = withNextInputAutoFocusContextType;\n\n    setInput = component => {\n      this.context.setInput(this.props.name, component);\n    };\n\n    onSubmitEditing = () => {\n      this.context.handleSubmitEditing(this.props.name);\n      if (this.props.onSubmitEditing) this.props.onSubmitEditing();\n    };\n\n    render() {\n      const { getReturnKeyType } = this.context;\n      const { name } = this.props;\n\n      return (\n        <Input\n          returnKeyType={getReturnKeyType(name)}\n          {...this.props}\n          ref={this.setInput}\n          onSubmitEditing={this.onSubmitEditing}\n        />\n      );\n    }\n  }\n\n  return WithNextInputAutoFocusInput;\n};\n"]}