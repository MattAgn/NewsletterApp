{"version":3,"sources":["deprecatedCreateStrictShapeTypeChecker.js"],"names":["invariant","require","merge","deprecatedCreateStrictShapeTypeChecker","shapeTypes","checkType","isRequired","props","propName","componentName","location","propValue","propType","locationName","allKeys","rest","key","checker","JSON","stringify","Object","keys","error","message","chainedCheckType","bind","module","exports"],"mappings":"AAUA;;AAEA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AACA,IAAMC,KAAK,GAAGD,OAAO,CAAC,sBAAD,CAArB;;AAEA,SAASE,sCAAT,CAAgDC,UAAhD,EAEmC;AACjC,WAASC,SAAT,CACEC,UADF,EAEEC,KAFF,EAGEC,QAHF,EAIEC,aAJF,EAKEC,QALF,EAOE;AACA,QAAI,CAACH,KAAK,CAACC,QAAD,CAAV,EAAsB;AACpB,UAAIF,UAAJ,EAAgB;AACdN,QAAAA,SAAS,CACP,KADO,EAEP,sBAAqBQ,QAArB,sCACOC,aADP,QAFO,CAAT;AAKD;;AACD;AACD;;AACD,QAAME,SAAS,GAAGJ,KAAK,CAACC,QAAD,CAAvB;AACA,QAAMI,QAAQ,GAAG,OAAOD,SAAxB;AACA,QAAME,YAAY,GAAGH,QAAQ,IAAI,WAAjC;;AACA,QAAIE,QAAQ,KAAK,QAAjB,EAA2B;AACzBZ,MAAAA,SAAS,CACP,KADO,EAEP,aAAWa,YAAX,UAA6BL,QAA7B,mBAAqDI,QAArD,6BACmBH,aADnB,2BAFO,CAAT;AAKD;;AAGD,QAAMK,OAAO,GAAGZ,KAAK,CAACK,KAAK,CAACC,QAAD,CAAN,EAAkBJ,UAAlB,CAArB;;AAvBA,sCADGW,IACH;AADGA,MAAAA,IACH;AAAA;;AAwBA,SAAK,IAAMC,KAAX,IAAkBF,OAAlB,EAA2B;AACzB,UAAMG,OAAO,GAAGb,UAAU,CAACY,KAAD,CAA1B;;AACA,UAAI,CAACC,OAAL,EAAc;AACZjB,QAAAA,SAAS,CACP,KADO,EAEP,mBAAiBQ,QAAjB,cAAmCQ,KAAnC,uBAA0DP,aAA1D,UACE,gBADF,GAEES,IAAI,CAACC,SAAL,CAAeZ,KAAK,CAACC,QAAD,CAApB,EAAgC,IAAhC,EAAsC,IAAtC,CAFF,GAGE,gBAHF,GAIEU,IAAI,CAACC,SAAL,CAAeC,MAAM,CAACC,IAAP,CAAYjB,UAAZ,CAAf,EAAwC,IAAxC,EAA8C,IAA9C,CANK,CAAT;AAQD;;AACD,UAAMkB,KAAK,GAAGL,OAAO,MAAP,UAAQN,SAAR,EAAmBK,KAAnB,EAAwBP,aAAxB,EAAuCC,QAAvC,SAAoDK,IAApD,EAAd;;AACA,UAAIO,KAAJ,EAAW;AACTtB,QAAAA,SAAS,CACP,KADO,EAEPsB,KAAK,CAACC,OAAN,GACE,gBADF,GAEEL,IAAI,CAACC,SAAL,CAAeZ,KAAK,CAACC,QAAD,CAApB,EAAgC,IAAhC,EAAsC,IAAtC,CAJK,CAAT;AAMD;AACF;AACF;;AACD,WAASgB,gBAAT,CACEjB,KADF,EAEEC,QAFF,EAGEC,aAHF,EAIEC,QAJF,EAMU;AAAA,uCADLK,IACK;AADLA,MAAAA,IACK;AAAA;;AACR,WAAOV,SAAS,MAAT,UAAU,KAAV,EAAiBE,KAAjB,EAAwBC,QAAxB,EAAkCC,aAAlC,EAAiDC,QAAjD,SAA8DK,IAA9D,EAAP;AACD;;AACDS,EAAAA,gBAAgB,CAAClB,UAAjB,GAA8BD,SAAS,CAACoB,IAAV,CAAe,IAAf,EAAqB,IAArB,CAA9B;AACA,SAAOD,gBAAP;AACD;;AAEDE,MAAM,CAACC,OAAP,GAAiBxB,sCAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\n'use strict';\n\nconst invariant = require('invariant');\nconst merge = require('../vendor/core/merge');\n\nfunction deprecatedCreateStrictShapeTypeChecker(shapeTypes: {\n  [key: string]: ReactPropsCheckType,\n}): ReactPropsChainableTypeChecker {\n  function checkType(\n    isRequired,\n    props,\n    propName,\n    componentName,\n    location?,\n    ...rest\n  ) {\n    if (!props[propName]) {\n      if (isRequired) {\n        invariant(\n          false,\n          `Required object \\`${propName}\\` was not specified in ` +\n            `\\`${componentName}\\`.`,\n        );\n      }\n      return;\n    }\n    const propValue = props[propName];\n    const propType = typeof propValue;\n    const locationName = location || '(unknown)';\n    if (propType !== 'object') {\n      invariant(\n        false,\n        `Invalid ${locationName} \\`${propName}\\` of type \\`${propType}\\` ` +\n          `supplied to \\`${componentName}\\`, expected \\`object\\`.`,\n      );\n    }\n    // We need to check all keys in case some are required but missing from\n    // props.\n    const allKeys = merge(props[propName], shapeTypes);\n    for (const key in allKeys) {\n      const checker = shapeTypes[key];\n      if (!checker) {\n        invariant(\n          false,\n          `Invalid props.${propName} key \\`${key}\\` supplied to \\`${componentName}\\`.` +\n            '\\nBad object: ' +\n            JSON.stringify(props[propName], null, '  ') +\n            '\\nValid keys: ' +\n            JSON.stringify(Object.keys(shapeTypes), null, '  '),\n        );\n      }\n      const error = checker(propValue, key, componentName, location, ...rest);\n      if (error) {\n        invariant(\n          false,\n          error.message +\n            '\\nBad object: ' +\n            JSON.stringify(props[propName], null, '  '),\n        );\n      }\n    }\n  }\n  function chainedCheckType(\n    props: {[key: string]: any},\n    propName: string,\n    componentName: string,\n    location?: string,\n    ...rest\n  ): ?Error {\n    return checkType(false, props, propName, componentName, location, ...rest);\n  }\n  chainedCheckType.isRequired = checkType.bind(null, true);\n  return chainedCheckType;\n}\n\nmodule.exports = deprecatedCreateStrictShapeTypeChecker;\n"]}