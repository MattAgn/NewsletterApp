151d6509e01bdfd7731ef11ee1079d64
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var generateMatcher = require('./generate-matcher');

var sanitizeRoute = function sanitizeRoute(route) {
  route = (0, _extends2.default)({}, route);

  if (route.method) {
    route.method = route.method.toLowerCase();
  }

  route.identifier = route.name || route.matcher;
  return route;
};

var validateRoute = function validateRoute(route) {
  if (!('response' in route)) {
    throw new Error('fetch-mock: Each route must define a response');
  }

  if (!route.matcher) {
    throw new Error('fetch-mock: Each route must specify a string, regex or function to match calls to fetch');
  }
};

var limitMatcher = function limitMatcher(route) {
  if (!route.repeat) {
    return;
  }

  var matcher = route.matcher;
  var timesLeft = route.repeat;

  route.matcher = function (url, options) {
    var match = timesLeft && matcher(url, options);

    if (match) {
      timesLeft--;
      return true;
    }
  };

  route.reset = function () {
    return timesLeft = route.repeat;
  };
};

module.exports = function (route) {
  validateRoute(route);
  route = sanitizeRoute(route);
  route.matcher = generateMatcher(route);
  limitMatcher(route);
  return route;
};

module.exports.sanitizeRoute = sanitizeRoute;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBpbGUtcm91dGUuanMiXSwibmFtZXMiOlsiZ2VuZXJhdGVNYXRjaGVyIiwicmVxdWlyZSIsInNhbml0aXplUm91dGUiLCJyb3V0ZSIsIm1ldGhvZCIsInRvTG93ZXJDYXNlIiwiaWRlbnRpZmllciIsIm5hbWUiLCJtYXRjaGVyIiwidmFsaWRhdGVSb3V0ZSIsIkVycm9yIiwibGltaXRNYXRjaGVyIiwicmVwZWF0IiwidGltZXNMZWZ0IiwidXJsIiwib3B0aW9ucyIsIm1hdGNoIiwicmVzZXQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOzs7O0FBQUEsSUFBTUEsZUFBZSxHQUFHQyxPQUFPLENBQUMsb0JBQUQsQ0FBL0I7O0FBRUEsSUFBTUMsYUFBYSxHQUFHLFNBQWhCQSxhQUFnQixDQUFBQyxLQUFLLEVBQUk7QUFDOUJBLEVBQUFBLEtBQUssR0FBRyx1QkFBYyxFQUFkLEVBQWtCQSxLQUFsQixDQUFSOztBQUVBLE1BQUlBLEtBQUssQ0FBQ0MsTUFBVixFQUFrQjtBQUNqQkQsSUFBQUEsS0FBSyxDQUFDQyxNQUFOLEdBQWVELEtBQUssQ0FBQ0MsTUFBTixDQUFhQyxXQUFiLEVBQWY7QUFDQTs7QUFDREYsRUFBQUEsS0FBSyxDQUFDRyxVQUFOLEdBQW1CSCxLQUFLLENBQUNJLElBQU4sSUFBY0osS0FBSyxDQUFDSyxPQUF2QztBQUVBLFNBQU9MLEtBQVA7QUFDQSxDQVREOztBQVdBLElBQU1NLGFBQWEsR0FBRyxTQUFoQkEsYUFBZ0IsQ0FBQU4sS0FBSyxFQUFJO0FBQzlCLE1BQUksRUFBRSxjQUFjQSxLQUFoQixDQUFKLEVBQTRCO0FBQzNCLFVBQU0sSUFBSU8sS0FBSixDQUFVLCtDQUFWLENBQU47QUFDQTs7QUFFRCxNQUFJLENBQUNQLEtBQUssQ0FBQ0ssT0FBWCxFQUFvQjtBQUNuQixVQUFNLElBQUlFLEtBQUosQ0FDTCx5RkFESyxDQUFOO0FBR0E7QUFDRCxDQVZEOztBQVlBLElBQU1DLFlBQVksR0FBRyxTQUFmQSxZQUFlLENBQUFSLEtBQUssRUFBSTtBQUM3QixNQUFJLENBQUNBLEtBQUssQ0FBQ1MsTUFBWCxFQUFtQjtBQUNsQjtBQUNBOztBQUVELE1BQU1KLE9BQU8sR0FBR0wsS0FBSyxDQUFDSyxPQUF0QjtBQUNBLE1BQUlLLFNBQVMsR0FBR1YsS0FBSyxDQUFDUyxNQUF0Qjs7QUFDQVQsRUFBQUEsS0FBSyxDQUFDSyxPQUFOLEdBQWdCLFVBQUNNLEdBQUQsRUFBTUMsT0FBTixFQUFrQjtBQUNqQyxRQUFNQyxLQUFLLEdBQUdILFNBQVMsSUFBSUwsT0FBTyxDQUFDTSxHQUFELEVBQU1DLE9BQU4sQ0FBbEM7O0FBQ0EsUUFBSUMsS0FBSixFQUFXO0FBQ1ZILE1BQUFBLFNBQVM7QUFDVCxhQUFPLElBQVA7QUFDQTtBQUNELEdBTkQ7O0FBT0FWLEVBQUFBLEtBQUssQ0FBQ2MsS0FBTixHQUFjO0FBQUEsV0FBT0osU0FBUyxHQUFHVixLQUFLLENBQUNTLE1BQXpCO0FBQUEsR0FBZDtBQUNBLENBZkQ7O0FBaUJBTSxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQWhCLEtBQUssRUFBSTtBQUN6Qk0sRUFBQUEsYUFBYSxDQUFDTixLQUFELENBQWI7QUFDQUEsRUFBQUEsS0FBSyxHQUFHRCxhQUFhLENBQUNDLEtBQUQsQ0FBckI7QUFDQUEsRUFBQUEsS0FBSyxDQUFDSyxPQUFOLEdBQWdCUixlQUFlLENBQUNHLEtBQUQsQ0FBL0I7QUFDQVEsRUFBQUEsWUFBWSxDQUFDUixLQUFELENBQVo7QUFDQSxTQUFPQSxLQUFQO0FBQ0EsQ0FORDs7QUFRQWUsTUFBTSxDQUFDQyxPQUFQLENBQWVqQixhQUFmLEdBQStCQSxhQUEvQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGdlbmVyYXRlTWF0Y2hlciA9IHJlcXVpcmUoJy4vZ2VuZXJhdGUtbWF0Y2hlcicpO1xuXG5jb25zdCBzYW5pdGl6ZVJvdXRlID0gcm91dGUgPT4ge1xuXHRyb3V0ZSA9IE9iamVjdC5hc3NpZ24oe30sIHJvdXRlKTtcblxuXHRpZiAocm91dGUubWV0aG9kKSB7XG5cdFx0cm91dGUubWV0aG9kID0gcm91dGUubWV0aG9kLnRvTG93ZXJDYXNlKCk7XG5cdH1cblx0cm91dGUuaWRlbnRpZmllciA9IHJvdXRlLm5hbWUgfHwgcm91dGUubWF0Y2hlcjtcblxuXHRyZXR1cm4gcm91dGU7XG59O1xuXG5jb25zdCB2YWxpZGF0ZVJvdXRlID0gcm91dGUgPT4ge1xuXHRpZiAoISgncmVzcG9uc2UnIGluIHJvdXRlKSkge1xuXHRcdHRocm93IG5ldyBFcnJvcignZmV0Y2gtbW9jazogRWFjaCByb3V0ZSBtdXN0IGRlZmluZSBhIHJlc3BvbnNlJyk7XG5cdH1cblxuXHRpZiAoIXJvdXRlLm1hdGNoZXIpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoXG5cdFx0XHQnZmV0Y2gtbW9jazogRWFjaCByb3V0ZSBtdXN0IHNwZWNpZnkgYSBzdHJpbmcsIHJlZ2V4IG9yIGZ1bmN0aW9uIHRvIG1hdGNoIGNhbGxzIHRvIGZldGNoJ1xuXHRcdCk7XG5cdH1cbn07XG5cbmNvbnN0IGxpbWl0TWF0Y2hlciA9IHJvdXRlID0+IHtcblx0aWYgKCFyb3V0ZS5yZXBlYXQpIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHRjb25zdCBtYXRjaGVyID0gcm91dGUubWF0Y2hlcjtcblx0bGV0IHRpbWVzTGVmdCA9IHJvdXRlLnJlcGVhdDtcblx0cm91dGUubWF0Y2hlciA9ICh1cmwsIG9wdGlvbnMpID0+IHtcblx0XHRjb25zdCBtYXRjaCA9IHRpbWVzTGVmdCAmJiBtYXRjaGVyKHVybCwgb3B0aW9ucyk7XG5cdFx0aWYgKG1hdGNoKSB7XG5cdFx0XHR0aW1lc0xlZnQtLTtcblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH1cblx0fTtcblx0cm91dGUucmVzZXQgPSAoKSA9PiAodGltZXNMZWZ0ID0gcm91dGUucmVwZWF0KTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gcm91dGUgPT4ge1xuXHR2YWxpZGF0ZVJvdXRlKHJvdXRlKTtcblx0cm91dGUgPSBzYW5pdGl6ZVJvdXRlKHJvdXRlKTtcblx0cm91dGUubWF0Y2hlciA9IGdlbmVyYXRlTWF0Y2hlcihyb3V0ZSk7XG5cdGxpbWl0TWF0Y2hlcihyb3V0ZSk7XG5cdHJldHVybiByb3V0ZTtcbn07XG5cbm1vZHVsZS5leHBvcnRzLnNhbml0aXplUm91dGUgPSBzYW5pdGl6ZVJvdXRlO1xuIl19