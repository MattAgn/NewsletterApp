5ec1dbd93b6f5ede4350eaeb4ba8ae98
"use strict";

exports.__esModule = true;
exports["default"] = void 0;

var _batch = require("./batch");

var CLEARED = null;
var nullListeners = {
  notify: function notify() {}
};

function createListenerCollection() {
  var batch = (0, _batch.getBatch)();
  var current = [];
  var next = [];
  return {
    clear: function clear() {
      next = CLEARED;
      current = CLEARED;
    },
    notify: function notify() {
      var listeners = current = next;
      batch(function () {
        for (var i = 0; i < listeners.length; i++) {
          listeners[i]();
        }
      });
    },
    get: function get() {
      return next;
    },
    subscribe: function subscribe(listener) {
      var isSubscribed = true;
      if (next === current) next = current.slice();
      next.push(listener);
      return function unsubscribe() {
        if (!isSubscribed || current === CLEARED) return;
        isSubscribed = false;
        if (next === current) next = current.slice();
        next.splice(next.indexOf(listener), 1);
      };
    }
  };
}

var Subscription = function () {
  function Subscription(store, parentSub) {
    this.store = store;
    this.parentSub = parentSub;
    this.unsubscribe = null;
    this.listeners = nullListeners;
    this.handleChangeWrapper = this.handleChangeWrapper.bind(this);
  }

  var _proto = Subscription.prototype;

  _proto.addNestedSub = function addNestedSub(listener) {
    this.trySubscribe();
    return this.listeners.subscribe(listener);
  };

  _proto.notifyNestedSubs = function notifyNestedSubs() {
    this.listeners.notify();
  };

  _proto.handleChangeWrapper = function handleChangeWrapper() {
    if (this.onStateChange) {
      this.onStateChange();
    }
  };

  _proto.isSubscribed = function isSubscribed() {
    return Boolean(this.unsubscribe);
  };

  _proto.trySubscribe = function trySubscribe() {
    if (!this.unsubscribe) {
      this.unsubscribe = this.parentSub ? this.parentSub.addNestedSub(this.handleChangeWrapper) : this.store.subscribe(this.handleChangeWrapper);
      this.listeners = createListenerCollection();
    }
  };

  _proto.tryUnsubscribe = function tryUnsubscribe() {
    if (this.unsubscribe) {
      this.unsubscribe();
      this.unsubscribe = null;
      this.listeners.clear();
      this.listeners = nullListeners;
    }
  };

  return Subscription;
}();

exports["default"] = Subscription;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlN1YnNjcmlwdGlvbi5qcyJdLCJuYW1lcyI6WyJleHBvcnRzIiwiX19lc01vZHVsZSIsIl9iYXRjaCIsInJlcXVpcmUiLCJDTEVBUkVEIiwibnVsbExpc3RlbmVycyIsIm5vdGlmeSIsImNyZWF0ZUxpc3RlbmVyQ29sbGVjdGlvbiIsImJhdGNoIiwiZ2V0QmF0Y2giLCJjdXJyZW50IiwibmV4dCIsImNsZWFyIiwibGlzdGVuZXJzIiwiaSIsImxlbmd0aCIsImdldCIsInN1YnNjcmliZSIsImxpc3RlbmVyIiwiaXNTdWJzY3JpYmVkIiwic2xpY2UiLCJwdXNoIiwidW5zdWJzY3JpYmUiLCJzcGxpY2UiLCJpbmRleE9mIiwiU3Vic2NyaXB0aW9uIiwic3RvcmUiLCJwYXJlbnRTdWIiLCJoYW5kbGVDaGFuZ2VXcmFwcGVyIiwiYmluZCIsIl9wcm90byIsInByb3RvdHlwZSIsImFkZE5lc3RlZFN1YiIsInRyeVN1YnNjcmliZSIsIm5vdGlmeU5lc3RlZFN1YnMiLCJvblN0YXRlQ2hhbmdlIiwiQm9vbGVhbiIsInRyeVVuc3Vic2NyaWJlIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQUEsT0FBTyxDQUFDQyxVQUFSLEdBQXFCLElBQXJCO0FBQ0FELE9BQU8sQ0FBQyxTQUFELENBQVAsR0FBcUIsS0FBSyxDQUExQjs7QUFFQSxJQUFJRSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxTQUFELENBQXBCOztBQUtBLElBQUlDLE9BQU8sR0FBRyxJQUFkO0FBQ0EsSUFBSUMsYUFBYSxHQUFHO0FBQ2xCQyxFQUFBQSxNQUFNLEVBQUUsU0FBU0EsTUFBVCxHQUFrQixDQUFFO0FBRFYsQ0FBcEI7O0FBSUEsU0FBU0Msd0JBQVQsR0FBb0M7QUFDbEMsTUFBSUMsS0FBSyxHQUFHLENBQUMsR0FBR04sTUFBTSxDQUFDTyxRQUFYLEdBQVo7QUFHQSxNQUFJQyxPQUFPLEdBQUcsRUFBZDtBQUNBLE1BQUlDLElBQUksR0FBRyxFQUFYO0FBQ0EsU0FBTztBQUNMQyxJQUFBQSxLQUFLLEVBQUUs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LENBQWpCLEdBQXlFLEtBQUtGLEtBQUwsQ0FBV1QsU0FBWCxDQUFxQixLQUFLVyxtQkFBMUIsQ0FBNUY7QUFDQSxXQUFLZixTQUFMLEdBQWlCTix3QkFBd0IsRUFBekM7QUFDRDtBQUNGLEdBTEQ7O0FBT0F1QixFQUFBQSxNQUFNLENBQUNPLGNBQVAsR0FBd0IsU0FBU0EsY0FBVCxHQUEwQjtBQUNoRCxRQUFJLEtBQUtmLFdBQVQsRUFBc0I7QUFDcEIsV0FBS0EsV0FBTDtBQUNBLFdBQUtBLFdBQUwsR0FBbUIsSUFBbkI7QUFDQSxXQUFLVCxTQUFMLENBQWVELEtBQWY7QUFDQSxXQUFLQyxTQUFMLEdBQWlCUixhQUFqQjtBQUNEO0FBQ0YsR0FQRDs7QUFTQSxTQUFPb0IsWUFBUDtBQUNELENBL0NELEVBRkE7O0FBbURBekIsT0FBTyxDQUFDLFNBQUQsQ0FBUCxHQUFxQnlCLFlBQXJCIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5leHBvcnRzW1wiZGVmYXVsdFwiXSA9IHZvaWQgMDtcblxudmFyIF9iYXRjaCA9IHJlcXVpcmUoXCIuL2JhdGNoXCIpO1xuXG4vLyBlbmNhcHN1bGF0ZXMgdGhlIHN1YnNjcmlwdGlvbiBsb2dpYyBmb3IgY29ubmVjdGluZyBhIGNvbXBvbmVudCB0byB0aGUgcmVkdXggc3RvcmUsIGFzXG4vLyB3ZWxsIGFzIG5lc3Rpbmcgc3Vic2NyaXB0aW9ucyBvZiBkZXNjZW5kYW50IGNvbXBvbmVudHMsIHNvIHRoYXQgd2UgY2FuIGVuc3VyZSB0aGVcbi8vIGFuY2VzdG9yIGNvbXBvbmVudHMgcmUtcmVuZGVyIGJlZm9yZSBkZXNjZW5kYW50c1xudmFyIENMRUFSRUQgPSBudWxsO1xudmFyIG51bGxMaXN0ZW5lcnMgPSB7XG4gIG5vdGlmeTogZnVuY3Rpb24gbm90aWZ5KCkge31cbn07XG5cbmZ1bmN0aW9uIGNyZWF0ZUxpc3RlbmVyQ29sbGVjdGlvbigpIHtcbiAgdmFyIGJhdGNoID0gKDAsIF9iYXRjaC5nZXRCYXRjaCkoKTsgLy8gdGhlIGN1cnJlbnQvbmV4dCBwYXR0ZXJuIGlzIGNvcGllZCBmcm9tIHJlZHV4J3MgY3JlYXRlU3RvcmUgY29kZS5cbiAgLy8gVE9ETzogcmVmYWN0b3IrZXhwb3NlIHRoYXQgY29kZSB0byBiZSByZXVzYWJsZSBoZXJlP1xuXG4gIHZhciBjdXJyZW50ID0gW107XG4gIHZhciBuZXh0ID0gW107XG4gIHJldHVybiB7XG4gICAgY2xlYXI6IGZ1bmN0aW9uIGNsZWFyKCkge1xuICAgICAgbmV4dCA9IENMRUFSRUQ7XG4gICAgICBjdXJyZW50ID0gQ0xFQVJFRDtcbiAgICB9LFxuICAgIG5vdGlmeTogZnVuY3Rpb24gbm90aWZ5KCkge1xuICAgICAgdmFyIGxpc3RlbmVycyA9IGN1cnJlbnQgPSBuZXh0O1xuICAgICAgYmF0Y2goZnVuY3Rpb24gKCkge1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3RlbmVycy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgIGxpc3RlbmVyc1tpXSgpO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9LFxuICAgIGdldDogZnVuY3Rpb24gZ2V0KCkge1xuICAgICAgcmV0dXJuIG5leHQ7XG4gICAgfSxcbiAgICBzdWJzY3JpYmU6IGZ1bmN0aW9uIHN1YnNjcmliZShsaXN0ZW5lcikge1xuICAgICAgdmFyIGlzU3Vic2NyaWJlZCA9IHRydWU7XG4gICAgICBpZiAobmV4dCA9PT0gY3VycmVudCkgbmV4dCA9IGN1cnJlbnQuc2xpY2UoKTtcbiAgICAgIG5leHQucHVzaChsaXN0ZW5lcik7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gdW5zdWJzY3JpYmUoKSB7XG4gICAgICAgIGlmICghaXNTdWJzY3JpYmVkIHx8IGN1cnJlbnQgPT09IENMRUFSRUQpIHJldHVybjtcbiAgICAgICAgaXNTdWJzY3JpYmVkID0gZmFsc2U7XG4gICAgICAgIGlmIChuZXh0ID09PSBjdXJyZW50KSBuZXh0ID0gY3VycmVudC5zbGljZSgpO1xuICAgICAgICBuZXh0LnNwbGljZShuZXh0LmluZGV4T2YobGlzdGVuZXIpLCAxKTtcbiAgICAgIH07XG4gICAgfVxuICB9O1xufVxuXG52YXIgU3Vic2NyaXB0aW9uID1cbi8qI19fUFVSRV9fKi9cbmZ1bmN0aW9uICgpIHtcbiAgZnVuY3Rpb24gU3Vic2NyaXB0aW9uKHN0b3JlLCBwYXJlbnRTdWIpIHtcbiAgICB0aGlzLnN0b3JlID0gc3RvcmU7XG4gICAgdGhpcy5wYXJlbnRTdWIgPSBwYXJlbnRTdWI7XG4gICAgdGhpcy51bnN1YnNjcmliZSA9IG51bGw7XG4gICAgdGhpcy5saXN0ZW5lcnMgPSBudWxsTGlzdGVuZXJzO1xuICAgIHRoaXMuaGFuZGxlQ2hhbmdlV3JhcHBlciA9IHRoaXMuaGFuZGxlQ2hhbmdlV3JhcHBlci5iaW5kKHRoaXMpO1xuICB9XG5cbiAgdmFyIF9wcm90byA9IFN1YnNjcmlwdGlvbi5wcm90b3R5cGU7XG5cbiAgX3Byb3RvLmFkZE5lc3RlZFN1YiA9IGZ1bmN0aW9uIGFkZE5lc3RlZFN1YihsaXN0ZW5lcikge1xuICAgIHRoaXMudHJ5U3Vic2NyaWJlKCk7XG4gICAgcmV0dXJuIHRoaXMubGlzdGVuZXJzLnN1YnNjcmliZShsaXN0ZW5lcik7XG4gIH07XG5cbiAgX3Byb3RvLm5vdGlmeU5lc3RlZFN1YnMgPSBmdW5jdGlvbiBub3RpZnlOZXN0ZWRTdWJzKCkge1xuICAgIHRoaXMubGlzdGVuZXJzLm5vdGlmeSgpO1xuICB9O1xuXG4gIF9wcm90by5oYW5kbGVDaGFuZ2VXcmFwcGVyID0gZnVuY3Rpb24gaGFuZGxlQ2hhbmdlV3JhcHBlcigpIHtcbiAgICBpZiAodGhpcy5vblN0YXRlQ2hhbmdlKSB7XG4gICAgICB0aGlzLm9uU3RhdGVDaGFuZ2UoKTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLmlzU3Vic2NyaWJlZCA9IGZ1bmN0aW9uIGlzU3Vic2NyaWJlZCgpIHtcbiAgICByZXR1cm4gQm9vbGVhbih0aGlzLnVuc3Vic2NyaWJlKTtcbiAgfTtcblxuICBfcHJvdG8udHJ5U3Vic2NyaWJlID0gZnVuY3Rpb24gdHJ5U3Vic2NyaWJlKCkge1xuICAgIGlmICghdGhpcy51bnN1YnNjcmliZSkge1xuICAgICAgdGhpcy51bnN1YnNjcmliZSA9IHRoaXMucGFyZW50U3ViID8gdGhpcy5wYXJlbnRTdWIuYWRkTmVzdGVkU3ViKHRoaXMuaGFuZGxlQ2hhbmdlV3JhcHBlcikgOiB0aGlzLnN0b3JlLnN1YnNjcmliZSh0aGlzLmhhbmRsZUNoYW5nZVdyYXBwZXIpO1xuICAgICAgdGhpcy5saXN0ZW5lcnMgPSBjcmVhdGVMaXN0ZW5lckNvbGxlY3Rpb24oKTtcbiAgICB9XG4gIH07XG5cbiAgX3Byb3RvLnRyeVVuc3Vic2NyaWJlID0gZnVuY3Rpb24gdHJ5VW5zdWJzY3JpYmUoKSB7XG4gICAgaWYgKHRoaXMudW5zdWJzY3JpYmUpIHtcbiAgICAgIHRoaXMudW5zdWJzY3JpYmUoKTtcbiAgICAgIHRoaXMudW5zdWJzY3JpYmUgPSBudWxsO1xuICAgICAgdGhpcy5saXN0ZW5lcnMuY2xlYXIoKTtcbiAgICAgIHRoaXMubGlzdGVuZXJzID0gbnVsbExpc3RlbmVycztcbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIFN1YnNjcmlwdGlvbjtcbn0oKTtcblxuZXhwb3J0c1tcImRlZmF1bHRcIl0gPSBTdWJzY3JpcHRpb247Il19