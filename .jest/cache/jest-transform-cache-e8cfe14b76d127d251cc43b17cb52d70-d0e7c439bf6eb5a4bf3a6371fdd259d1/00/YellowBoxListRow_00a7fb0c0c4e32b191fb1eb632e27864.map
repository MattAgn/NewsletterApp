{"version":3,"sources":["YellowBoxListRow.js"],"names":["React","require","StyleSheet","Text","YellowBoxPressable","View","YellowBoxCategory","YellowBoxStyle","YellowBoxWarning","YellowBoxListRow","_handlePress","props","onPress","category","nextProps","prevProps","warnings","length","some","prevWarning","index","styles","root","content","metaText","bodyText","render","message","substitutionText","Component","GUTTER","hairlineWidth","HEIGHT","create","height","justifyContent","marginTop","paddingHorizontal","alignItems","flexDirection","color","getTextColor","flex","fontSize","includeFontPadding","lineHeight","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow strict-local\n * @format\n */\n\n'use strict';\n\nconst React = require('react');\nconst StyleSheet = require('../../StyleSheet/StyleSheet');\nconst Text = require('../../Text/Text');\nconst YellowBoxPressable = require('./YellowBoxPressable');\nconst View = require('../../Components/View/View');\nconst YellowBoxCategory = require('../Data/YellowBoxCategory');\nconst YellowBoxStyle = require('./YellowBoxStyle');\nconst YellowBoxWarning = require('../Data/YellowBoxWarning');\n\nimport type {Category} from '../Data/YellowBoxCategory';\n\ntype Props = $ReadOnly<{|\n  category: Category,\n  warnings: $ReadOnlyArray<YellowBoxWarning>,\n  onPress: (category: Category) => void,\n|}>;\n\nclass YellowBoxListRow extends React.Component<Props> {\n  static GUTTER = StyleSheet.hairlineWidth;\n  static HEIGHT = 48;\n\n  shouldComponentUpdate(nextProps: Props): boolean {\n    const prevProps = this.props;\n    return (\n      prevProps.category !== nextProps.category ||\n      prevProps.onPress !== nextProps.onPress ||\n      prevProps.warnings.length !== nextProps.warnings.length ||\n      prevProps.warnings.some(\n        (prevWarning, index) => prevWarning !== nextProps[index],\n      )\n    );\n  }\n\n  render(): React.Node {\n    const {warnings} = this.props;\n\n    return (\n      <YellowBoxPressable onPress={this._handlePress} style={styles.root}>\n        <View style={styles.content}>\n          {warnings.length < 2 ? null : (\n            <Text style={styles.metaText}>{'(' + warnings.length + ') '}</Text>\n          )}\n          <Text numberOfLines={2} style={styles.bodyText}>\n            {YellowBoxCategory.render(\n              warnings[warnings.length - 1].message,\n              styles.substitutionText,\n            )}\n          </Text>\n        </View>\n      </YellowBoxPressable>\n    );\n  }\n\n  _handlePress = () => {\n    this.props.onPress(this.props.category);\n  };\n}\n\nconst styles = StyleSheet.create({\n  root: {\n    height: YellowBoxListRow.HEIGHT,\n    justifyContent: 'center',\n    marginTop: YellowBoxListRow.GUTTER,\n    paddingHorizontal: 12,\n  },\n  content: {\n    alignItems: 'flex-start',\n    flexDirection: 'row',\n  },\n  bodyText: {\n    color: YellowBoxStyle.getTextColor(1),\n    flex: 1,\n    fontSize: 14,\n    includeFontPadding: false,\n    lineHeight: 18,\n  },\n  metaText: {\n    color: YellowBoxStyle.getTextColor(0.5),\n    fontSize: 14,\n    includeFontPadding: false,\n    lineHeight: 18,\n  },\n  substitutionText: {\n    color: YellowBoxStyle.getTextColor(0.6),\n  },\n});\n\nmodule.exports = YellowBoxListRow;\n"]}