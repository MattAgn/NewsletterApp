{"file":"/Users/matthieu/projects/learning/NewsletterApp/src/basic-version/pages/Home/Home.tsx","mappings":";;;;;;;;;;;;AAAA,+CAA2D;AAC3D,sEAA8C;AAC9C,oDAA4B;AAE5B,uDAAoD;AACpD,oDAAiD;AACjD,gEAA0E;AAC1E,2EAAqF;AAExE,QAAA,IAAI,GAAsB,GAAG,EAAE;IAC1C,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,gBAAQ,CAAC,EAAE,CAAC,CAAC;IACvC,MAAM,CAAC,SAAS,EAAE,YAAY,CAAC,GAAG,gBAAQ,CAAiB,IAAI,CAAC,CAAC;IAEjE,MAAM,UAAU,GAAG,GAAG,EAAE;QACtB,gBAAM,CAAC,4BAAmB,CAAC;aACxB,IAAI,CAAC,EAAE,KAAK,EAAE,CAAC;aACf,GAAG,EAAE;aACL,IAAI,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;aAC9B,KAAK,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;IACtC,CAAC,CAAC;IAEF,OAAO,CACL,8BAAC,4BAAS;QACR,8BAAC,uBAAI;YACH,8BAAC,wBAAK,QAAE,iBAAO,CAAC,SAAS,CAAS;YAClC,8BAAC,wBAAK,IAAC,WAAW,EAAE,iBAAO,CAAC,gBAAgB,EAAE,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE,QAAQ,GAAI;YACtF,8BAAC,eAAM,IAAC,KAAK,EAAE,iBAAO,CAAC,aAAa,EAAE,OAAO,EAAE,UAAU,GAAI;YAC5D,SAAS,IAAI,8BAAC,cAAc,QAAE,iBAAO,CAAC,sBAAsB,CAAkB;YAC9E,SAAS,KAAK,KAAK,IAAI,8BAAC,YAAY,QAAE,iBAAO,CAAC,UAAU,CAAgB,CACpE,CACG,CACb,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,cAAc,GAAG,gBAAM,CAAC,IAAI,CAAA;;CAEjC,CAAC;AAEF,MAAM,YAAY,GAAG,gBAAM,CAAC,IAAI,CAAA;;CAE/B,CAAC","names":[],"sources":["/Users/matthieu/projects/learning/NewsletterApp/src/basic-version/pages/Home/Home.tsx"],"sourcesContent":["import React, { useState, FunctionComponent } from 'react';\nimport styled from 'styled-components/native';\nimport wretch from 'wretch';\n\nimport { Button } from '../../../components/Button';\nimport { wording } from '../../../utils/wording';\nimport { NEWSLETTER_ENDPOINT } from '../../../complex-version/api/config';\nimport { Container, Card, Title, Input } from '../../../components/StyledComponents';\n\nexport const Home: FunctionComponent = () => {\n  const [email, setEmail] = useState('');\n  const [isSuccess, setIsSuccess] = useState<boolean | null>(null);\n\n  const onValidate = () => {\n    wretch(NEWSLETTER_ENDPOINT)\n      .post({ email })\n      .res()\n      .then(() => setIsSuccess(true))\n      .catch(() => setIsSuccess(false));\n  };\n\n  return (\n    <Container>\n      <Card>\n        <Title>{wording.subscribe}</Title>\n        <Input placeholder={wording.emailPlaceholder} value={email} onChangeText={setEmail} />\n        <Button title={wording.validateEmail} onPress={onValidate} />\n        {isSuccess && <SuccessMessage>{wording.subscriptionSuccessful}</SuccessMessage>}\n        {isSuccess === false && <ErrorMessage>{wording.basicError}</ErrorMessage>}\n      </Card>\n    </Container>\n  );\n};\n\nconst SuccessMessage = styled.Text`\n  color: green;\n`;\n\nconst ErrorMessage = styled.Text`\n  color: red;\n`;\n"],"version":3}