fc3bc5b88e82fa80f0c65c76c5e509e6
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var Animation = require('./Animation');

var _require = require('../NativeAnimatedHelper'),
    shouldUseNativeDriver = _require.shouldUseNativeDriver;

var DecayAnimation = function (_Animation) {
  (0, _inherits2.default)(DecayAnimation, _Animation);

  function DecayAnimation(config) {
    var _config$deceleration, _config$isInteraction, _config$iterations;

    var _this;

    (0, _classCallCheck2.default)(this, DecayAnimation);
    _this = (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(DecayAnimation).call(this));
    _this._deceleration = (_config$deceleration = config.deceleration) != null ? _config$deceleration : 0.998;
    _this._velocity = config.velocity;
    _this._useNativeDriver = shouldUseNativeDriver(config);
    _this.__isInteraction = (_config$isInteraction = config.isInteraction) != null ? _config$isInteraction : !_this._useNativeDriver;
    _this.__iterations = (_config$iterations = config.iterations) != null ? _config$iterations : 1;
    return _this;
  }

  (0, _createClass2.default)(DecayAnimation, [{
    key: "__getNativeAnimationConfig",
    value: function __getNativeAnimationConfig() {
      return {
        type: 'decay',
        deceleration: this._deceleration,
        velocity: this._velocity,
        iterations: this.__iterations
      };
    }
  }, {
    key: "start",
    value: function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {
      this.__active = true;
      this._lastValue = fromValue;
      this._fromValue = fromValue;
      this._onUpdate = onUpdate;
      this.__onEnd = onEnd;
      this._startTime = Date.now();

      if (this._useNativeDriver) {
        this.__startNativeAnimation(animatedValue);
      } else {
        this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
      }
    }
  }, {
    key: "onUpdate",
    value: function onUpdate() {
      var now = Date.now();
      var value = this._fromValue + this._velocity / (1 - this._deceleration) * (1 - Math.exp(-(1 - this._deceleration) * (now - this._startTime)));

      this._onUpdate(value);

      if (Math.abs(this._lastValue - value) < 0.1) {
        this.__debouncedOnEnd({
          finished: true
        });

        return;
      }

      this._lastValue = value;

      if (this.__active) {
        this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));
      }
    }
  }, {
    key: "stop",
    value: function stop() {
      (0, _get2.default)((0, _getPrototypeOf2.default)(DecayAnimation.prototype), "stop", this).call(this);
      this.__active = false;
      global.cancelAnimationFrame(this._animationFrame);

      this.__debouncedOnEnd({
        finished: false
      });
    }
  }]);
  return DecayAnimation;
}(Animation);

module.exports = DecayAnimation;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkRlY2F5QW5pbWF0aW9uLmpzIl0sIm5hbWVzIjpbIkFuaW1hdGlvbiIsInJlcXVpcmUiLCJzaG91bGRVc2VOYXRpdmVEcml2ZXIiLCJEZWNheUFuaW1hdGlvbiIsImNvbmZpZyIsIl9kZWNlbGVyYXRpb24iLCJkZWNlbGVyYXRpb24iLCJfdmVsb2NpdHkiLCJ2ZWxvY2l0eSIsIl91c2VOYXRpdmVEcml2ZXIiLCJfX2lzSW50ZXJhY3Rpb24iLCJpc0ludGVyYWN0aW9uIiwiX19pdGVyYXRpb25zIiwiaXRlcmF0aW9ucyIsInR5cGUiLCJmcm9tVmFsdWUiLCJvblVwZGF0ZSIsIm9uRW5kIiwicHJldmlvdXNBbmltYXRpb24iLCJhbmltYXRlZFZhbHVlIiwiX19hY3RpdmUiLCJfbGFzdFZhbHVlIiwiX2Zyb21WYWx1ZSIsIl9vblVwZGF0ZSIsIl9fb25FbmQiLCJfc3RhcnRUaW1lIiwiRGF0ZSIsIm5vdyIsIl9fc3RhcnROYXRpdmVBbmltYXRpb24iLCJfYW5pbWF0aW9uRnJhbWUiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJiaW5kIiwidmFsdWUiLCJNYXRoIiwiZXhwIiwiYWJzIiwiX19kZWJvdW5jZWRPbkVuZCIsImZpbmlzaGVkIiwiZ2xvYmFsIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFTQTs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLElBQU1BLFNBQVMsR0FBR0MsT0FBTyxDQUFDLGFBQUQsQ0FBekI7O2VBRWdDQSxPQUFPLENBQUMseUJBQUQsQztJQUFoQ0MscUIsWUFBQUEscUI7O0lBZURDLGM7OztBQVVKLDBCQUFZQyxNQUFaLEVBQWdEO0FBQUE7O0FBQUE7O0FBQUE7QUFDOUM7QUFDQSxVQUFLQyxhQUFMLDJCQUFxQkQsTUFBTSxDQUFDRSxZQUE1QixtQ0FBNEMsS0FBNUM7QUFDQSxVQUFLQyxTQUFMLEdBQWlCSCxNQUFNLENBQUNJLFFBQXhCO0FBQ0EsVUFBS0MsZ0JBQUwsR0FBd0JQLHFCQUFxQixDQUFDRSxNQUFELENBQTdDO0FBQ0EsVUFBS00sZUFBTCw0QkFBdUJOLE1BQU0sQ0FBQ08sYUFBOUIsb0NBQStDLENBQUMsTUFBS0YsZ0JBQXJEO0FBQ0EsVUFBS0csWUFBTCx5QkFBb0JSLE1BQU0sQ0FBQ1MsVUFBM0IsaUNBQXlDLENBQXpDO0FBTjhDO0FBTy9DOzs7O2lEQUU0QjtBQUMzQixhQUFPO0FBQ0xDLFFBQUFBLElBQUksRUFBRSxPQUREO0FBRUxSLFFBQUFBLFlBQVksRUFBRSxLQUFLRCxhQUZkO0FBR0xHLFFBQUFBLFFBQVEsRUFBRSxLQUFLRCxTQUhWO0FBSUxNLFFBQUFBLFVBQVUsRUFBRSxLQUFLRDtBQUpaLE9BQVA7QUFNRDs7OzBCQUdDRyxTLEVBQ0FDLFEsRUFDQUMsSyxFQUNBQyxpQixFQUNBQyxhLEVBQ007QUFDTixXQUFLQyxRQUFMLEdBQWdCLElBQWhCO0FBQ0EsV0FBS0MsVUFBTCxHQUFrQk4sU0FBbEI7QUFDQSxXQUFLTyxVQUFMLEdBQWtCUCxTQUFsQjtBQUNBLFdBQUtRLFNBQUwsR0FBaUJQLFFBQWpCO0FBQ0EsV0FBS1EsT0FBTCxHQUFlUCxLQUFmO0FBQ0EsV0FBS1EsVUFBTCxHQUFrQkMsSUFBSSxDQUFDQyxHQUFMLEVBQWxCOztBQUNBLFVBQUksS0FBS2xCLGdCQUFULEVBQTJCO0FBQ3pCLGFBQUttQixzQkFBTCxDQUE0QlQsYUFBNUI7QUFDRCxPQUZELE1BRU87QUFDTCxhQUFLVSxlQUFMLEdBQXVCQyxxQkFBcUIsQ0FBQyxLQUFLZCxRQUFMLENBQWNlLElBQWQsQ0FBbUIsSUFBbkIsQ0FBRCxDQUE1QztBQUNEO0FBQ0Y7OzsrQkFFZ0I7QUFDZixVQUFNSixHQUFHLEdBQUdELElBQUksQ0FBQ0MsR0FBTCxFQUFaO0FBRUEsVUFBTUssS0FBSyxHQUNULEtBQUtWLFVBQUwsR0FDQyxLQUFLZixTQUFMLElBQWtCLElBQUksS0FBS0YsYUFBM0IsQ0FBRCxJQUNHLElBQUk0QixJQUFJLENBQUNDLEdBQUwsQ0FBUyxFQUFFLElBQUksS0FBSzdCLGFBQVgsS0FBNkJzQixHQUFHLEdBQUcsS0FBS0YsVUFBeEMsQ0FBVCxDQURQLENBRkY7O0FBS0EsV0FBS0YsU0FBTCxDQUFlUyxLQUFmOztBQUVBLFVBQUlDLElBQUksQ0FBQ0UsR0FBTCxDQUFTLEtBQUtkLFVBQUwsR0FBa0JXLEtBQTNCLElBQW9DLEdBQXhDLEVBQTZDO0FBQzNDLGFBQUtJLGdCQUFMLENBQXNCO0FBQUNDLFVBQUFBLFFBQVEsRUFBRTtBQUFYLFNBQXRCOztBQUNBO0FBQ0Q7O0FBRUQsV0FBS2hCLFVBQUwsR0FBa0JXLEtBQWxCOztBQUNBLFVBQUksS0FBS1osUUFBVCxFQUFtQjtBQUNqQixhQUFLUyxlQUFMLEdBQXVCQyxxQkFBcUIsQ0FBQyxLQUFLZCxRQUFMLENBQWNlLElBQWQsQ0FBbUIsSUFBbkIsQ0FBRCxDQUE1QztBQUNEO0FBQ0Y7OzsyQkFFWTtBQUNYO0FBQ0EsV0FBS1gsUUFBTCxHQUFnQixLQUFoQjtBQUNBa0IsTUFBQUEsTUFBTSxDQUFDQyxvQkFBUCxDQUE0QixLQUFLVixlQUFqQzs7QUFDQSxXQUFLTyxnQkFBTCxDQUFzQjtBQUFDQyxRQUFBQSxRQUFRLEVBQUU7QUFBWCxPQUF0QjtBQUNEOzs7RUExRTBCckMsUzs7QUE2RTdCd0MsTUFBTSxDQUFDQyxPQUFQLEdBQWlCdEMsY0FBakIiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgRmFjZWJvb2ssIEluYy4gYW5kIGl0cyBhZmZpbGlhdGVzLlxuICpcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlIGZvdW5kIGluIHRoZVxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLlxuICpcbiAqIEBmbG93XG4gKiBAZm9ybWF0XG4gKi9cbid1c2Ugc3RyaWN0JztcblxuY29uc3QgQW5pbWF0aW9uID0gcmVxdWlyZSgnLi9BbmltYXRpb24nKTtcblxuY29uc3Qge3Nob3VsZFVzZU5hdGl2ZURyaXZlcn0gPSByZXF1aXJlKCcuLi9OYXRpdmVBbmltYXRlZEhlbHBlcicpO1xuXG5pbXBvcnQgdHlwZSB7QW5pbWF0aW9uQ29uZmlnLCBFbmRDYWxsYmFja30gZnJvbSAnLi9BbmltYXRpb24nO1xuaW1wb3J0IHR5cGUgQW5pbWF0ZWRWYWx1ZSBmcm9tICcuLi9ub2Rlcy9BbmltYXRlZFZhbHVlJztcblxuZXhwb3J0IHR5cGUgRGVjYXlBbmltYXRpb25Db25maWcgPSBBbmltYXRpb25Db25maWcgJiB7XG4gIHZlbG9jaXR5OiBudW1iZXIgfCB7eDogbnVtYmVyLCB5OiBudW1iZXJ9LFxuICBkZWNlbGVyYXRpb24/OiBudW1iZXIsXG59O1xuXG5leHBvcnQgdHlwZSBEZWNheUFuaW1hdGlvbkNvbmZpZ1NpbmdsZSA9IEFuaW1hdGlvbkNvbmZpZyAmIHtcbiAgdmVsb2NpdHk6IG51bWJlcixcbiAgZGVjZWxlcmF0aW9uPzogbnVtYmVyLFxufTtcblxuY2xhc3MgRGVjYXlBbmltYXRpb24gZXh0ZW5kcyBBbmltYXRpb24ge1xuICBfc3RhcnRUaW1lOiBudW1iZXI7XG4gIF9sYXN0VmFsdWU6IG51bWJlcjtcbiAgX2Zyb21WYWx1ZTogbnVtYmVyO1xuICBfZGVjZWxlcmF0aW9uOiBudW1iZXI7XG4gIF92ZWxvY2l0eTogbnVtYmVyO1xuICBfb25VcGRhdGU6ICh2YWx1ZTogbnVtYmVyKSA9PiB2b2lkO1xuICBfYW5pbWF0aW9uRnJhbWU6IGFueTtcbiAgX3VzZU5hdGl2ZURyaXZlcjogYm9vbGVhbjtcblxuICBjb25zdHJ1Y3Rvcihjb25maWc6IERlY2F5QW5pbWF0aW9uQ29uZmlnU2luZ2xlKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLl9kZWNlbGVyYXRpb24gPSBjb25maWcuZGVjZWxlcmF0aW9uID8/IDAuOTk4O1xuICAgIHRoaXMuX3ZlbG9jaXR5ID0gY29uZmlnLnZlbG9jaXR5O1xuICAgIHRoaXMuX3VzZU5hdGl2ZURyaXZlciA9IHNob3VsZFVzZU5hdGl2ZURyaXZlcihjb25maWcpO1xuICAgIHRoaXMuX19pc0ludGVyYWN0aW9uID0gY29uZmlnLmlzSW50ZXJhY3Rpb24gPz8gIXRoaXMuX3VzZU5hdGl2ZURyaXZlcjtcbiAgICB0aGlzLl9faXRlcmF0aW9ucyA9IGNvbmZpZy5pdGVyYXRpb25zID8/IDE7XG4gIH1cblxuICBfX2dldE5hdGl2ZUFuaW1hdGlvbkNvbmZpZygpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdHlwZTogJ2RlY2F5JyxcbiAgICAgIGRlY2VsZXJhdGlvbjogdGhpcy5fZGVjZWxlcmF0aW9uLFxuICAgICAgdmVsb2NpdHk6IHRoaXMuX3ZlbG9jaXR5LFxuICAgICAgaXRlcmF0aW9uczogdGhpcy5fX2l0ZXJhdGlvbnMsXG4gICAgfTtcbiAgfVxuXG4gIHN0YXJ0KFxuICAgIGZyb21WYWx1ZTogbnVtYmVyLFxuICAgIG9uVXBkYXRlOiAodmFsdWU6IG51bWJlcikgPT4gdm9pZCxcbiAgICBvbkVuZDogP0VuZENhbGxiYWNrLFxuICAgIHByZXZpb3VzQW5pbWF0aW9uOiA/QW5pbWF0aW9uLFxuICAgIGFuaW1hdGVkVmFsdWU6IEFuaW1hdGVkVmFsdWUsXG4gICk6IHZvaWQge1xuICAgIHRoaXMuX19hY3RpdmUgPSB0cnVlO1xuICAgIHRoaXMuX2xhc3RWYWx1ZSA9IGZyb21WYWx1ZTtcbiAgICB0aGlzLl9mcm9tVmFsdWUgPSBmcm9tVmFsdWU7XG4gICAgdGhpcy5fb25VcGRhdGUgPSBvblVwZGF0ZTtcbiAgICB0aGlzLl9fb25FbmQgPSBvbkVuZDtcbiAgICB0aGlzLl9zdGFydFRpbWUgPSBEYXRlLm5vdygpO1xuICAgIGlmICh0aGlzLl91c2VOYXRpdmVEcml2ZXIpIHtcbiAgICAgIHRoaXMuX19zdGFydE5hdGl2ZUFuaW1hdGlvbihhbmltYXRlZFZhbHVlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdGhpcy5fYW5pbWF0aW9uRnJhbWUgPSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy5vblVwZGF0ZS5iaW5kKHRoaXMpKTtcbiAgICB9XG4gIH1cblxuICBvblVwZGF0ZSgpOiB2b2lkIHtcbiAgICBjb25zdCBub3cgPSBEYXRlLm5vdygpO1xuXG4gICAgY29uc3QgdmFsdWUgPVxuICAgICAgdGhpcy5fZnJvbVZhbHVlICtcbiAgICAgICh0aGlzLl92ZWxvY2l0eSAvICgxIC0gdGhpcy5fZGVjZWxlcmF0aW9uKSkgKlxuICAgICAgICAoMSAtIE1hdGguZXhwKC0oMSAtIHRoaXMuX2RlY2VsZXJhdGlvbikgKiAobm93IC0gdGhpcy5fc3RhcnRUaW1lKSkpO1xuXG4gICAgdGhpcy5fb25VcGRhdGUodmFsdWUpO1xuXG4gICAgaWYgKE1hdGguYWJzKHRoaXMuX2xhc3RWYWx1ZSAtIHZhbHVlKSA8IDAuMSkge1xuICAgICAgdGhpcy5fX2RlYm91bmNlZE9uRW5kKHtmaW5pc2hlZDogdHJ1ZX0pO1xuICAgICAgcmV0dXJuO1xuICAgIH1cblxuICAgIHRoaXMuX2xhc3RWYWx1ZSA9IHZhbHVlO1xuICAgIGlmICh0aGlzLl9fYWN0aXZlKSB7XG4gICAgICB0aGlzLl9hbmltYXRpb25GcmFtZSA9IHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aGlzLm9uVXBkYXRlLmJpbmQodGhpcykpO1xuICAgIH1cbiAgfVxuXG4gIHN0b3AoKTogdm9pZCB7XG4gICAgc3VwZXIuc3RvcCgpO1xuICAgIHRoaXMuX19hY3RpdmUgPSBmYWxzZTtcbiAgICBnbG9iYWwuY2FuY2VsQW5pbWF0aW9uRnJhbWUodGhpcy5fYW5pbWF0aW9uRnJhbWUpO1xuICAgIHRoaXMuX19kZWJvdW5jZWRPbkVuZCh7ZmluaXNoZWQ6IGZhbHNlfSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBEZWNheUFuaW1hdGlvbjtcbiJdfQ==